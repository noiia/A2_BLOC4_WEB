{"version":3,"sources":["<anon>"],"sourcesContent":["/**\n * @license Highstock JS v11.4.0 (2024-03-04)\n *\n * Highcharts Stock as a plugin for Highcharts\n *\n * (c) 2010-2024 Torstein Honsi\n *\n * License: www.highcharts.com/license\n */\n(function (factory) {\n    if (typeof module === 'object' && module.exports) {\n        factory['default'] = factory;\n        module.exports = factory;\n    } else if (typeof define === 'function' && define.amd) {\n        define('highcharts/modules/stock', ['highcharts'], function (Highcharts) {\n            factory(Highcharts);\n            factory.Highcharts = Highcharts;\n            return factory;\n        });\n    } else {\n        factory(typeof Highcharts !== 'undefined' ? Highcharts : undefined);\n    }\n}(function (Highcharts) {\n    'use strict';\n    var _modules = Highcharts ? Highcharts._modules : {};\n    function _registerModule(obj, path, args, fn) {\n        if (!obj.hasOwnProperty(path)) {\n            obj[path] = fn.apply(null, args);\n\n            if (typeof CustomEvent === 'function') {\n                window.dispatchEvent(new CustomEvent(\n                    'HighchartsModuleLoaded',\n                    { detail: { path: path, module: obj[path] } }\n                ));\n            }\n        }\n    }\n    _registerModule(_modules, 'Series/DataModifyComposition.js', [_modules['Core/Axis/Axis.js'], _modules['Core/Series/Point.js'], _modules['Core/Series/Series.js'], _modules['Core/Utilities.js']], function (Axis, Point, Series, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var pointTooltipFormatter = Point.prototype.tooltipFormatter;\n        var addEvent = U.addEvent, arrayMax = U.arrayMax, arrayMin = U.arrayMin, correctFloat = U.correctFloat, defined = U.defined, isArray = U.isArray, isNumber = U.isNumber, isString = U.isString, pick = U.pick;\n        /* *\n         *\n         *  Composition\n         *\n         * */\n        var DataModifyComposition;\n        (function (DataModifyComposition) {\n            /* *\n             *\n             *  Declarations\n             *\n             * */\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Extends the series, axis and point classes with\n             * compare and cumulative support.\n             *\n             * @private\n             *\n             * @param SeriesClass\n             * Series class to use.\n             *\n             * @param AxisClass\n             * Axis class to extend.\n             *\n             * @param PointClass\n             * Point class to use.\n             */\n            function compose(SeriesClass, AxisClass, PointClass) {\n                var axisProto = AxisClass.prototype, pointProto = PointClass.prototype, seriesProto = SeriesClass.prototype;\n                if (!seriesProto.setCompare) {\n                    seriesProto.setCompare = seriesSetCompare;\n                    seriesProto.setCumulative = seriesSetCumulative;\n                    addEvent(SeriesClass, 'afterInit', afterInit);\n                    addEvent(SeriesClass, 'afterGetExtremes', afterGetExtremes);\n                    addEvent(SeriesClass, 'afterProcessData', afterProcessData);\n                }\n                if (!axisProto.setCompare) {\n                    axisProto.setCompare = axisSetCompare;\n                    axisProto.setModifier = setModifier;\n                    axisProto.setCumulative = axisSetCumulative;\n                    pointProto.tooltipFormatter = tooltipFormatter;\n                }\n                return SeriesClass;\n            }\n            DataModifyComposition.compose = compose;\n            /* ********************************************************************** *\n             *  Start shared compare and cumulative logic                             *\n             * ********************************************************************** */\n            /**\n             * Shared code for the axis.setCompare() and the axis.setCumulative()\n             * methods. Inits the 'compare' or the 'cumulative' mode.\n             * @private\n             */\n            function setModifier(mode, modeState, redraw) {\n                if (!this.isXAxis) {\n                    this.series.forEach(function (series) {\n                        if (mode === 'compare' &&\n                            typeof modeState !== 'boolean') {\n                            series.setCompare(modeState, false);\n                        }\n                        else if (mode === 'cumulative' &&\n                            !isString(modeState)) {\n                            series.setCumulative(modeState, false);\n                        }\n                    });\n                    if (pick(redraw, true)) {\n                        this.chart.redraw();\n                    }\n                }\n            }\n            /**\n             * Extend the tooltip formatter by adding support for the point.change\n             * variable as well as the changeDecimals option.\n             *\n             * @ignore\n             * @function Highcharts.Point#tooltipFormatter\n             *\n             * @param {string} pointFormat\n             */\n            function tooltipFormatter(pointFormat) {\n                var point = this, numberFormatter = point.series.chart.numberFormatter, replace = function (value) {\n                    pointFormat = pointFormat.replace('{point.' + value + '}', (point[value] > 0 && value === 'change' ? '+' : '') +\n                        numberFormatter(point[value], pick(point.series.tooltipOptions.changeDecimals, 2)));\n                };\n                if (defined(point.change)) {\n                    replace('change');\n                }\n                if (defined(point.cumulativeSum)) {\n                    replace('cumulativeSum');\n                }\n                return pointTooltipFormatter.apply(this, [pointFormat]);\n            }\n            /**\n             * Extend series.init by adding a methods to modify the y values used\n             * for plotting on the y axis. For compare mode, this method is called both\n             * from the axis when finding dataMin and dataMax,\n             * and from the series.translate method.\n             *\n             * @ignore\n             * @function Highcharts.Series#init\n             */\n            function afterInit() {\n                var compare = this.options.compare;\n                var dataModify;\n                if (compare === 'percent' ||\n                    compare === 'value' ||\n                    this.options.cumulative) {\n                    dataModify = new Additions(this);\n                    if (compare === 'percent' || compare === 'value') {\n                        // Set comparison mode\n                        dataModify.initCompare(compare);\n                    }\n                    else {\n                        // Set Cumulative Sum mode\n                        dataModify.initCumulative();\n                    }\n                }\n                this.dataModify = dataModify;\n            }\n            /**\n             * Adjust the extremes (compare and cumulative modify the data).\n             * @private\n             */\n            function afterGetExtremes(e) {\n                var dataExtremes = e.dataExtremes, activeYData = dataExtremes.activeYData;\n                if (this.dataModify && dataExtremes) {\n                    var extremes = void 0;\n                    if (this.options.compare) {\n                        extremes = [\n                            this.dataModify.modifyValue(dataExtremes.dataMin),\n                            this.dataModify.modifyValue(dataExtremes.dataMax)\n                        ];\n                    }\n                    else if (this.options.cumulative &&\n                        isArray(activeYData) &&\n                        // If only one y visible, sum doesn't change\n                        // so no need to change extremes\n                        activeYData.length >= 2) {\n                        extremes = Additions.getCumulativeExtremes(activeYData);\n                    }\n                    if (extremes) {\n                        dataExtremes.dataMin = arrayMin(extremes);\n                        dataExtremes.dataMax = arrayMax(extremes);\n                    }\n                }\n            }\n            /* ********************************************************************** *\n             *  End shared compare and cumulative logic                               *\n             * ********************************************************************** */\n            /* ********************************************************************** *\n             *  Start value compare logic                                             *\n             * ********************************************************************** */\n            /**\n             * Highcharts Stock only. Set the\n             * [compare](https://api.highcharts.com/highstock/plotOptions.series.compare)\n             * mode of the series after render time.\n             * In most cases it is more useful running\n             * {@link Axis#setCompare} on the X axis to update all its series.\n             *\n             * @function Highcharts.Series#setCompare\n             *\n             * @param {string|null} [compare]\n             *        Can be one of `undefined` (default), `null`, `\"percent\"`\n             *        or `\"value\"`.\n             *\n             * @param {boolean} [redraw=true]\n             *        Whether to redraw the chart or to wait for a later call to\n             *        {@link Chart#redraw}.\n             */\n            function seriesSetCompare(compare, redraw) {\n                // Survive to export, #5485 (and for options generally)\n                this.options.compare = this.userOptions.compare = compare;\n                // Fire series.init() that will set or delete series.dataModify\n                this.update({}, pick(redraw, true));\n                if (this.dataModify && (compare === 'value' || compare === 'percent')) {\n                    this.dataModify.initCompare(compare);\n                }\n                else {\n                    // When disabling, clear the points\n                    this.points.forEach(function (point) {\n                        delete point.change;\n                    });\n                }\n            }\n            /**\n             * Extend series.processData by finding the first y value in the plot area,\n             * used for comparing the following values\n             *\n             * @ignore\n             * @function Highcharts.Series#processData\n             */\n            function afterProcessData() {\n                var series = this;\n                if (series.xAxis && // not pies\n                    series.processedYData &&\n                    series.dataModify) {\n                    var processedXData = series.processedXData, processedYData = series.processedYData, length_1 = processedYData.length, compareStart = series.options.compareStart === true ? 0 : 1;\n                    var keyIndex = -1, i = void 0;\n                    // For series with more than one value (range, OHLC etc), compare\n                    // against close or the pointValKey (#4922, #3112, #9854)\n                    if (series.pointArrayMap) {\n                        keyIndex = series.pointArrayMap.indexOf(series.options.pointValKey || series.pointValKey || 'y');\n                    }\n                    // find the first value for comparison\n                    for (i = 0; i < length_1 - compareStart; i++) {\n                        var compareValue = processedYData[i] && keyIndex > -1 ?\n                            processedYData[i][keyIndex] : processedYData[i];\n                        if (isNumber(compareValue) &&\n                            compareValue !== 0 &&\n                            processedXData[i + compareStart] >= (series.xAxis.min || 0)) {\n                            series.dataModify.compareValue = compareValue;\n                            break;\n                        }\n                    }\n                }\n            }\n            /**\n             * Highcharts Stock only. Set the compare mode on all series\n             * belonging to a Y axis.\n             *\n             * @see [plotOptions.series.compare](https://api.highcharts.com/highstock/plotOptions.series.compare)\n             *\n             * @sample stock/members/axis-setcompare/\n             *         Set compare\n             *\n             * @function Highcharts.Axis#setCompare\n             *\n             * @param {string|null} [compare]\n             *        The compare mode. Can be one of `undefined` (default), `null`,\n             *        `\"value\"` or `\"percent\"`.\n             *\n             * @param {boolean} [redraw=true]\n             *        Whether to redraw the chart or to wait for a later call to\n             *        {@link Chart#redraw}.\n             */\n            function axisSetCompare(compare, redraw) {\n                this.setModifier('compare', compare, redraw);\n            }\n            /* ********************************************************************** *\n             *  End value compare logic                                               *\n             * ********************************************************************** */\n            /* ********************************************************************** *\n             *  Start Cumulative Sum logic, author: Rafal Sebestjanski                *\n             * ********************************************************************** */\n            /**\n             * Highcharts Stock only. Set the\n             * [cumulative](https://api.highcharts.com/highstock/plotOptions.series.cumulative)\n             * mode of the series after render time.\n             * In most cases it is more useful running\n             * {@link Axis#setCumulative} on the Y axis to update all its series.\n             *\n             * @function Highcharts.Series#setCumulative\n             *\n             * @param {boolean} [cumulative=false]\n             *        Either enable or disable Cumulative Sum mode.\n             *        Can be one of `false` (default) or `true`.\n             *\n             * @param {boolean} [redraw=true]\n             *        Whether to redraw the chart or to wait for a later call to\n             *        {@link Chart#redraw}.\n             */\n            function seriesSetCumulative(cumulative, redraw) {\n                // Set default value to false\n                cumulative = pick(cumulative, false);\n                // Survive to export, #5485 (and for options generally)\n                this.options.cumulative = this.userOptions.cumulative = cumulative;\n                // Fire series.init() that will set or delete series.dataModify\n                this.update({}, pick(redraw, true));\n                // If should, turn on the Cumulative Sum mode\n                if (this.dataModify) {\n                    this.dataModify.initCumulative();\n                }\n                else {\n                    // When disabling, clear the points\n                    this.points.forEach(function (point) {\n                        delete point.cumulativeSum;\n                    });\n                }\n            }\n            /**\n             * Highcharts Stock only. Set the cumulative mode on all series\n             * belonging to a Y axis.\n             *\n             * @see [plotOptions.series.cumulative](https://api.highcharts.com/highstock/plotOptions.series.cumulative)\n             *\n             * @sample stock/members/axis-setcumulative/\n             *         Set cumulative\n             *\n             * @function Highcharts.Axis#setCumulative\n             *\n             * @param {boolean} [cumulative]\n             *        Whether to disable or enable the cumulative mode.\n             *        Can be one of `undefined` (default, treated as `false`),\n             *        `false` or `true`.\n             *\n             * @param {boolean} [redraw=true]\n             *        Whether to redraw the chart or to wait for a later call to\n             *        {@link Chart#redraw}.\n             */\n            function axisSetCumulative(cumulative, redraw) {\n                this.setModifier('cumulative', cumulative, redraw);\n            }\n            /* *\n             *\n             *  Classes\n             *\n             * */\n            /**\n             * @private\n             */\n            var Additions = /** @class */ (function () {\n                /* *\n                 *\n                 *  Constructors\n                 *\n                 * */\n                /**\n                 * @private\n                 */\n                function Additions(series) {\n                    this.series = series;\n                }\n                /* *\n                *\n                *  Functions\n                *\n                * */\n                /**\n                 * @private\n                 */\n                Additions.prototype.modifyValue = function () {\n                    return 0;\n                };\n                /**\n                 * @ignore\n                 * @function Highcharts.Series#getCumulativeExtremes\n                 *\n                 * @param {Array} [activeYData]\n                 *        An array cointaining all the points' y values\n                 *        in a visible range.\n                 */\n                Additions.getCumulativeExtremes = function (activeYData) {\n                    var cumulativeDataMin = Infinity, cumulativeDataMax = -Infinity;\n                    activeYData.reduce(function (prev, cur) {\n                        var sum = prev + cur;\n                        cumulativeDataMin = Math.min(cumulativeDataMin, sum, prev);\n                        cumulativeDataMax = Math.max(cumulativeDataMax, sum, prev);\n                        return sum;\n                    });\n                    return [cumulativeDataMin, cumulativeDataMax];\n                };\n                /**\n                 * @ignore\n                 * @function Highcharts.Series#initCompare\n                 *\n                 * @param {string} [compare]\n                 *        Can be one of `\"percent\"` or `\"value\"`.\n                 */\n                Additions.prototype.initCompare = function (compare) {\n                    // Set the modifyValue method\n                    this.modifyValue = function (value, index) {\n                        if (value === null) {\n                            value = 0;\n                        }\n                        var compareValue = this.compareValue;\n                        if (typeof value !== 'undefined' &&\n                            typeof compareValue !== 'undefined') { // #2601, #5814\n                            // Get the modified value\n                            if (compare === 'value') {\n                                value -= compareValue;\n                                // Compare percent\n                            }\n                            else {\n                                var compareBase = this.series.options.compareBase;\n                                value = 100 * (value / compareValue) -\n                                    (compareBase === 100 ? 0 : 100);\n                            }\n                            // record for tooltip etc.\n                            if (typeof index !== 'undefined') {\n                                var point = this.series.points[index];\n                                if (point) {\n                                    point.change = value;\n                                }\n                            }\n                            return value;\n                        }\n                        return 0;\n                    };\n                };\n                /**\n                 * @ignore\n                 * @function Highcharts.Series#initCumulative\n                 */\n                Additions.prototype.initCumulative = function () {\n                    // Set the modifyValue method\n                    this.modifyValue = function (value, index) {\n                        if (value === null) {\n                            value = 0;\n                        }\n                        if (value !== void 0 && index !== void 0) {\n                            var prevPoint = index > 0 ?\n                                this.series.points[index - 1] : null;\n                            // Get the modified value\n                            if (prevPoint && prevPoint.cumulativeSum) {\n                                value = correctFloat(prevPoint.cumulativeSum + value);\n                            }\n                            // Record for tooltip etc.\n                            var point = this.series.points[index];\n                            if (point) {\n                                point.cumulativeSum = value;\n                            }\n                            return value;\n                        }\n                        return 0;\n                    };\n                };\n                return Additions;\n            }());\n            DataModifyComposition.Additions = Additions;\n        })(DataModifyComposition || (DataModifyComposition = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * Compare the values of the series against the first non-null, non-\n         * zero value in the visible range. The y axis will show percentage\n         * or absolute change depending on whether `compare` is set to `\"percent\"`\n         * or `\"value\"`. When this is applied to multiple series, it allows\n         * comparing the development of the series against each other. Adds\n         * a `change` field to every point object.\n         *\n         * @see [compareBase](#plotOptions.series.compareBase)\n         * @see [Axis.setCompare()](/class-reference/Highcharts.Axis#setCompare)\n         * @see [Series.setCompare()](/class-reference/Highcharts.Series#setCompare)\n         *\n         * @sample {highstock} stock/plotoptions/series-compare-percent/\n         *         Percent\n         * @sample {highstock} stock/plotoptions/series-compare-value/\n         *         Value\n         *\n         * @type      {string}\n         * @since     1.0.1\n         * @product   highstock\n         * @validvalue [\"percent\", \"value\"]\n         * @apioption plotOptions.series.compare\n         */\n        /**\n         * Defines if comparison should start from the first point within the visible\n         * range or should start from the first point **before** the range.\n         *\n         * In other words, this flag determines if first point within the visible range\n         * will have 0% (`compareStart=true`) or should have been already calculated\n         * according to the previous point (`compareStart=false`).\n         *\n         * @sample {highstock} stock/plotoptions/series-comparestart/\n         *         Calculate compare within visible range\n         *\n         * @type      {boolean}\n         * @default   false\n         * @since     6.0.0\n         * @product   highstock\n         * @apioption plotOptions.series.compareStart\n         */\n        /**\n         * When [compare](#plotOptions.series.compare) is `percent`, this option\n         * dictates whether to use 0 or 100 as the base of comparison.\n         *\n         * @sample {highstock} stock/plotoptions/series-comparebase/\n         *         Compare base is 100\n         *\n         * @type       {number}\n         * @default    0\n         * @since      5.0.6\n         * @product    highstock\n         * @validvalue [0, 100]\n         * @apioption  plotOptions.series.compareBase\n         */\n        /**\n         * Cumulative Sum feature replaces points' values with the following formula:\n         * `sum of all previous points' values + current point's value`.\n         * Works only for points in a visible range.\n         * Adds the `cumulativeSum` field to each point object that can be accessed\n         * e.g. in the [tooltip.pointFormat](https://api.highcharts.com/highstock/tooltip.pointFormat).\n         *\n         * With `dataGrouping` enabled, default grouping approximation is set to `sum`.\n         *\n         * @see [Axis.setCumulative()](/class-reference/Highcharts.Axis#setCumulative)\n         * @see [Series.setCumulative()](/class-reference/Highcharts.Series#setCumulative)\n         *\n         * @sample {highstock} stock/plotoptions/series-cumulative-sum/\n         *         Cumulative Sum\n         *\n         * @type      {boolean}\n         * @default   false\n         * @since 9.3.0\n         * @product   highstock\n         * @apioption plotOptions.series.cumulative\n         */\n        ''; // keeps doclets above in transpiled file\n\n        return DataModifyComposition;\n    });\n    _registerModule(_modules, 'Stock/Navigator/ChartNavigatorComposition.js', [_modules['Core/Globals.js'], _modules['Core/Utilities.js']], function (H, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var isTouchDevice = H.isTouchDevice;\n        var addEvent = U.addEvent, merge = U.merge, pick = U.pick;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        var composedMembers = [];\n        /* *\n         *\n         *  Variables\n         *\n         * */\n        var NavigatorConstructor;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function compose(ChartClass, NavigatorClass) {\n            if (U.pushUnique(composedMembers, ChartClass)) {\n                var chartProto = ChartClass.prototype;\n                NavigatorConstructor = NavigatorClass;\n                chartProto.callbacks.push(onChartCallback);\n                addEvent(ChartClass, 'afterAddSeries', onChartAfterAddSeries);\n                addEvent(ChartClass, 'afterSetChartSize', onChartAfterSetChartSize);\n                addEvent(ChartClass, 'afterUpdate', onChartAfterUpdate);\n                addEvent(ChartClass, 'beforeRender', onChartBeforeRender);\n                addEvent(ChartClass, 'beforeShowResetZoom', onChartBeforeShowResetZoom);\n                addEvent(ChartClass, 'update', onChartUpdate);\n            }\n        }\n        /**\n         * Handle adding new series.\n         * @private\n         */\n        function onChartAfterAddSeries() {\n            if (this.navigator) {\n                // Recompute which series should be shown in navigator, and add them\n                this.navigator.setBaseSeries(null, false);\n            }\n        }\n        /**\n         * For stock charts, extend the Chart.setChartSize method so that we can set the\n         * final top position of the navigator once the height of the chart, including\n         * the legend, is determined. #367. We can't use Chart.getMargins, because\n         * labels offsets are not calculated yet.\n         * @private\n         */\n        function onChartAfterSetChartSize() {\n            var _a;\n            var legend = this.legend, navigator = this.navigator;\n            var legendOptions, xAxis, yAxis;\n            if (navigator) {\n                legendOptions = legend && legend.options;\n                xAxis = navigator.xAxis;\n                yAxis = navigator.yAxis;\n                var scrollbarHeight = navigator.scrollbarHeight, scrollButtonSize = navigator.scrollButtonSize;\n                // Compute the top position\n                if (this.inverted) {\n                    navigator.left = navigator.opposite ?\n                        this.chartWidth - scrollbarHeight -\n                            navigator.height :\n                        this.spacing[3] + scrollbarHeight;\n                    navigator.top = this.plotTop + scrollButtonSize;\n                }\n                else {\n                    navigator.left = pick(xAxis.left, this.plotLeft + scrollButtonSize);\n                    navigator.top = navigator.navigatorOptions.top ||\n                        this.chartHeight -\n                            navigator.height -\n                            scrollbarHeight -\n                            (((_a = this.scrollbar) === null || _a === void 0 ? void 0 : _a.options.margin) || 0) -\n                            this.spacing[2] -\n                            (this.rangeSelector && this.extraBottomMargin ?\n                                this.rangeSelector.getHeight() :\n                                0) -\n                            ((legendOptions &&\n                                legendOptions.verticalAlign === 'bottom' &&\n                                legendOptions.layout !== 'proximate' && // #13392\n                                legendOptions.enabled &&\n                                !legendOptions.floating) ?\n                                legend.legendHeight +\n                                    pick(legendOptions.margin, 10) :\n                                0) -\n                            (this.titleOffset ? this.titleOffset[2] : 0);\n                }\n                if (xAxis && yAxis) { // false if navigator is disabled (#904)\n                    if (this.inverted) {\n                        xAxis.options.left = yAxis.options.left = navigator.left;\n                    }\n                    else {\n                        xAxis.options.top = yAxis.options.top = navigator.top;\n                    }\n                    xAxis.setAxisSize();\n                    yAxis.setAxisSize();\n                }\n            }\n        }\n        /**\n         * Initialize navigator, if no scrolling exists yet.\n         * @private\n         */\n        function onChartAfterUpdate(event) {\n            if (!this.navigator && !this.scroller &&\n                (this.options.navigator.enabled ||\n                    this.options.scrollbar.enabled)) {\n                this.scroller = this.navigator = new NavigatorConstructor(this);\n                if (pick(event.redraw, true)) {\n                    this.redraw(event.animation); // #7067\n                }\n            }\n        }\n        /**\n         * Initialize navigator for stock charts\n         * @private\n         */\n        function onChartBeforeRender() {\n            var options = this.options;\n            if (options.navigator.enabled ||\n                options.scrollbar.enabled) {\n                this.scroller = this.navigator = new NavigatorConstructor(this);\n            }\n        }\n        /**\n         * For Stock charts. For x only zooming, do not to create the zoom button\n         * because X axis zooming is already allowed by the Navigator and Range\n         * selector. (#9285)\n         * @private\n         */\n        function onChartBeforeShowResetZoom() {\n            var chartOptions = this.options, navigator = chartOptions.navigator, rangeSelector = chartOptions.rangeSelector;\n            if (((navigator && navigator.enabled) ||\n                (rangeSelector && rangeSelector.enabled)) &&\n                ((!isTouchDevice &&\n                    this.zooming.type === 'x') ||\n                    (isTouchDevice && this.zooming.pinchType === 'x'))) {\n                return false;\n            }\n        }\n        /**\n         * @private\n         */\n        function onChartCallback(chart) {\n            var navigator = chart.navigator;\n            // Initialize the navigator\n            if (navigator && chart.xAxis[0]) {\n                var extremes = chart.xAxis[0].getExtremes();\n                navigator.render(extremes.min, extremes.max);\n            }\n        }\n        /**\n         * Merge options, if no scrolling exists yet\n         * @private\n         */\n        function onChartUpdate(e) {\n            var navigatorOptions = (e.options.navigator || {}), scrollbarOptions = (e.options.scrollbar || {});\n            if (!this.navigator && !this.scroller &&\n                (navigatorOptions.enabled || scrollbarOptions.enabled)) {\n                merge(true, this.options.navigator, navigatorOptions);\n                merge(true, this.options.scrollbar, scrollbarOptions);\n                delete e.options.navigator;\n                delete e.options.scrollbar;\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var ChartNavigatorComposition = {\n            compose: compose\n        };\n\n        return ChartNavigatorComposition;\n    });\n    _registerModule(_modules, 'Core/Axis/NavigatorAxisComposition.js', [_modules['Core/Globals.js'], _modules['Core/Utilities.js']], function (H, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var isTouchDevice = H.isTouchDevice;\n        var addEvent = U.addEvent, correctFloat = U.correctFloat, defined = U.defined, isNumber = U.isNumber, pick = U.pick;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function onAxisInit() {\n            var axis = this;\n            if (!axis.navigatorAxis) {\n                axis.navigatorAxis = new NavigatorAxisAdditions(axis);\n            }\n        }\n        /**\n         * For Stock charts, override selection zooming with some special features\n         * because X axis zooming is already allowed by the Navigator and Range\n         * selector.\n         * @private\n         */\n        function onAxisSetExtremes(e) {\n            var axis = this, chart = axis.chart, chartOptions = chart.options, navigator = chartOptions.navigator, navigatorAxis = axis.navigatorAxis, pinchType = chart.zooming.pinchType, rangeSelector = chartOptions.rangeSelector, zoomType = chart.zooming.type;\n            var zoomed;\n            if (axis.isXAxis &&\n                ((navigator === null || navigator === void 0 ? void 0 : navigator.enabled) || (rangeSelector === null || rangeSelector === void 0 ? void 0 : rangeSelector.enabled))) {\n                // For y only zooming, ignore the X axis completely\n                if (zoomType === 'y' && e.trigger === 'zoom') {\n                    zoomed = false;\n                    // For xy zooming, record the state of the zoom before zoom selection,\n                    // then when the reset button is pressed, revert to this state. This\n                    // should apply only if the chart is initialized with a range (#6612),\n                    // otherwise zoom all the way out.\n                }\n                else if (((e.trigger === 'zoom' && zoomType === 'xy') ||\n                    (isTouchDevice && pinchType === 'xy')) &&\n                    axis.options.range) {\n                    var previousZoom = navigatorAxis.previousZoom;\n                    // Minimum defined, zooming in\n                    if (defined(e.min)) {\n                        navigatorAxis.previousZoom = [axis.min, axis.max];\n                        // Minimum undefined, resetting zoom\n                    }\n                    else if (previousZoom) {\n                        e.min = previousZoom[0];\n                        e.max = previousZoom[1];\n                        navigatorAxis.previousZoom = void 0;\n                    }\n                }\n            }\n            if (typeof zoomed !== 'undefined') {\n                e.preventDefault();\n            }\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * @private\n         * @class\n         */\n        var NavigatorAxisAdditions = /** @class */ (function () {\n            /* *\n             *\n             *  Constructors\n             *\n             * */\n            function NavigatorAxisAdditions(axis) {\n                this.axis = axis;\n            }\n            /* *\n             *\n             *  Static Functions\n             *\n             * */\n            /**\n             * @private\n             */\n            NavigatorAxisAdditions.compose = function (AxisClass) {\n                if (!AxisClass.keepProps.includes('navigatorAxis')) {\n                    AxisClass.keepProps.push('navigatorAxis');\n                    addEvent(AxisClass, 'init', onAxisInit);\n                    addEvent(AxisClass, 'setExtremes', onAxisSetExtremes);\n                }\n            };\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * @private\n             */\n            NavigatorAxisAdditions.prototype.destroy = function () {\n                this.axis = void 0;\n            };\n            /**\n             * Add logic to normalize the zoomed range in order to preserve the pressed\n             * state of range selector buttons\n             *\n             * @private\n             * @function Highcharts.Axis#toFixedRange\n             */\n            NavigatorAxisAdditions.prototype.toFixedRange = function (pxMin, pxMax, fixedMin, fixedMax) {\n                var _a;\n                var axis = this.axis, chart = axis.chart, overscroll = pick((_a = axis.ordinal) === null || _a === void 0 ? void 0 : _a.convertOverscroll(axis.options.overscroll), 0);\n                var newMin = pick(fixedMin, axis.translate(pxMin, true, !axis.horiz)), newMax = pick(fixedMax, axis.translate(pxMax, true, !axis.horiz));\n                var fixedRange = chart && chart.fixedRange, halfPointRange = (axis.pointRange || 0) / 2;\n                // Add/remove half point range to/from the extremes (#1172)\n                if (!defined(fixedMin)) {\n                    newMin = correctFloat(newMin + halfPointRange);\n                }\n                if (!defined(fixedMax)) {\n                    newMax = correctFloat(newMax - halfPointRange);\n                }\n                // Make sure panning to the edges does not decrease the zoomed range\n                if (fixedRange && axis.dataMin && axis.dataMax) {\n                    var maxWithOverscroll = axis.dataMax + overscroll;\n                    if (newMax >= maxWithOverscroll) {\n                        newMin = correctFloat(maxWithOverscroll - fixedRange);\n                        newMax = correctFloat(maxWithOverscroll);\n                    }\n                    if (newMin <= axis.dataMin) {\n                        newMax = correctFloat(axis.dataMin + fixedRange);\n                    }\n                }\n                if (!isNumber(newMin) || !isNumber(newMax)) { // #1195, #7411\n                    newMin = newMax = void 0;\n                }\n                return {\n                    min: newMin,\n                    max: newMax\n                };\n            };\n            return NavigatorAxisAdditions;\n        }());\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return NavigatorAxisAdditions;\n    });\n    _registerModule(_modules, 'Stock/Navigator/NavigatorDefaults.js', [_modules['Core/Color/Color.js'], _modules['Core/Series/SeriesRegistry.js']], function (Color, SeriesRegistry) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var color = Color.parse;\n        var seriesTypes = SeriesRegistry.seriesTypes;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        /**\n         * The navigator is a small series below the main series, displaying\n         * a view of the entire data set. It provides tools to zoom in and\n         * out on parts of the data as well as panning across the dataset.\n         *\n         * @product      highstock gantt\n         * @optionparent navigator\n         */\n        var NavigatorDefaults = {\n            /**\n             * Whether the navigator and scrollbar should adapt to updated data\n             * in the base X axis. When loading data async, as in the demo below,\n             * this should be `false`. Otherwise new data will trigger navigator\n             * redraw, which will cause unwanted looping. In the demo below, the\n             * data in the navigator is set only once. On navigating, only the main\n             * chart content is updated.\n             *\n             * @sample {highstock} stock/demo/lazy-loading/\n             *         Set to false with async data loading\n             *\n             * @type      {boolean}\n             * @default   true\n             * @apioption navigator.adaptToUpdatedData\n             */\n            /**\n             * An integer identifying the index to use for the base series, or a\n             * string representing the id of the series.\n             *\n             * **Note**: As of Highcharts 5.0, this is now a deprecated option.\n             * Prefer [series.showInNavigator](#plotOptions.series.showInNavigator).\n             *\n             * @see [series.showInNavigator](#plotOptions.series.showInNavigator)\n             *\n             * @deprecated\n             * @type      {number|string}\n             * @default   0\n             * @apioption navigator.baseSeries\n             */\n            /**\n             * Enable or disable the navigator.\n             *\n             * @sample {highstock} stock/navigator/enabled/\n             *         Disable the navigator\n             *\n             * @type      {boolean}\n             * @default   true\n             * @apioption navigator.enabled\n             */\n            /**\n             * When the chart is inverted, whether to draw the navigator on the\n             * opposite side.\n             *\n             * @type      {boolean}\n             * @default   false\n             * @since     5.0.8\n             * @apioption navigator.opposite\n             */\n            /**\n             * The height of the navigator.\n             *\n             * @sample {highstock} stock/navigator/height/\n             *         A higher navigator\n             */\n            height: 40,\n            /**\n             * The distance from the nearest element, the X axis or X axis labels.\n             *\n             * @sample {highstock} stock/navigator/margin/\n             *         A margin of 2 draws the navigator closer to the X axis labels\n             */\n            margin: 25,\n            /**\n             * Whether the mask should be inside the range marking the zoomed\n             * range, or outside. In Highcharts Stock 1.x it was always `false`.\n             *\n             * @sample {highstock} stock/demo/maskinside-false/\n             *         False, mask outside\n             *\n             * @since   2.0\n             */\n            maskInside: true,\n            /**\n             * Options for the handles for dragging the zoomed area.\n             *\n             * @sample {highstock} stock/navigator/handles/\n             *         Colored handles\n             */\n            handles: {\n                /**\n                 * Width for handles.\n                 *\n                 * @sample {highstock} stock/navigator/styled-handles/\n                 *         Styled handles\n                 *\n                 * @since   6.0.0\n                 */\n                width: 7,\n                /**\n                 * Height for handles.\n                 *\n                 * @sample {highstock} stock/navigator/styled-handles/\n                 *         Styled handles\n                 *\n                 * @since   6.0.0\n                 */\n                height: 15,\n                /**\n                 * Array to define shapes of handles. 0-index for left, 1-index for\n                 * right.\n                 *\n                 * Additionally, the URL to a graphic can be given on this form:\n                 * `url(graphic.png)`. Note that for the image to be applied to\n                 * exported charts, its URL needs to be accessible by the export\n                 * server.\n                 *\n                 * Custom callbacks for symbol path generation can also be added to\n                 * `Highcharts.SVGRenderer.prototype.symbols`. The callback is then\n                 * used by its method name, as shown in the demo.\n                 *\n                 * @sample {highstock} stock/navigator/styled-handles/\n                 *         Styled handles\n                 *\n                 * @type    {Array<string>}\n                 * @default [\"navigator-handle\", \"navigator-handle\"]\n                 * @since   6.0.0\n                 */\n                symbols: ['navigator-handle', 'navigator-handle'],\n                /**\n                 * Allows to enable/disable handles.\n                 *\n                 * @since   6.0.0\n                 */\n                enabled: true,\n                /**\n                 * The width for the handle border and the stripes inside.\n                 *\n                 * @sample {highstock} stock/navigator/styled-handles/\n                 *         Styled handles\n                 *\n                 * @since     6.0.0\n                 * @apioption navigator.handles.lineWidth\n                 */\n                lineWidth: 1,\n                /**\n                 * The fill for the handle.\n                 *\n                 * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n                 */\n                backgroundColor: \"#f2f2f2\" /* Palette.neutralColor5 */,\n                /**\n                 * The stroke for the handle border and the stripes inside.\n                 *\n                 * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n                 */\n                borderColor: \"#999999\" /* Palette.neutralColor40 */\n            },\n            /**\n             * The color of the mask covering the areas of the navigator series\n             * that are currently not visible in the main series. The default\n             * color is bluish with an opacity of 0.3 to see the series below.\n             *\n             * @see In styled mode, the mask is styled with the\n             *      `.highcharts-navigator-mask` and\n             *      `.highcharts-navigator-mask-inside` classes.\n             *\n             * @sample {highstock} stock/navigator/maskfill/\n             *         Blue, semi transparent mask\n             *\n             * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             * @default rgba(102,133,194,0.3)\n             */\n            maskFill: color(\"#667aff\" /* Palette.highlightColor60 */).setOpacity(0.3).get(),\n            /**\n             * The color of the line marking the currently zoomed area in the\n             * navigator.\n             *\n             * @sample {highstock} stock/navigator/outline/\n             *         2px blue outline\n             *\n             * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             * @default #cccccc\n             */\n            outlineColor: \"#999999\" /* Palette.neutralColor40 */,\n            /**\n             * The width of the line marking the currently zoomed area in the\n             * navigator.\n             *\n             * @see In styled mode, the outline stroke width is set with the\n             *      `.highcharts-navigator-outline` class.\n             *\n             * @sample {highstock} stock/navigator/outline/\n             *         2px blue outline\n             *\n             * @type    {number}\n             */\n            outlineWidth: 1,\n            /**\n             * Options for the navigator series. Available options are the same\n             * as any series, documented at [plotOptions](#plotOptions.series)\n             * and [series](#series).\n             *\n             * Unless data is explicitly defined on navigator.series, the data\n             * is borrowed from the first series in the chart.\n             *\n             * Default series options for the navigator series are:\n             * ```js\n             * series: {\n             *     type: 'areaspline',\n             *     fillOpacity: 0.05,\n             *     dataGrouping: {\n             *         smoothed: true\n             *     },\n             *     lineWidth: 1,\n             *     marker: {\n             *         enabled: false\n             *     }\n             * }\n             * ```\n             *\n             * @see In styled mode, the navigator series is styled with the\n             *      `.highcharts-navigator-series` class.\n             *\n             * @sample {highstock} stock/navigator/series-data/\n             *         Using a separate data set for the navigator\n             * @sample {highstock} stock/navigator/series/\n             *         A green navigator series\n             *\n             * @type {*|Array<*>|Highcharts.SeriesOptionsType|Array<Highcharts.SeriesOptionsType>}\n             */\n            series: {\n                /**\n                 * The type of the navigator series.\n                 *\n                 * Heads up:\n                 * In column-type navigator, zooming is limited to at least one\n                 * point with its `pointRange`.\n                 *\n                 * @sample {highstock} stock/navigator/column/\n                 *         Column type navigator\n                 *\n                 * @type    {string}\n                 * @default {highstock} `areaspline` if defined, otherwise `line`\n                 * @default {gantt} gantt\n                 */\n                type: (typeof seriesTypes.areaspline === 'undefined' ?\n                    'line' :\n                    'areaspline'),\n                /**\n                 * The fill opacity of the navigator series.\n                 */\n                fillOpacity: 0.05,\n                /**\n                 * The pixel line width of the navigator series.\n                 */\n                lineWidth: 1,\n                /**\n                 * @ignore-option\n                 */\n                compare: null,\n                /**\n                 * @ignore-option\n                 */\n                sonification: {\n                    enabled: false\n                },\n                /**\n                 * Unless data is explicitly defined, the data is borrowed from the\n                 * first series in the chart.\n                 *\n                 * @type      {Array<number|Array<number|string|null>|object|null>}\n                 * @product   highstock\n                 * @apioption navigator.series.data\n                 */\n                /**\n                 * Data grouping options for the navigator series.\n                 *\n                 * @extends plotOptions.series.dataGrouping\n                 */\n                dataGrouping: {\n                    approximation: 'average',\n                    enabled: true,\n                    groupPixelWidth: 2,\n                    // Replace smoothed property by anchors, #12455.\n                    firstAnchor: 'firstPoint',\n                    anchor: 'middle',\n                    lastAnchor: 'lastPoint',\n                    // Day and week differs from plotOptions.series.dataGrouping\n                    units: [\n                        ['millisecond', [1, 2, 5, 10, 20, 25, 50, 100, 200, 500]],\n                        ['second', [1, 2, 5, 10, 15, 30]],\n                        ['minute', [1, 2, 5, 10, 15, 30]],\n                        ['hour', [1, 2, 3, 4, 6, 8, 12]],\n                        ['day', [1, 2, 3, 4]],\n                        ['week', [1, 2, 3]],\n                        ['month', [1, 3, 6]],\n                        ['year', null]\n                    ]\n                },\n                /**\n                 * Data label options for the navigator series. Data labels are\n                 * disabled by default on the navigator series.\n                 *\n                 * @extends plotOptions.series.dataLabels\n                 */\n                dataLabels: {\n                    enabled: false,\n                    zIndex: 2 // #1839\n                },\n                id: 'highcharts-navigator-series',\n                className: 'highcharts-navigator-series',\n                /**\n                 * Sets the fill color of the navigator series.\n                 *\n                 * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n                 * @apioption navigator.series.color\n                 */\n                /**\n                 * Line color for the navigator series. Allows setting the color\n                 * while disallowing the default candlestick setting.\n                 *\n                 * @type {Highcharts.ColorString|null}\n                 */\n                lineColor: null,\n                marker: {\n                    enabled: false\n                },\n                /**\n                 * Since Highcharts Stock v8, default value is the same as default\n                 * `pointRange` defined for a specific type (e.g. `null` for\n                 * column type).\n                 *\n                 * In Highcharts Stock version < 8, defaults to 0.\n                 *\n                 * @extends plotOptions.series.pointRange\n                 * @type {number|null}\n                 * @apioption navigator.series.pointRange\n                 */\n                /**\n                 * The threshold option. Setting it to 0 will make the default\n                 * navigator area series draw its area from the 0 value and up.\n                 *\n                 * @type {number|null}\n                 */\n                threshold: null\n            },\n            /**\n             * Enable or disable navigator sticking to right, while adding new\n             * points. If `undefined`, the navigator sticks to the axis maximum only\n             * if it was already at the maximum prior to adding points.\n             *\n             * @type      {boolean}\n             * @default   undefined\n             * @since 10.2.1\n             * @sample {highstock} stock/navigator/sticktomax-false/\n             * stickToMax set to false\n             * @apioption navigator.stickToMax\n             */\n            /**\n             * Options for the navigator X axis. Default series options for the\n             * navigator xAxis are:\n             * ```js\n             * xAxis: {\n             *     tickWidth: 0,\n             *     lineWidth: 0,\n             *     gridLineWidth: 1,\n             *     tickPixelInterval: 200,\n             *     labels: {\n             *            align: 'left',\n             *         style: {\n             *             color: '#888'\n             *         },\n             *         x: 3,\n             *         y: -4\n             *     }\n             * }\n             * ```\n             *\n             * @extends   xAxis\n             * @excluding linkedTo, maxZoom, minRange, opposite, range, scrollbar,\n             *            showEmpty, maxRange\n             */\n            xAxis: {\n                /**\n                 * Additional range on the right side of the xAxis. Works similar to\n                 * `xAxis.maxPadding`, but the value is set in terms of axis values,\n                 * percentage or pixels.\n                 *\n                 * If it's a number, it is interpreted as axis values, which in a\n                 * datetime axis equals milliseconds.\n                 *\n                 * If it's a percentage string, is interpreted as percentages of the\n                 * axis length. An overscroll of 50% will make a 100px axis 50px longer.\n                 *\n                 * If it's a pixel string, it is interpreted as a fixed pixel value, but\n                 * limited to 90% of the axis length.\n                 *\n                 * If it's undefined, the value is inherited from `xAxis.overscroll`.\n                 *\n                 * Can be set for both, main xAxis and navigator's xAxis.\n                 *\n                 * @type    {number | string | undefined}\n                 * @since   6.0.0\n                 * @apioption navigator.xAxis.overscroll\n                 */\n                className: 'highcharts-navigator-xaxis',\n                tickLength: 0,\n                lineWidth: 0,\n                gridLineColor: \"#e6e6e6\" /* Palette.neutralColor10 */,\n                gridLineWidth: 1,\n                tickPixelInterval: 200,\n                labels: {\n                    align: 'left',\n                    /**\n                     * @type {Highcharts.CSSObject}\n                     */\n                    style: {\n                        /** @ignore */\n                        color: \"#000000\" /* Palette.neutralColor100 */,\n                        /** @ignore */\n                        fontSize: '0.7em',\n                        /** @ignore */\n                        opacity: 0.6,\n                        /** @ignore */\n                        textOutline: '2px contrast'\n                    },\n                    x: 3,\n                    y: -4\n                },\n                crosshair: false\n            },\n            /**\n             * Options for the navigator Y axis. Default series options for the\n             * navigator yAxis are:\n             * ```js\n             * yAxis: {\n             *     gridLineWidth: 0,\n             *     startOnTick: false,\n             *     endOnTick: false,\n             *     minPadding: 0.1,\n             *     maxPadding: 0.1,\n             *     labels: {\n             *         enabled: false\n             *     },\n             *     title: {\n             *         text: null\n             *     },\n             *     tickWidth: 0\n             * }\n             * ```\n             *\n             * @extends   yAxis\n             * @excluding height, linkedTo, maxZoom, minRange, ordinal, range,\n             *            showEmpty, scrollbar, top, units, maxRange, minLength,\n             *            maxLength, resize\n             */\n            yAxis: {\n                className: 'highcharts-navigator-yaxis',\n                gridLineWidth: 0,\n                startOnTick: false,\n                endOnTick: false,\n                minPadding: 0.1,\n                maxPadding: 0.1,\n                labels: {\n                    enabled: false\n                },\n                crosshair: false,\n                title: {\n                    text: null\n                },\n                tickLength: 0,\n                tickWidth: 0\n            }\n        };\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * Maximum range which can be set using the navigator's handles.\n         * Opposite of [xAxis.minRange](#xAxis.minRange).\n         *\n         * @sample {highstock} stock/navigator/maxrange/\n         *         Defined max and min range\n         *\n         * @type      {number}\n         * @since     6.0.0\n         * @product   highstock gantt\n         * @apioption xAxis.maxRange\n         */\n        (''); // keeps doclets above in JS file\n\n        return NavigatorDefaults;\n    });\n    _registerModule(_modules, 'Stock/Navigator/NavigatorSymbols.js', [], function () {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        /**\n         * Draw one of the handles on the side of the zoomed range in the navigator.\n         * @private\n         */\n        function navigatorHandle(_x, _y, width, height, options) {\n            if (options === void 0) { options = {}; }\n            var halfWidth = options.width ? options.width / 2 : width, markerPosition = Math.round(halfWidth / 3) + 0.5;\n            height = options.height || height;\n            return [\n                ['M', -halfWidth - 1, 0.5],\n                ['L', halfWidth, 0.5],\n                ['L', halfWidth, height + 0.5],\n                ['L', -halfWidth - 1, height + 0.5],\n                ['L', -halfWidth - 1, 0.5],\n                ['M', -markerPosition, 4],\n                ['L', -markerPosition, height - 3],\n                ['M', markerPosition - 1, 4],\n                ['L', markerPosition - 1, height - 3]\n            ];\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var NavigatorSymbols = {\n            'navigator-handle': navigatorHandle\n        };\n\n        return NavigatorSymbols;\n    });\n    _registerModule(_modules, 'Stock/Utilities/StockUtilities.js', [_modules['Core/Utilities.js']], function (U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var defined = U.defined;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Sets the chart.fixedRange to the specified value. If the value is larger\n         * than actual range, sets it to the maximum possible range. (#20327)\n         *\n         * @private\n         * @function Highcharts.StockChart#setFixedRange\n         * @param {number|undefined} range\n         *        Range to set in axis units.\n         */\n        function setFixedRange(range) {\n            var xAxis = this.xAxis[0];\n            if (defined(xAxis.dataMax) &&\n                defined(xAxis.dataMin) &&\n                range) {\n                this.fixedRange = Math.min(range, xAxis.dataMax - xAxis.dataMin);\n            }\n            else {\n                this.fixedRange = range;\n            }\n        }\n        var StockUtilities = {\n            setFixedRange: setFixedRange\n        };\n\n        return StockUtilities;\n    });\n    _registerModule(_modules, 'Stock/Navigator/NavigatorComposition.js', [_modules['Core/Defaults.js'], _modules['Core/Globals.js'], _modules['Core/Axis/NavigatorAxisComposition.js'], _modules['Stock/Navigator/NavigatorDefaults.js'], _modules['Stock/Navigator/NavigatorSymbols.js'], _modules['Core/Renderer/RendererRegistry.js'], _modules['Stock/Utilities/StockUtilities.js'], _modules['Core/Utilities.js']], function (D, H, NavigatorAxisAdditions, NavigatorDefaults, NavigatorSymbols, RendererRegistry, StockUtilities, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var setOptions = D.setOptions;\n        var composed = H.composed;\n        var getRendererType = RendererRegistry.getRendererType;\n        var setFixedRange = StockUtilities.setFixedRange;\n        var addEvent = U.addEvent, extend = U.extend, pushUnique = U.pushUnique;\n        /* *\n         *\n         *  Variables\n         *\n         * */\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function compose(ChartClass, AxisClass, SeriesClass) {\n            NavigatorAxisAdditions.compose(AxisClass);\n            if (pushUnique(composed, 'Navigator')) {\n                ChartClass.prototype.setFixedRange = setFixedRange;\n                extend(getRendererType().prototype.symbols, NavigatorSymbols);\n                addEvent(SeriesClass, 'afterUpdate', onSeriesAfterUpdate);\n                setOptions({ navigator: NavigatorDefaults });\n            }\n        }\n        /**\n         * Handle updating series\n         * @private\n         */\n        function onSeriesAfterUpdate() {\n            if (this.chart.navigator && !this.options.isInternal) {\n                this.chart.navigator.setBaseSeries(null, false);\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var NavigatorComposition = {\n            compose: compose\n        };\n\n        return NavigatorComposition;\n    });\n    _registerModule(_modules, 'Core/Axis/ScrollbarAxis.js', [_modules['Core/Globals.js'], _modules['Core/Utilities.js']], function (H, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var composed = H.composed;\n        var addEvent = U.addEvent, defined = U.defined, pick = U.pick, pushUnique = U.pushUnique;\n        /* *\n         *\n         *  Composition\n         *\n         * */\n        var ScrollbarAxis;\n        (function (ScrollbarAxis) {\n            /* *\n             *\n             *  Variables\n             *\n             * */\n            var Scrollbar;\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Attaches to axis events to create scrollbars if enabled.\n             *\n             * @private\n             *\n             * @param {Highcharts.Axis} AxisClass\n             * Axis class to extend.\n             *\n             * @param {Highcharts.Scrollbar} ScrollbarClass\n             * Scrollbar class to use.\n             */\n            function compose(AxisClass, ScrollbarClass) {\n                if (pushUnique(composed, 'Axis.Scrollbar')) {\n                    Scrollbar = ScrollbarClass;\n                    addEvent(AxisClass, 'afterGetOffset', onAxisAfterGetOffset);\n                    addEvent(AxisClass, 'afterInit', onAxisAfterInit);\n                    addEvent(AxisClass, 'afterRender', onAxisAfterRender);\n                }\n            }\n            ScrollbarAxis.compose = compose;\n            /** @private */\n            function getExtremes(axis) {\n                var axisMin = pick(axis.options && axis.options.min, axis.min);\n                var axisMax = pick(axis.options && axis.options.max, axis.max);\n                return {\n                    axisMin: axisMin,\n                    axisMax: axisMax,\n                    scrollMin: defined(axis.dataMin) ?\n                        Math.min(axisMin, axis.min, axis.dataMin, pick(axis.threshold, Infinity)) : axisMin,\n                    scrollMax: defined(axis.dataMax) ?\n                        Math.max(axisMax, axis.max, axis.dataMax, pick(axis.threshold, -Infinity)) : axisMax\n                };\n            }\n            /**\n             * Make space for a scrollbar.\n             * @private\n             */\n            function onAxisAfterGetOffset() {\n                var axis = this, scrollbar = axis.scrollbar, opposite = scrollbar && !scrollbar.options.opposite, index = axis.horiz ? 2 : opposite ? 3 : 1;\n                if (scrollbar) {\n                    // Reset scrollbars offsets\n                    axis.chart.scrollbarsOffsets = [0, 0];\n                    axis.chart.axisOffset[index] +=\n                        scrollbar.size + (scrollbar.options.margin || 0);\n                }\n            }\n            /**\n             * Wrap axis initialization and create scrollbar if enabled.\n             * @private\n             */\n            function onAxisAfterInit() {\n                var axis = this;\n                if (axis.options &&\n                    axis.options.scrollbar &&\n                    axis.options.scrollbar.enabled) {\n                    // Predefined options:\n                    axis.options.scrollbar.vertical = !axis.horiz;\n                    axis.options.startOnTick = axis.options.endOnTick = false;\n                    axis.scrollbar = new Scrollbar(axis.chart.renderer, axis.options.scrollbar, axis.chart);\n                    addEvent(axis.scrollbar, 'changed', function (e) {\n                        var _a = getExtremes(axis), axisMin = _a.axisMin, axisMax = _a.axisMax, unitedMin = _a.scrollMin, unitedMax = _a.scrollMax, range = unitedMax - unitedMin;\n                        var to, from;\n                        // #12834, scroll when show/hide series, wrong extremes\n                        if (!defined(axisMin) || !defined(axisMax)) {\n                            return;\n                        }\n                        if ((axis.horiz && !axis.reversed) ||\n                            (!axis.horiz && axis.reversed)) {\n                            to = unitedMin + range * this.to;\n                            from = unitedMin + range * this.from;\n                        }\n                        else {\n                            // Y-values in browser are reversed, but this also\n                            // applies for reversed horizontal axis:\n                            to = unitedMin + range * (1 - this.from);\n                            from = unitedMin + range * (1 - this.to);\n                        }\n                        if (this.shouldUpdateExtremes(e.DOMType)) {\n                            // #17977, set animation to undefined instead of true\n                            var animate = e.DOMType === 'mousemove' ||\n                                e.DOMType === 'touchmove' ? false : void 0;\n                            axis.setExtremes(from, to, true, animate, e);\n                        }\n                        else {\n                            // When live redraw is disabled, don't change extremes\n                            // Only change the position of the scrollbar thumb\n                            this.setRange(this.from, this.to);\n                        }\n                    });\n                }\n            }\n            /**\n             * Wrap rendering axis, and update scrollbar if one is created.\n             * @private\n             */\n            function onAxisAfterRender() {\n                var axis = this, _a = getExtremes(axis), scrollMin = _a.scrollMin, scrollMax = _a.scrollMax, scrollbar = axis.scrollbar, offset = (axis.axisTitleMargin + (axis.titleOffset || 0)), scrollbarsOffsets = axis.chart.scrollbarsOffsets, axisMargin = axis.options.margin || 0;\n                var offsetsIndex, from, to;\n                if (scrollbar && scrollbarsOffsets) {\n                    if (axis.horiz) {\n                        // Reserve space for labels/title\n                        if (!axis.opposite) {\n                            scrollbarsOffsets[1] += offset;\n                        }\n                        scrollbar.position(axis.left, (axis.top +\n                            axis.height +\n                            2 +\n                            scrollbarsOffsets[1] -\n                            (axis.opposite ? axisMargin : 0)), axis.width, axis.height);\n                        // Next scrollbar should reserve space for margin (if set)\n                        if (!axis.opposite) {\n                            scrollbarsOffsets[1] += axisMargin;\n                        }\n                        offsetsIndex = 1;\n                    }\n                    else {\n                        // Reserve space for labels/title\n                        if (axis.opposite) {\n                            scrollbarsOffsets[0] += offset;\n                        }\n                        var xPosition = void 0;\n                        if (!scrollbar.options.opposite) {\n                            xPosition = axis.opposite ? 0 : axisMargin;\n                        }\n                        else {\n                            xPosition = axis.left +\n                                axis.width +\n                                2 +\n                                scrollbarsOffsets[0] -\n                                (axis.opposite ? 0 : axisMargin);\n                        }\n                        scrollbar.position(xPosition, axis.top, axis.width, axis.height);\n                        // Next scrollbar should reserve space for margin (if set)\n                        if (axis.opposite) {\n                            scrollbarsOffsets[0] += axisMargin;\n                        }\n                        offsetsIndex = 0;\n                    }\n                    scrollbarsOffsets[offsetsIndex] += scrollbar.size +\n                        (scrollbar.options.margin || 0);\n                    if (isNaN(scrollMin) ||\n                        isNaN(scrollMax) ||\n                        !defined(axis.min) ||\n                        !defined(axis.max) ||\n                        axis.min === axis.max // #10733\n                    ) {\n                        // Default action: when extremes are the same or there is\n                        // not extremes on the axis, but scrollbar exists, make it\n                        // full size\n                        scrollbar.setRange(0, 1);\n                    }\n                    else {\n                        from = ((axis.min - scrollMin) /\n                            (scrollMax - scrollMin));\n                        to = ((axis.max - scrollMin) /\n                            (scrollMax - scrollMin));\n                        if ((axis.horiz && !axis.reversed) ||\n                            (!axis.horiz && axis.reversed)) {\n                            scrollbar.setRange(from, to);\n                        }\n                        else {\n                            // Inverse vertical axis\n                            scrollbar.setRange(1 - to, 1 - from);\n                        }\n                    }\n                }\n            }\n        })(ScrollbarAxis || (ScrollbarAxis = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return ScrollbarAxis;\n    });\n    _registerModule(_modules, 'Stock/Scrollbar/ScrollbarDefaults.js', [], function () {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  Constant\n         *\n         * */\n        /**\n         *\n         * The scrollbar is a means of panning over the X axis of a stock chart.\n         * Scrollbars can also be applied to other types of axes.\n         *\n         * Another approach to scrollable charts is the [chart.scrollablePlotArea](\n         * https://api.highcharts.com/highcharts/chart.scrollablePlotArea) option that\n         * is especially suitable for simpler cartesian charts on mobile.\n         *\n         * In styled mode, all the presentational options for the\n         * scrollbar are replaced by the classes `.highcharts-scrollbar-thumb`,\n         * `.highcharts-scrollbar-arrow`, `.highcharts-scrollbar-button`,\n         * `.highcharts-scrollbar-rifles` and `.highcharts-scrollbar-track`.\n         *\n         * @sample stock/yaxis/inverted-bar-scrollbar/\n         *         A scrollbar on a simple bar chart\n         *\n         * @product highstock gantt\n         * @optionparent scrollbar\n         *\n         * @private\n         */\n        var ScrollbarDefaults = {\n            /**\n             * The height of the scrollbar. If `buttonsEnabled` is true , the height\n             * also applies to the width of the scroll arrows so that they are always\n             * squares.\n             *\n             * @sample stock/scrollbar/style/\n             *         Non-default height\n             *\n             * @type    {number}\n             */\n            height: 10,\n            /**\n             * The border rounding radius of the bar.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             */\n            barBorderRadius: 5,\n            /**\n             * The corner radius of the scrollbar buttons.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             */\n            buttonBorderRadius: 0,\n            /**\n             * Enable or disable the buttons at the end of the scrollbar.\n             *\n             * @since 11.0.0\n             */\n            buttonsEnabled: false,\n            /**\n             * Enable or disable the scrollbar.\n             *\n             * @sample stock/scrollbar/enabled/\n             *         Disable the scrollbar, only use navigator\n             *\n             * @type      {boolean}\n             * @default   true\n             * @apioption scrollbar.enabled\n             */\n            /**\n             * Whether to redraw the main chart as the scrollbar or the navigator\n             * zoomed window is moved. Defaults to `true` for modern browsers and\n             * `false` for legacy IE browsers as well as mobile devices.\n             *\n             * @sample stock/scrollbar/liveredraw\n             *         Setting live redraw to false\n             *\n             * @type  {boolean}\n             * @since 1.3\n             */\n            liveRedraw: void 0,\n            /**\n             * The margin between the scrollbar and its axis when the scrollbar is\n             * applied directly to an axis, or the navigator in case that is enabled.\n             * Defaults to 10 for axis, 0 for navigator.\n             *\n             * @type {number|undefined}\n             */\n            margin: void 0,\n            /**\n             * The minimum width of the scrollbar.\n             *\n             * @since 1.2.5\n             */\n            minWidth: 6,\n            /** @ignore-option */\n            opposite: true,\n            /**\n             * Whether to show or hide the scrollbar when the scrolled content is\n             * zoomed out to it full extent.\n             *\n             * @type      {boolean}\n             * @default   true\n             * @apioption scrollbar.showFull\n             */\n            step: 0.2,\n            /**\n             * The z index of the scrollbar group.\n             */\n            zIndex: 3,\n            /**\n             * The background color of the scrollbar itself.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            barBackgroundColor: \"#cccccc\" /* Palette.neutralColor20 */,\n            /**\n             * The width of the bar's border.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             */\n            barBorderWidth: 0,\n            /**\n             * The color of the scrollbar's border.\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            barBorderColor: \"#cccccc\" /* Palette.neutralColor20 */,\n            /**\n             * The color of the small arrow inside the scrollbar buttons.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            buttonArrowColor: \"#333333\" /* Palette.neutralColor80 */,\n            /**\n             * The color of scrollbar buttons.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            buttonBackgroundColor: \"#e6e6e6\" /* Palette.neutralColor10 */,\n            /**\n             * The color of the border of the scrollbar buttons.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            buttonBorderColor: \"#cccccc\" /* Palette.neutralColor20 */,\n            /**\n             * The border width of the scrollbar buttons.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             */\n            buttonBorderWidth: 1,\n            /**\n             * The color of the small rifles in the middle of the scrollbar.\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            rifleColor: 'none',\n            /**\n             * The color of the track background.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            trackBackgroundColor: 'rgba(255, 255, 255, 0.001)',\n            /**\n             * The color of the border of the scrollbar track.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            trackBorderColor: \"#cccccc\" /* Palette.neutralColor20 */,\n            /**\n             * The corner radius of the border of the scrollbar track.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             */\n            trackBorderRadius: 5,\n            /**\n             * The width of the border of the scrollbar track.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             */\n            trackBorderWidth: 1\n        };\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return ScrollbarDefaults;\n    });\n    _registerModule(_modules, 'Stock/Scrollbar/Scrollbar.js', [_modules['Core/Defaults.js'], _modules['Core/Globals.js'], _modules['Core/Axis/ScrollbarAxis.js'], _modules['Stock/Scrollbar/ScrollbarDefaults.js'], _modules['Core/Utilities.js']], function (D, H, ScrollbarAxis, ScrollbarDefaults, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var defaultOptions = D.defaultOptions;\n        var addEvent = U.addEvent, correctFloat = U.correctFloat, defined = U.defined, destroyObjectProperties = U.destroyObjectProperties, fireEvent = U.fireEvent, merge = U.merge, pick = U.pick, removeEvent = U.removeEvent;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        /* eslint-disable no-invalid-this, valid-jsdoc */\n        /**\n         * A reusable scrollbar, internally used in Highcharts Stock's\n         * navigator and optionally on individual axes.\n         *\n         * @private\n         * @class\n         * @name Highcharts.Scrollbar\n         * @param {Highcharts.SVGRenderer} renderer\n         * @param {Highcharts.ScrollbarOptions} options\n         * @param {Highcharts.Chart} chart\n         */\n        var Scrollbar = /** @class */ (function () {\n            /* *\n             *\n             *  Constructors\n             *\n             * */\n            function Scrollbar(renderer, options, chart) {\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                this._events = [];\n                this.chartX = 0;\n                this.chartY = 0;\n                this.from = 0;\n                this.scrollbarButtons = [];\n                this.scrollbarLeft = 0;\n                this.scrollbarStrokeWidth = 1;\n                this.scrollbarTop = 0;\n                this.size = 0;\n                this.to = 0;\n                this.trackBorderWidth = 1;\n                this.x = 0;\n                this.y = 0;\n                this.init(renderer, options, chart);\n            }\n            /* *\n             *\n             *  Static Functions\n             *\n             * */\n            Scrollbar.compose = function (AxisClass) {\n                ScrollbarAxis.compose(AxisClass, Scrollbar);\n            };\n            /**\n             * When we have vertical scrollbar, rifles and arrow in buttons should be\n             * rotated. The same method is used in Navigator's handles, to rotate them.\n             *\n             * @function Highcharts.swapXY\n             *\n             * @param {Highcharts.SVGPathArray} path\n             * Path to be rotated.\n             *\n             * @param {boolean} [vertical]\n             * If vertical scrollbar, swap x-y values.\n             *\n             * @return {Highcharts.SVGPathArray}\n             * Rotated path.\n             *\n             * @requires modules/stock\n             */\n            Scrollbar.swapXY = function (path, vertical) {\n                if (vertical) {\n                    path.forEach(function (seg) {\n                        var len = seg.length;\n                        var temp;\n                        for (var i = 0; i < len; i += 2) {\n                            temp = seg[i + 1];\n                            if (typeof temp === 'number') {\n                                seg[i + 1] = seg[i + 2];\n                                seg[i + 2] = temp;\n                            }\n                        }\n                    });\n                }\n                return path;\n            };\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Set up the mouse and touch events for the Scrollbar\n             *\n             * @private\n             * @function Highcharts.Scrollbar#addEvents\n             */\n            Scrollbar.prototype.addEvents = function () {\n                var buttonsOrder = this.options.inverted ? [1, 0] : [0, 1], buttons = this.scrollbarButtons, bar = this.scrollbarGroup.element, track = this.track.element, mouseDownHandler = this.mouseDownHandler.bind(this), mouseMoveHandler = this.mouseMoveHandler.bind(this), mouseUpHandler = this.mouseUpHandler.bind(this);\n                var _events = [\n                    // Mouse events\n                    [\n                        buttons[buttonsOrder[0]].element,\n                        'click',\n                        this.buttonToMinClick.bind(this)\n                    ],\n                    [\n                        buttons[buttonsOrder[1]].element,\n                        'click',\n                        this.buttonToMaxClick.bind(this)\n                    ],\n                    [track, 'click', this.trackClick.bind(this)],\n                    [bar, 'mousedown', mouseDownHandler],\n                    [bar.ownerDocument, 'mousemove', mouseMoveHandler],\n                    [bar.ownerDocument, 'mouseup', mouseUpHandler],\n                    // Touch events\n                    [bar, 'touchstart', mouseDownHandler],\n                    [bar.ownerDocument, 'touchmove', mouseMoveHandler],\n                    [bar.ownerDocument, 'touchend', mouseUpHandler]\n                ];\n                // Add them all\n                _events.forEach(function (args) {\n                    addEvent.apply(null, args);\n                });\n                this._events = _events;\n            };\n            Scrollbar.prototype.buttonToMaxClick = function (e) {\n                var scroller = this;\n                var range = ((scroller.to - scroller.from) *\n                    pick(scroller.options.step, 0.2));\n                scroller.updatePosition(scroller.from + range, scroller.to + range);\n                fireEvent(scroller, 'changed', {\n                    from: scroller.from,\n                    to: scroller.to,\n                    trigger: 'scrollbar',\n                    DOMEvent: e\n                });\n            };\n            Scrollbar.prototype.buttonToMinClick = function (e) {\n                var scroller = this;\n                var range = correctFloat(scroller.to - scroller.from) *\n                    pick(scroller.options.step, 0.2);\n                scroller.updatePosition(correctFloat(scroller.from - range), correctFloat(scroller.to - range));\n                fireEvent(scroller, 'changed', {\n                    from: scroller.from,\n                    to: scroller.to,\n                    trigger: 'scrollbar',\n                    DOMEvent: e\n                });\n            };\n            /**\n             * Get normalized (0-1) cursor position over the scrollbar\n             *\n             * @private\n             * @function Highcharts.Scrollbar#cursorToScrollbarPosition\n             *\n             * @param  {*} normalizedEvent\n             *         normalized event, with chartX and chartY values\n             *\n             * @return {Highcharts.Dictionary<number>}\n             *         Local position {chartX, chartY}\n             */\n            Scrollbar.prototype.cursorToScrollbarPosition = function (normalizedEvent) {\n                var scroller = this, options = scroller.options, minWidthDifference = options.minWidth > scroller.calculatedWidth ?\n                    options.minWidth :\n                    0; // minWidth distorts translation\n                return {\n                    chartX: (normalizedEvent.chartX - scroller.x -\n                        scroller.xOffset) /\n                        (scroller.barWidth - minWidthDifference),\n                    chartY: (normalizedEvent.chartY - scroller.y -\n                        scroller.yOffset) /\n                        (scroller.barWidth - minWidthDifference)\n                };\n            };\n            /**\n             * Destroys allocated elements.\n             *\n             * @private\n             * @function Highcharts.Scrollbar#destroy\n             */\n            Scrollbar.prototype.destroy = function () {\n                var scroller = this, navigator = scroller.chart.scroller;\n                // Disconnect events added in addEvents\n                scroller.removeEvents();\n                // Destroy properties\n                [\n                    'track',\n                    'scrollbarRifles',\n                    'scrollbar',\n                    'scrollbarGroup',\n                    'group'\n                ].forEach(function (prop) {\n                    if (scroller[prop] && scroller[prop].destroy) {\n                        scroller[prop] = scroller[prop].destroy();\n                    }\n                });\n                // #6421, chart may have more scrollbars\n                if (navigator && scroller === navigator.scrollbar) {\n                    navigator.scrollbar = null;\n                    // Destroy elements in collection\n                    destroyObjectProperties(navigator.scrollbarButtons);\n                }\n            };\n            /**\n             * Draw the scrollbar buttons with arrows\n             *\n             * @private\n             * @function Highcharts.Scrollbar#drawScrollbarButton\n             * @param {number} index\n             *        0 is left, 1 is right\n             */\n            Scrollbar.prototype.drawScrollbarButton = function (index) {\n                var scroller = this, renderer = scroller.renderer, scrollbarButtons = scroller.scrollbarButtons, options = scroller.options, size = scroller.size, group = renderer.g().add(scroller.group);\n                scrollbarButtons.push(group);\n                if (options.buttonsEnabled) {\n                    // Create a rectangle for the scrollbar button\n                    var rect = renderer.rect()\n                        .addClass('highcharts-scrollbar-button')\n                        .add(group);\n                    // Presentational attributes\n                    if (!scroller.chart.styledMode) {\n                        rect.attr({\n                            stroke: options.buttonBorderColor,\n                            'stroke-width': options.buttonBorderWidth,\n                            fill: options.buttonBackgroundColor\n                        });\n                    }\n                    // Place the rectangle based on the rendered stroke width\n                    rect.attr(rect.crisp({\n                        x: -0.5,\n                        y: -0.5,\n                        // +1 to compensate for crispifying in rect method\n                        width: size + 1,\n                        height: size + 1,\n                        r: options.buttonBorderRadius\n                    }, rect.strokeWidth()));\n                    // Button arrow\n                    var arrow = renderer\n                        .path(Scrollbar.swapXY([[\n                            'M',\n                            size / 2 + (index ? -1 : 1),\n                            size / 2 - 3\n                        ], [\n                            'L',\n                            size / 2 + (index ? -1 : 1),\n                            size / 2 + 3\n                        ], [\n                            'L',\n                            size / 2 + (index ? 2 : -2),\n                            size / 2\n                        ]], options.vertical))\n                        .addClass('highcharts-scrollbar-arrow')\n                        .add(scrollbarButtons[index]);\n                    if (!scroller.chart.styledMode) {\n                        arrow.attr({\n                            fill: options.buttonArrowColor\n                        });\n                    }\n                }\n            };\n            /**\n             * @private\n             * @function Highcharts.Scrollbar#init\n             * @param {Highcharts.SVGRenderer} renderer\n             * @param {Highcharts.ScrollbarOptions} options\n             * @param {Highcharts.Chart} chart\n             */\n            Scrollbar.prototype.init = function (renderer, options, chart) {\n                var scroller = this;\n                scroller.scrollbarButtons = [];\n                scroller.renderer = renderer;\n                scroller.userOptions = options;\n                scroller.options = merge(ScrollbarDefaults, defaultOptions.scrollbar, options);\n                scroller.options.margin = pick(scroller.options.margin, 10);\n                scroller.chart = chart;\n                // backward compatibility\n                scroller.size = pick(scroller.options.size, scroller.options.height);\n                // Init\n                if (options.enabled) {\n                    scroller.render();\n                    scroller.addEvents();\n                }\n            };\n            Scrollbar.prototype.mouseDownHandler = function (e) {\n                var _a;\n                var scroller = this, normalizedEvent = ((_a = scroller.chart.pointer) === null || _a === void 0 ? void 0 : _a.normalize(e)) || e, mousePosition = scroller.cursorToScrollbarPosition(normalizedEvent);\n                scroller.chartX = mousePosition.chartX;\n                scroller.chartY = mousePosition.chartY;\n                scroller.initPositions = [scroller.from, scroller.to];\n                scroller.grabbedCenter = true;\n            };\n            /**\n             * Event handler for the mouse move event.\n             * @private\n             */\n            Scrollbar.prototype.mouseMoveHandler = function (e) {\n                var _a;\n                var scroller = this, normalizedEvent = ((_a = scroller.chart.pointer) === null || _a === void 0 ? void 0 : _a.normalize(e)) || e, options = scroller.options, direction = options.vertical ?\n                    'chartY' : 'chartX', initPositions = scroller.initPositions || [];\n                var scrollPosition, chartPosition, change;\n                // In iOS, a mousemove event with e.pageX === 0 is fired when\n                // holding the finger down in the center of the scrollbar. This\n                // should be ignored.\n                if (scroller.grabbedCenter &&\n                    // #4696, scrollbar failed on Android\n                    (!e.touches || e.touches[0][direction] !== 0)) {\n                    chartPosition = scroller.cursorToScrollbarPosition(normalizedEvent)[direction];\n                    scrollPosition = scroller[direction];\n                    change = chartPosition - scrollPosition;\n                    scroller.hasDragged = true;\n                    scroller.updatePosition(initPositions[0] + change, initPositions[1] + change);\n                    if (scroller.hasDragged) {\n                        fireEvent(scroller, 'changed', {\n                            from: scroller.from,\n                            to: scroller.to,\n                            trigger: 'scrollbar',\n                            DOMType: e.type,\n                            DOMEvent: e\n                        });\n                    }\n                }\n            };\n            /**\n             * Event handler for the mouse up event.\n             * @private\n             */\n            Scrollbar.prototype.mouseUpHandler = function (e) {\n                var scroller = this;\n                if (scroller.hasDragged) {\n                    fireEvent(scroller, 'changed', {\n                        from: scroller.from,\n                        to: scroller.to,\n                        trigger: 'scrollbar',\n                        DOMType: e.type,\n                        DOMEvent: e\n                    });\n                }\n                scroller.grabbedCenter =\n                    scroller.hasDragged =\n                        scroller.chartX =\n                            scroller.chartY = null;\n            };\n            /**\n             * Position the scrollbar, method called from a parent with defined\n             * dimensions.\n             *\n             * @private\n             * @function Highcharts.Scrollbar#position\n             * @param {number} x\n             *        x-position on the chart\n             * @param {number} y\n             *        y-position on the chart\n             * @param {number} width\n             *        width of the scrollbar\n             * @param {number} height\n             *        height of the scrollbar\n             */\n            Scrollbar.prototype.position = function (x, y, width, height) {\n                var scroller = this, options = scroller.options, buttonsEnabled = options.buttonsEnabled, _a = options.margin, margin = _a === void 0 ? 0 : _a, vertical = options.vertical, method = scroller.rendered ? 'animate' : 'attr';\n                var xOffset = height, yOffset = 0;\n                // Make the scrollbar visible when it is repositioned, #15763.\n                scroller.group.show();\n                scroller.x = x;\n                scroller.y = y + this.trackBorderWidth;\n                scroller.width = width; // width with buttons\n                scroller.height = height;\n                scroller.xOffset = xOffset;\n                scroller.yOffset = yOffset;\n                // If Scrollbar is a vertical type, swap options:\n                if (vertical) {\n                    scroller.width = scroller.yOffset = width = yOffset = scroller.size;\n                    scroller.xOffset = xOffset = 0;\n                    scroller.yOffset = yOffset = buttonsEnabled ? scroller.size : 0;\n                    // width without buttons\n                    scroller.barWidth = height - (buttonsEnabled ? width * 2 : 0);\n                    scroller.x = x = x + margin;\n                }\n                else {\n                    scroller.height = height = scroller.size;\n                    scroller.xOffset = xOffset = buttonsEnabled ? scroller.size : 0;\n                    // width without buttons\n                    scroller.barWidth = width - (buttonsEnabled ? height * 2 : 0);\n                    scroller.y = scroller.y + margin;\n                }\n                // Set general position for a group:\n                scroller.group[method]({\n                    translateX: x,\n                    translateY: scroller.y\n                });\n                // Resize background/track:\n                scroller.track[method]({\n                    width: width,\n                    height: height\n                });\n                // Move right/bottom button to its place:\n                scroller.scrollbarButtons[1][method]({\n                    translateX: vertical ? 0 : width - xOffset,\n                    translateY: vertical ? height - yOffset : 0\n                });\n            };\n            /**\n             * Removes the event handlers attached previously with addEvents.\n             *\n             * @private\n             * @function Highcharts.Scrollbar#removeEvents\n             */\n            Scrollbar.prototype.removeEvents = function () {\n                this._events.forEach(function (args) {\n                    removeEvent.apply(null, args);\n                });\n                this._events.length = 0;\n            };\n            /**\n             * Render scrollbar with all required items.\n             *\n             * @private\n             * @function Highcharts.Scrollbar#render\n             */\n            Scrollbar.prototype.render = function () {\n                var scroller = this, renderer = scroller.renderer, options = scroller.options, size = scroller.size, styledMode = scroller.chart.styledMode, group = renderer.g('scrollbar')\n                    .attr({\n                    zIndex: options.zIndex\n                })\n                    .hide() // initially hide the scrollbar #15863\n                    .add();\n                // Draw the scrollbar group\n                scroller.group = group;\n                // Draw the scrollbar track:\n                scroller.track = renderer.rect()\n                    .addClass('highcharts-scrollbar-track')\n                    .attr({\n                    r: options.trackBorderRadius || 0,\n                    height: size,\n                    width: size\n                }).add(group);\n                if (!styledMode) {\n                    scroller.track.attr({\n                        fill: options.trackBackgroundColor,\n                        stroke: options.trackBorderColor,\n                        'stroke-width': options.trackBorderWidth\n                    });\n                }\n                var trackBorderWidth = scroller.trackBorderWidth =\n                    scroller.track.strokeWidth();\n                scroller.track.attr({\n                    x: -trackBorderWidth % 2 / 2,\n                    y: -trackBorderWidth % 2 / 2\n                });\n                // Draw the scrollbar itself\n                scroller.scrollbarGroup = renderer.g().add(group);\n                scroller.scrollbar = renderer.rect()\n                    .addClass('highcharts-scrollbar-thumb')\n                    .attr({\n                    height: size - trackBorderWidth,\n                    width: size - trackBorderWidth,\n                    r: options.barBorderRadius || 0\n                }).add(scroller.scrollbarGroup);\n                scroller.scrollbarRifles = renderer\n                    .path(Scrollbar.swapXY([\n                    ['M', -3, size / 4],\n                    ['L', -3, 2 * size / 3],\n                    ['M', 0, size / 4],\n                    ['L', 0, 2 * size / 3],\n                    ['M', 3, size / 4],\n                    ['L', 3, 2 * size / 3]\n                ], options.vertical))\n                    .addClass('highcharts-scrollbar-rifles')\n                    .add(scroller.scrollbarGroup);\n                if (!styledMode) {\n                    scroller.scrollbar.attr({\n                        fill: options.barBackgroundColor,\n                        stroke: options.barBorderColor,\n                        'stroke-width': options.barBorderWidth\n                    });\n                    scroller.scrollbarRifles.attr({\n                        stroke: options.rifleColor,\n                        'stroke-width': 1\n                    });\n                }\n                scroller.scrollbarStrokeWidth = scroller.scrollbar.strokeWidth();\n                scroller.scrollbarGroup.translate(-scroller.scrollbarStrokeWidth % 2 / 2, -scroller.scrollbarStrokeWidth % 2 / 2);\n                // Draw the buttons:\n                scroller.drawScrollbarButton(0);\n                scroller.drawScrollbarButton(1);\n            };\n            /**\n             * Set scrollbar size, with a given scale.\n             *\n             * @private\n             * @function Highcharts.Scrollbar#setRange\n             * @param {number} from\n             *        scale (0-1) where bar should start\n             * @param {number} to\n             *        scale (0-1) where bar should end\n             */\n            Scrollbar.prototype.setRange = function (from, to) {\n                var scroller = this, options = scroller.options, vertical = options.vertical, minWidth = options.minWidth, fullWidth = scroller.barWidth, method = (this.rendered &&\n                    !this.hasDragged &&\n                    !(this.chart.navigator && this.chart.navigator.hasDragged)) ? 'animate' : 'attr';\n                if (!defined(fullWidth)) {\n                    return;\n                }\n                var toPX = fullWidth * Math.min(to, 1);\n                var fromPX, newSize;\n                from = Math.max(from, 0);\n                fromPX = Math.ceil(fullWidth * from);\n                scroller.calculatedWidth = newSize = correctFloat(toPX - fromPX);\n                // We need to recalculate position, if minWidth is used\n                if (newSize < minWidth) {\n                    fromPX = (fullWidth - minWidth + newSize) * from;\n                    newSize = minWidth;\n                }\n                var newPos = Math.floor(fromPX + scroller.xOffset + scroller.yOffset);\n                var newRiflesPos = newSize / 2 - 0.5; // -0.5 -> rifle line width / 2\n                // Store current position:\n                scroller.from = from;\n                scroller.to = to;\n                if (!vertical) {\n                    scroller.scrollbarGroup[method]({\n                        translateX: newPos\n                    });\n                    scroller.scrollbar[method]({\n                        width: newSize\n                    });\n                    scroller.scrollbarRifles[method]({\n                        translateX: newRiflesPos\n                    });\n                    scroller.scrollbarLeft = newPos;\n                    scroller.scrollbarTop = 0;\n                }\n                else {\n                    scroller.scrollbarGroup[method]({\n                        translateY: newPos\n                    });\n                    scroller.scrollbar[method]({\n                        height: newSize\n                    });\n                    scroller.scrollbarRifles[method]({\n                        translateY: newRiflesPos\n                    });\n                    scroller.scrollbarTop = newPos;\n                    scroller.scrollbarLeft = 0;\n                }\n                if (newSize <= 12) {\n                    scroller.scrollbarRifles.hide();\n                }\n                else {\n                    scroller.scrollbarRifles.show();\n                }\n                // Show or hide the scrollbar based on the showFull setting\n                if (options.showFull === false) {\n                    if (from <= 0 && to >= 1) {\n                        scroller.group.hide();\n                    }\n                    else {\n                        scroller.group.show();\n                    }\n                }\n                scroller.rendered = true;\n            };\n            /**\n             * Checks if the extremes should be updated in response to a scrollbar\n             * change event.\n             *\n             * @private\n             * @function Highcharts.Scrollbar#shouldUpdateExtremes\n             */\n            Scrollbar.prototype.shouldUpdateExtremes = function (eventType) {\n                return (pick(this.options.liveRedraw, H.svg &&\n                    !H.isTouchDevice &&\n                    !this.chart.boosted) ||\n                    // Mouseup always should change extremes\n                    eventType === 'mouseup' ||\n                    eventType === 'touchend' ||\n                    // Internal events\n                    !defined(eventType));\n            };\n            Scrollbar.prototype.trackClick = function (e) {\n                var _a;\n                var scroller = this;\n                var normalizedEvent = ((_a = scroller.chart.pointer) === null || _a === void 0 ? void 0 : _a.normalize(e)) || e, range = scroller.to - scroller.from, top = scroller.y + scroller.scrollbarTop, left = scroller.x + scroller.scrollbarLeft;\n                if ((scroller.options.vertical && normalizedEvent.chartY > top) ||\n                    (!scroller.options.vertical && normalizedEvent.chartX > left)) {\n                    // On the top or on the left side of the track:\n                    scroller.updatePosition(scroller.from + range, scroller.to + range);\n                }\n                else {\n                    // On the bottom or the right side of the track:\n                    scroller.updatePosition(scroller.from - range, scroller.to - range);\n                }\n                fireEvent(scroller, 'changed', {\n                    from: scroller.from,\n                    to: scroller.to,\n                    trigger: 'scrollbar',\n                    DOMEvent: e\n                });\n            };\n            /**\n             * Update the scrollbar with new options\n             *\n             * @private\n             * @function Highcharts.Scrollbar#update\n             * @param  {Highcharts.ScrollbarOptions} options\n             */\n            Scrollbar.prototype.update = function (options) {\n                this.destroy();\n                this.init(this.chart.renderer, merge(true, this.options, options), this.chart);\n            };\n            /**\n             * Update position option in the Scrollbar, with normalized 0-1 scale\n             *\n             * @private\n             * @function Highcharts.Scrollbar#updatePosition\n             * @param  {number} from\n             * @param  {number} to\n             */\n            Scrollbar.prototype.updatePosition = function (from, to) {\n                if (to > 1) {\n                    from = correctFloat(1 - correctFloat(to - from));\n                    to = 1;\n                }\n                if (from < 0) {\n                    to = correctFloat(to - from);\n                    from = 0;\n                }\n                this.from = from;\n                this.to = to;\n            };\n            /* *\n             *\n             *  Static Properties\n             *\n             * */\n            Scrollbar.defaultOptions = ScrollbarDefaults;\n            return Scrollbar;\n        }());\n        /* *\n         *\n         *  Registry\n         *\n         * */\n        defaultOptions.scrollbar = merge(true, Scrollbar.defaultOptions, defaultOptions.scrollbar);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return Scrollbar;\n    });\n    _registerModule(_modules, 'Stock/Navigator/Navigator.js', [_modules['Core/Axis/Axis.js'], _modules['Stock/Navigator/ChartNavigatorComposition.js'], _modules['Core/Defaults.js'], _modules['Core/Globals.js'], _modules['Core/Axis/NavigatorAxisComposition.js'], _modules['Stock/Navigator/NavigatorComposition.js'], _modules['Stock/Scrollbar/Scrollbar.js'], _modules['Core/Utilities.js']], function (Axis, ChartNavigatorComposition, D, H, NavigatorAxisAdditions, NavigatorComposition, Scrollbar, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var defaultOptions = D.defaultOptions;\n        var isTouchDevice = H.isTouchDevice;\n        var addEvent = U.addEvent, clamp = U.clamp, correctFloat = U.correctFloat, defined = U.defined, destroyObjectProperties = U.destroyObjectProperties, erase = U.erase, extend = U.extend, find = U.find, fireEvent = U.fireEvent, isArray = U.isArray, isNumber = U.isNumber, merge = U.merge, pick = U.pick, removeEvent = U.removeEvent, splat = U.splat;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Finding the min or max of a set of variables where we don't know if they are\n         * defined, is a pattern that is repeated several places in Highcharts. Consider\n         * making this a global utility method.\n         * @private\n         */\n        function numExt(extreme) {\n            var args = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                args[_i - 1] = arguments[_i];\n            }\n            var numbers = [].filter.call(args, isNumber);\n            if (numbers.length) {\n                return Math[extreme].apply(0, numbers);\n            }\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The Navigator class\n         *\n         * @private\n         * @class\n         * @name Highcharts.Navigator\n         *\n         * @param {Highcharts.Chart} chart\n         *        Chart object\n         */\n        var Navigator = /** @class */ (function () {\n            /* *\n             *\n             *  Constructor\n             *\n             * */\n            function Navigator(chart) {\n                this.scrollbarHeight = 0;\n                this.init(chart);\n            }\n            /* *\n             *\n             *  Static Properties\n             *\n             * */\n            Navigator.compose = function (ChartClass, AxisClass, SeriesClass) {\n                ChartNavigatorComposition.compose(ChartClass, Navigator);\n                NavigatorComposition.compose(ChartClass, AxisClass, SeriesClass);\n            };\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Draw one of the handles on the side of the zoomed range in the navigator.\n             *\n             * @private\n             * @function Highcharts.Navigator#drawHandle\n             *\n             * @param {number} x\n             *        The x center for the handle\n             *\n             * @param {number} index\n             *        0 for left and 1 for right\n             *\n             * @param {boolean|undefined} inverted\n             *        Flag for chart.inverted\n             *\n             * @param {string} verb\n             *        Use 'animate' or 'attr'\n             */\n            Navigator.prototype.drawHandle = function (x, index, inverted, verb) {\n                var navigator = this, height = navigator.navigatorOptions.handles.height;\n                // Place it\n                navigator.handles[index][verb](inverted ? {\n                    translateX: Math.round(navigator.left + navigator.height / 2),\n                    translateY: Math.round(navigator.top + parseInt(x, 10) + 0.5 - height)\n                } : {\n                    translateX: Math.round(navigator.left + parseInt(x, 10)),\n                    translateY: Math.round(navigator.top + navigator.height / 2 - height / 2 - 1)\n                });\n            };\n            /**\n             * Render outline around the zoomed range\n             *\n             * @private\n             * @function Highcharts.Navigator#drawOutline\n             *\n             * @param {number} zoomedMin\n             *        in pixels position where zoomed range starts\n             *\n             * @param {number} zoomedMax\n             *        in pixels position where zoomed range ends\n             *\n             * @param {boolean|undefined} inverted\n             *        flag if chart is inverted\n             *\n             * @param {string} verb\n             *        use 'animate' or 'attr'\n             */\n            Navigator.prototype.drawOutline = function (zoomedMin, zoomedMax, inverted, verb) {\n                var navigator = this, maskInside = navigator.navigatorOptions.maskInside, outlineWidth = navigator.outline.strokeWidth(), halfOutline = outlineWidth / 2, outlineCorrection = (outlineWidth % 2) / 2, // #5800\n                scrollButtonSize = navigator.scrollButtonSize, navigatorSize = navigator.size, navigatorTop = navigator.top, height = navigator.height, lineTop = navigatorTop - halfOutline, lineBtm = navigatorTop + height;\n                var left = navigator.left, verticalMin, path;\n                if (inverted) {\n                    verticalMin = navigatorTop + zoomedMax + outlineCorrection;\n                    zoomedMax = navigatorTop + zoomedMin + outlineCorrection;\n                    path = [\n                        [\n                            'M',\n                            left + height,\n                            navigatorTop - scrollButtonSize - outlineCorrection\n                        ],\n                        // top right of zoomed range\n                        ['L', left + height, verticalMin],\n                        ['L', left, verticalMin],\n                        ['M', left, zoomedMax],\n                        ['L', left + height, zoomedMax],\n                        [\n                            'L',\n                            left + height,\n                            navigatorTop + navigatorSize + scrollButtonSize\n                        ]\n                    ];\n                    if (maskInside) {\n                        path.push(\n                        // upper left of zoomed range\n                        ['M', left + height, verticalMin - halfOutline], \n                        // upper right of z.r.\n                        [\n                            'L',\n                            left + height,\n                            zoomedMax + halfOutline\n                        ]);\n                    }\n                }\n                else {\n                    left -= scrollButtonSize;\n                    zoomedMin += left + scrollButtonSize - outlineCorrection;\n                    zoomedMax += left + scrollButtonSize - outlineCorrection;\n                    path = [\n                        // left\n                        ['M', left, lineTop],\n                        // upper left of zoomed range\n                        ['L', zoomedMin, lineTop],\n                        // lower left of z.r.\n                        ['L', zoomedMin, lineBtm],\n                        // lower right of z.r.\n                        ['M', zoomedMax, lineBtm],\n                        // upper right of z.r.\n                        ['L', zoomedMax, lineTop],\n                        // right\n                        [\n                            'L',\n                            left + navigatorSize + scrollButtonSize * 2,\n                            navigatorTop + halfOutline\n                        ]\n                    ];\n                    if (maskInside) {\n                        path.push(\n                        // upper left of zoomed range\n                        ['M', zoomedMin - halfOutline, lineTop], \n                        // upper right of z.r.\n                        ['L', zoomedMax + halfOutline, lineTop]);\n                    }\n                }\n                navigator.outline[verb]({\n                    d: path\n                });\n            };\n            /**\n             * Render outline around the zoomed range\n             *\n             * @private\n             * @function Highcharts.Navigator#drawMasks\n             *\n             * @param {number} zoomedMin\n             *        in pixels position where zoomed range starts\n             *\n             * @param {number} zoomedMax\n             *        in pixels position where zoomed range ends\n             *\n             * @param {boolean|undefined} inverted\n             *        flag if chart is inverted\n             *\n             * @param {string} verb\n             *        use 'animate' or 'attr'\n             */\n            Navigator.prototype.drawMasks = function (zoomedMin, zoomedMax, inverted, verb) {\n                var navigator = this, left = navigator.left, top = navigator.top, navigatorHeight = navigator.height;\n                var height, width, x, y;\n                // Determine rectangle position & size\n                // According to (non)inverted position:\n                if (inverted) {\n                    x = [left, left, left];\n                    y = [top, top + zoomedMin, top + zoomedMax];\n                    width = [navigatorHeight, navigatorHeight, navigatorHeight];\n                    height = [\n                        zoomedMin,\n                        zoomedMax - zoomedMin,\n                        navigator.size - zoomedMax\n                    ];\n                }\n                else {\n                    x = [left, left + zoomedMin, left + zoomedMax];\n                    y = [top, top, top];\n                    width = [\n                        zoomedMin,\n                        zoomedMax - zoomedMin,\n                        navigator.size - zoomedMax\n                    ];\n                    height = [navigatorHeight, navigatorHeight, navigatorHeight];\n                }\n                navigator.shades.forEach(function (shade, i) {\n                    shade[verb]({\n                        x: x[i],\n                        y: y[i],\n                        width: width[i],\n                        height: height[i]\n                    });\n                });\n            };\n            /**\n             * Generate DOM elements for a navigator:\n             *\n             * - main navigator group\n             *\n             * - all shades\n             *\n             * - outline\n             *\n             * - handles\n             *\n             * @private\n             * @function Highcharts.Navigator#renderElements\n             */\n            Navigator.prototype.renderElements = function () {\n                var navigator = this, navigatorOptions = navigator.navigatorOptions, maskInside = navigatorOptions.maskInside, chart = navigator.chart, inverted = chart.inverted, renderer = chart.renderer, mouseCursor = {\n                    cursor: inverted ? 'ns-resize' : 'ew-resize'\n                }, \n                // Create the main navigator group\n                navigatorGroup = navigator.navigatorGroup = renderer\n                    .g('navigator')\n                    .attr({\n                    zIndex: 8,\n                    visibility: 'hidden'\n                })\n                    .add();\n                // Create masks, each mask will get events and fill:\n                [\n                    !maskInside,\n                    maskInside,\n                    !maskInside\n                ].forEach(function (hasMask, index) {\n                    var shade = renderer.rect()\n                        .addClass('highcharts-navigator-mask' +\n                        (index === 1 ? '-inside' : '-outside'))\n                        .add(navigatorGroup);\n                    if (!chart.styledMode) {\n                        shade.attr({\n                            fill: hasMask ?\n                                navigatorOptions.maskFill :\n                                'rgba(0,0,0,0)'\n                        });\n                        if (index === 1) {\n                            shade.css(mouseCursor);\n                        }\n                    }\n                    navigator.shades[index] = shade;\n                });\n                // Create the outline:\n                navigator.outline = renderer.path()\n                    .addClass('highcharts-navigator-outline')\n                    .add(navigatorGroup);\n                if (!chart.styledMode) {\n                    navigator.outline.attr({\n                        'stroke-width': navigatorOptions.outlineWidth,\n                        stroke: navigatorOptions.outlineColor\n                    });\n                }\n                // Create the handlers:\n                if (navigatorOptions.handles && navigatorOptions.handles.enabled) {\n                    var handlesOptions_1 = navigatorOptions.handles, height_1 = handlesOptions_1.height, width_1 = handlesOptions_1.width;\n                    [0, 1].forEach(function (index) {\n                        navigator.handles[index] = renderer.symbol(handlesOptions_1.symbols[index], -width_1 / 2 - 1, 0, width_1, height_1, handlesOptions_1);\n                        if (chart.inverted) {\n                            navigator.handles[index].attr({\n                                rotation: 90,\n                                rotationOriginX: Math.floor(-width_1 / 2),\n                                rotationOriginY: (height_1 + width_1) / 2\n                            });\n                        }\n                        // zIndex = 6 for right handle, 7 for left.\n                        // Can't be 10, because of the tooltip in inverted chart #2908\n                        navigator.handles[index].attr({ zIndex: 7 - index })\n                            .addClass('highcharts-navigator-handle ' +\n                            'highcharts-navigator-handle-' +\n                            ['left', 'right'][index]).add(navigatorGroup);\n                        if (!chart.styledMode) {\n                            navigator.handles[index]\n                                .attr({\n                                fill: handlesOptions_1.backgroundColor,\n                                stroke: handlesOptions_1.borderColor,\n                                'stroke-width': handlesOptions_1.lineWidth\n                            })\n                                .css(mouseCursor);\n                        }\n                    });\n                }\n            };\n            /**\n             * Update navigator\n             *\n             * @private\n             * @function Highcharts.Navigator#update\n             *\n             * @param {Highcharts.NavigatorOptions} options\n             *        Options to merge in when updating navigator\n             */\n            Navigator.prototype.update = function (options) {\n                // Remove references to old navigator series in base series\n                (this.series || []).forEach(function (series) {\n                    if (series.baseSeries) {\n                        delete series.baseSeries.navigatorSeries;\n                    }\n                });\n                // Destroy and rebuild navigator\n                this.destroy();\n                var chartOptions = this.chart.options;\n                merge(true, chartOptions.navigator, options);\n                this.init(this.chart);\n            };\n            /**\n             * Render the navigator\n             *\n             * @private\n             * @function Highcharts.Navigator#render\n             * @param {number} min\n             *        X axis value minimum\n             * @param {number} max\n             *        X axis value maximum\n             * @param {number} [pxMin]\n             *        Pixel value minimum\n             * @param {number} [pxMax]\n             *        Pixel value maximum\n             */\n            Navigator.prototype.render = function (min, max, pxMin, pxMax) {\n                var navigator = this, chart = navigator.chart, xAxis = navigator.xAxis, pointRange = xAxis.pointRange || 0, scrollbarXAxis = xAxis.navigatorAxis.fake ? chart.xAxis[0] : xAxis, navigatorEnabled = navigator.navigatorEnabled, rendered = navigator.rendered, inverted = chart.inverted, minRange = chart.xAxis[0].minRange, maxRange = chart.xAxis[0].options.maxRange, scrollButtonSize = navigator.scrollButtonSize;\n                var navigatorWidth, scrollbarLeft, scrollbarTop, scrollbarHeight = navigator.scrollbarHeight, navigatorSize, verb;\n                // Don't redraw while moving the handles (#4703).\n                if (this.hasDragged && !defined(pxMin)) {\n                    return;\n                }\n                min = correctFloat(min - pointRange / 2);\n                max = correctFloat(max + pointRange / 2);\n                // Don't render the navigator until we have data (#486, #4202, #5172).\n                if (!isNumber(min) || !isNumber(max)) {\n                    // However, if navigator was already rendered, we may need to resize\n                    // it. For example hidden series, but visible navigator (#6022).\n                    if (rendered) {\n                        pxMin = 0;\n                        pxMax = pick(xAxis.width, scrollbarXAxis.width);\n                    }\n                    else {\n                        return;\n                    }\n                }\n                navigator.left = pick(xAxis.left, \n                // in case of scrollbar only, without navigator\n                chart.plotLeft + scrollButtonSize +\n                    (inverted ? chart.plotWidth : 0));\n                var zoomedMax = navigator.size = navigatorSize = pick(xAxis.len, (inverted ? chart.plotHeight : chart.plotWidth) -\n                    2 * scrollButtonSize);\n                if (inverted) {\n                    navigatorWidth = scrollbarHeight;\n                }\n                else {\n                    navigatorWidth = navigatorSize + 2 * scrollButtonSize;\n                }\n                // Get the pixel position of the handles\n                pxMin = pick(pxMin, xAxis.toPixels(min, true));\n                pxMax = pick(pxMax, xAxis.toPixels(max, true));\n                // Verify (#1851, #2238)\n                if (!isNumber(pxMin) || Math.abs(pxMin) === Infinity) {\n                    pxMin = 0;\n                    pxMax = navigatorWidth;\n                }\n                // Are we below the minRange? (#2618, #6191)\n                var newMin = xAxis.toValue(pxMin, true), newMax = xAxis.toValue(pxMax, true), currentRange = Math.abs(correctFloat(newMax - newMin));\n                if (currentRange < minRange) {\n                    if (this.grabbedLeft) {\n                        pxMin = xAxis.toPixels(newMax - minRange - pointRange, true);\n                    }\n                    else if (this.grabbedRight) {\n                        pxMax = xAxis.toPixels(newMin + minRange + pointRange, true);\n                    }\n                }\n                else if (defined(maxRange) &&\n                    correctFloat(currentRange - pointRange) > maxRange) {\n                    if (this.grabbedLeft) {\n                        pxMin = xAxis.toPixels(newMax - maxRange - pointRange, true);\n                    }\n                    else if (this.grabbedRight) {\n                        pxMax = xAxis.toPixels(newMin + maxRange + pointRange, true);\n                    }\n                }\n                // Handles are allowed to cross, but never exceed the plot area\n                navigator.zoomedMax = clamp(Math.max(pxMin, pxMax), 0, zoomedMax);\n                navigator.zoomedMin = clamp(navigator.fixedWidth ?\n                    navigator.zoomedMax - navigator.fixedWidth :\n                    Math.min(pxMin, pxMax), 0, zoomedMax);\n                navigator.range = navigator.zoomedMax - navigator.zoomedMin;\n                zoomedMax = Math.round(navigator.zoomedMax);\n                var zoomedMin = Math.round(navigator.zoomedMin);\n                if (navigatorEnabled) {\n                    navigator.navigatorGroup.attr({\n                        visibility: 'inherit'\n                    });\n                    // Place elements\n                    verb = rendered && !navigator.hasDragged ? 'animate' : 'attr';\n                    navigator.drawMasks(zoomedMin, zoomedMax, inverted, verb);\n                    navigator.drawOutline(zoomedMin, zoomedMax, inverted, verb);\n                    if (navigator.navigatorOptions.handles.enabled) {\n                        navigator.drawHandle(zoomedMin, 0, inverted, verb);\n                        navigator.drawHandle(zoomedMax, 1, inverted, verb);\n                    }\n                }\n                if (navigator.scrollbar) {\n                    if (inverted) {\n                        scrollbarTop = navigator.top - scrollButtonSize;\n                        scrollbarLeft = navigator.left - scrollbarHeight +\n                            (navigatorEnabled || !scrollbarXAxis.opposite ? 0 :\n                                // Multiple axes has offsets:\n                                (scrollbarXAxis.titleOffset || 0) +\n                                    // Self margin from the axis.title\n                                    scrollbarXAxis.axisTitleMargin);\n                        scrollbarHeight = navigatorSize + 2 * scrollButtonSize;\n                    }\n                    else {\n                        scrollbarTop = navigator.top + (navigatorEnabled ?\n                            navigator.height :\n                            -scrollbarHeight);\n                        scrollbarLeft = navigator.left - scrollButtonSize;\n                    }\n                    // Reposition scrollbar\n                    navigator.scrollbar.position(scrollbarLeft, scrollbarTop, navigatorWidth, scrollbarHeight);\n                    // Keep scale 0-1\n                    navigator.scrollbar.setRange(\n                    // Use real value, not rounded because range can be very small\n                    // (#1716)\n                    navigator.zoomedMin / (navigatorSize || 1), navigator.zoomedMax / (navigatorSize || 1));\n                }\n                navigator.rendered = true;\n                fireEvent(this, 'afterRender');\n            };\n            /**\n             * Set up the mouse and touch events for the navigator\n             *\n             * @private\n             * @function Highcharts.Navigator#addMouseEvents\n             */\n            Navigator.prototype.addMouseEvents = function () {\n                var navigator = this, chart = navigator.chart, container = chart.container;\n                var eventsToUnbind = [], mouseMoveHandler, mouseUpHandler;\n                /**\n                 * Create mouse events' handlers.\n                 * Make them as separate functions to enable wrapping them:\n                 */\n                navigator.mouseMoveHandler = mouseMoveHandler = function (e) {\n                    navigator.onMouseMove(e);\n                };\n                navigator.mouseUpHandler = mouseUpHandler = function (e) {\n                    navigator.onMouseUp(e);\n                };\n                // Add shades and handles mousedown events\n                eventsToUnbind = navigator.getPartsEvents('mousedown');\n                eventsToUnbind.push(\n                // Add mouse move and mouseup events. These are bind to doc/div,\n                // because Navigator.grabbedSomething flags are stored in mousedown\n                // events\n                addEvent(chart.renderTo, 'mousemove', mouseMoveHandler), addEvent(container.ownerDocument, 'mouseup', mouseUpHandler), \n                // Touch events\n                addEvent(chart.renderTo, 'touchmove', mouseMoveHandler), addEvent(container.ownerDocument, 'touchend', mouseUpHandler));\n                eventsToUnbind.concat(navigator.getPartsEvents('touchstart'));\n                navigator.eventsToUnbind = eventsToUnbind;\n                // Data events\n                if (navigator.series && navigator.series[0]) {\n                    eventsToUnbind.push(addEvent(navigator.series[0].xAxis, 'foundExtremes', function () {\n                        chart.navigator.modifyNavigatorAxisExtremes();\n                    }));\n                }\n            };\n            /**\n             * Generate events for handles and masks\n             *\n             * @private\n             * @function Highcharts.Navigator#getPartsEvents\n             *\n             * @param {string} eventName\n             *        Event name handler, 'mousedown' or 'touchstart'\n             *\n             * @return {Array<Function>}\n             *         An array of functions to remove navigator functions from the\n             *         events again.\n             */\n            Navigator.prototype.getPartsEvents = function (eventName) {\n                var navigator = this, events = [];\n                ['shades', 'handles'].forEach(function (name) {\n                    navigator[name].forEach(function (navigatorItem, index) {\n                        events.push(addEvent(navigatorItem.element, eventName, function (e) {\n                            navigator[name + 'Mousedown'](e, index);\n                        }));\n                    });\n                });\n                return events;\n            };\n            /**\n             * Mousedown on a shaded mask, either:\n             *\n             * - will be stored for future drag&drop\n             *\n             * - will directly shift to a new range\n             *\n             * @private\n             * @function Highcharts.Navigator#shadesMousedown\n             *\n             * @param {Highcharts.PointerEventObject} e\n             *        Mouse event\n             *\n             * @param {number} index\n             *        Index of a mask in Navigator.shades array\n             */\n            Navigator.prototype.shadesMousedown = function (e, index) {\n                var _a;\n                e = ((_a = this.chart.pointer) === null || _a === void 0 ? void 0 : _a.normalize(e)) || e;\n                var navigator = this, chart = navigator.chart, xAxis = navigator.xAxis, zoomedMin = navigator.zoomedMin, navigatorSize = navigator.size, range = navigator.range;\n                var navigatorPosition = navigator.left, chartX = e.chartX, fixedMax, fixedMin, ext, left;\n                // For inverted chart, swap some options:\n                if (chart.inverted) {\n                    chartX = e.chartY;\n                    navigatorPosition = navigator.top;\n                }\n                if (index === 1) {\n                    // Store information for drag&drop\n                    navigator.grabbedCenter = chartX;\n                    navigator.fixedWidth = range;\n                    navigator.dragOffset = chartX - zoomedMin;\n                }\n                else {\n                    // Shift the range by clicking on shaded areas\n                    left = chartX - navigatorPosition - range / 2;\n                    if (index === 0) {\n                        left = Math.max(0, left);\n                    }\n                    else if (index === 2 && left + range >= navigatorSize) {\n                        left = navigatorSize - range;\n                        if (navigator.reversedExtremes) {\n                            // #7713\n                            left -= range;\n                            fixedMin = navigator.getUnionExtremes().dataMin;\n                        }\n                        else {\n                            // #2293, #3543\n                            fixedMax = navigator.getUnionExtremes().dataMax;\n                        }\n                    }\n                    if (left !== zoomedMin) { // it has actually moved\n                        navigator.fixedWidth = range; // #1370\n                        ext = xAxis.navigatorAxis.toFixedRange(left, left + range, fixedMin, fixedMax);\n                        if (defined(ext.min)) { // #7411\n                            fireEvent(this, 'setRange', {\n                                min: Math.min(ext.min, ext.max),\n                                max: Math.max(ext.min, ext.max),\n                                redraw: true,\n                                eventArguments: {\n                                    trigger: 'navigator'\n                                }\n                            });\n                        }\n                    }\n                }\n            };\n            /**\n             * Mousedown on a handle mask.\n             * Will store necessary information for drag&drop.\n             *\n             * @private\n             * @function Highcharts.Navigator#handlesMousedown\n             * @param {Highcharts.PointerEventObject} e\n             *        Mouse event\n             * @param {number} index\n             *        Index of a handle in Navigator.handles array\n             */\n            Navigator.prototype.handlesMousedown = function (e, index) {\n                var _a;\n                e = ((_a = this.chart.pointer) === null || _a === void 0 ? void 0 : _a.normalize(e)) || e;\n                var navigator = this, chart = navigator.chart, baseXAxis = chart.xAxis[0], \n                // For reversed axes, min and max are changed,\n                // so the other extreme should be stored\n                reverse = navigator.reversedExtremes;\n                if (index === 0) {\n                    // Grab the left handle\n                    navigator.grabbedLeft = true;\n                    navigator.otherHandlePos = navigator.zoomedMax;\n                    navigator.fixedExtreme = reverse ? baseXAxis.min : baseXAxis.max;\n                }\n                else {\n                    // Grab the right handle\n                    navigator.grabbedRight = true;\n                    navigator.otherHandlePos = navigator.zoomedMin;\n                    navigator.fixedExtreme = reverse ? baseXAxis.max : baseXAxis.min;\n                }\n                chart.setFixedRange(void 0);\n            };\n            /**\n             * Mouse move event based on x/y mouse position.\n             *\n             * @private\n             * @function Highcharts.Navigator#onMouseMove\n             *\n             * @param {Highcharts.PointerEventObject} e\n             *        Mouse event\n             */\n            Navigator.prototype.onMouseMove = function (e) {\n                var _a;\n                var navigator = this, chart = navigator.chart, navigatorSize = navigator.navigatorSize, range = navigator.range, dragOffset = navigator.dragOffset, inverted = chart.inverted;\n                var left = navigator.left, chartX;\n                // In iOS, a mousemove event with e.pageX === 0 is fired when holding\n                // the finger down in the center of the scrollbar. This should be\n                // ignored.\n                if (!e.touches || e.touches[0].pageX !== 0) { // #4696\n                    e = ((_a = chart.pointer) === null || _a === void 0 ? void 0 : _a.normalize(e)) || e;\n                    chartX = e.chartX;\n                    // Swap some options for inverted chart\n                    if (inverted) {\n                        left = navigator.top;\n                        chartX = e.chartY;\n                    }\n                    // Drag left handle or top handle\n                    if (navigator.grabbedLeft) {\n                        navigator.hasDragged = true;\n                        navigator.render(0, 0, chartX - left, navigator.otherHandlePos);\n                        // Drag right handle or bottom handle\n                    }\n                    else if (navigator.grabbedRight) {\n                        navigator.hasDragged = true;\n                        navigator.render(0, 0, navigator.otherHandlePos, chartX - left);\n                        // Drag scrollbar or open area in navigator\n                    }\n                    else if (navigator.grabbedCenter) {\n                        navigator.hasDragged = true;\n                        if (chartX < dragOffset) { // outside left\n                            chartX = dragOffset;\n                            // outside right\n                        }\n                        else if (chartX >\n                            navigatorSize + dragOffset - range) {\n                            chartX = navigatorSize + dragOffset - range;\n                        }\n                        navigator.render(0, 0, chartX - dragOffset, chartX - dragOffset + range);\n                    }\n                    if (navigator.hasDragged &&\n                        navigator.scrollbar &&\n                        pick(navigator.scrollbar.options.liveRedraw, \n                        // By default, don't run live redraw on touch\n                        // devices or if the chart is in boost.\n                        !isTouchDevice &&\n                            !this.chart.boosted)) {\n                        e.DOMType = e.type;\n                        setTimeout(function () {\n                            navigator.onMouseUp(e);\n                        }, 0);\n                    }\n                }\n            };\n            /**\n             * Mouse up event based on x/y mouse position.\n             *\n             * @private\n             * @function Highcharts.Navigator#onMouseUp\n             * @param {Highcharts.PointerEventObject} e\n             *        Mouse event\n             */\n            Navigator.prototype.onMouseUp = function (e) {\n                var navigator = this, chart = navigator.chart, xAxis = navigator.xAxis, scrollbar = navigator.scrollbar, DOMEvent = e.DOMEvent || e, inverted = chart.inverted, verb = navigator.rendered && !navigator.hasDragged ?\n                    'animate' : 'attr';\n                var zoomedMax, zoomedMin, unionExtremes, fixedMin, fixedMax, ext;\n                if (\n                // MouseUp is called for both, navigator and scrollbar (that order),\n                // which causes calling afterSetExtremes twice. Prevent first call\n                // by checking if scrollbar is going to set new extremes (#6334)\n                (navigator.hasDragged && (!scrollbar || !scrollbar.hasDragged)) ||\n                    e.trigger === 'scrollbar') {\n                    unionExtremes = navigator.getUnionExtremes();\n                    // When dragging one handle, make sure the other one doesn't change\n                    if (navigator.zoomedMin === navigator.otherHandlePos) {\n                        fixedMin = navigator.fixedExtreme;\n                    }\n                    else if (navigator.zoomedMax === navigator.otherHandlePos) {\n                        fixedMax = navigator.fixedExtreme;\n                    }\n                    // Snap to right edge (#4076)\n                    if (navigator.zoomedMax === navigator.size) {\n                        fixedMax = navigator.reversedExtremes ?\n                            unionExtremes.dataMin :\n                            unionExtremes.dataMax;\n                    }\n                    // Snap to left edge (#7576)\n                    if (navigator.zoomedMin === 0) {\n                        fixedMin = navigator.reversedExtremes ?\n                            unionExtremes.dataMax :\n                            unionExtremes.dataMin;\n                    }\n                    ext = xAxis.navigatorAxis.toFixedRange(navigator.zoomedMin, navigator.zoomedMax, fixedMin, fixedMax);\n                    if (defined(ext.min)) {\n                        fireEvent(this, 'setRange', {\n                            min: Math.min(ext.min, ext.max),\n                            max: Math.max(ext.min, ext.max),\n                            redraw: true,\n                            animation: navigator.hasDragged ? false : null,\n                            eventArguments: {\n                                trigger: 'navigator',\n                                triggerOp: 'navigator-drag',\n                                DOMEvent: DOMEvent // #1838\n                            }\n                        });\n                    }\n                }\n                if (e.DOMType !== 'mousemove' &&\n                    e.DOMType !== 'touchmove') {\n                    navigator.grabbedLeft = navigator.grabbedRight =\n                        navigator.grabbedCenter = navigator.fixedWidth =\n                            navigator.fixedExtreme = navigator.otherHandlePos =\n                                navigator.hasDragged = navigator.dragOffset = null;\n                }\n                // Update position of navigator shades, outline and handles (#12573)\n                if (navigator.navigatorEnabled &&\n                    isNumber(navigator.zoomedMin) &&\n                    isNumber(navigator.zoomedMax)) {\n                    zoomedMin = Math.round(navigator.zoomedMin);\n                    zoomedMax = Math.round(navigator.zoomedMax);\n                    if (navigator.shades) {\n                        navigator.drawMasks(zoomedMin, zoomedMax, inverted, verb);\n                    }\n                    if (navigator.outline) {\n                        navigator.drawOutline(zoomedMin, zoomedMax, inverted, verb);\n                    }\n                    if (navigator.navigatorOptions.handles.enabled &&\n                        Object.keys(navigator.handles).length ===\n                            navigator.handles.length) {\n                        navigator.drawHandle(zoomedMin, 0, inverted, verb);\n                        navigator.drawHandle(zoomedMax, 1, inverted, verb);\n                    }\n                }\n            };\n            /**\n             * Removes the event handlers attached previously with addEvents.\n             *\n             * @private\n             * @function Highcharts.Navigator#removeEvents\n             */\n            Navigator.prototype.removeEvents = function () {\n                if (this.eventsToUnbind) {\n                    this.eventsToUnbind.forEach(function (unbind) {\n                        unbind();\n                    });\n                    this.eventsToUnbind = void 0;\n                }\n                this.removeBaseSeriesEvents();\n            };\n            /**\n             * Remove data events.\n             *\n             * @private\n             * @function Highcharts.Navigator#removeBaseSeriesEvents\n             */\n            Navigator.prototype.removeBaseSeriesEvents = function () {\n                var baseSeries = this.baseSeries || [];\n                if (this.navigatorEnabled && baseSeries[0]) {\n                    if (this.navigatorOptions.adaptToUpdatedData !== false) {\n                        baseSeries.forEach(function (series) {\n                            removeEvent(series, 'updatedData', this.updatedDataHandler);\n                        }, this);\n                    }\n                    // We only listen for extremes-events on the first baseSeries\n                    if (baseSeries[0].xAxis) {\n                        removeEvent(baseSeries[0].xAxis, 'foundExtremes', this.modifyBaseAxisExtremes);\n                    }\n                }\n            };\n            /**\n             * Initialize the Navigator object\n             *\n             * @private\n             * @function Highcharts.Navigator#init\n             */\n            Navigator.prototype.init = function (chart) {\n                var chartOptions = chart.options, navigatorOptions = chartOptions.navigator || {}, navigatorEnabled = navigatorOptions.enabled, scrollbarOptions = chartOptions.scrollbar || {}, scrollbarEnabled = scrollbarOptions.enabled, height = navigatorEnabled && navigatorOptions.height || 0, scrollbarHeight = scrollbarEnabled && scrollbarOptions.height || 0, scrollButtonSize = scrollbarOptions.buttonsEnabled && scrollbarHeight || 0;\n                this.handles = [];\n                this.shades = [];\n                this.chart = chart;\n                this.setBaseSeries();\n                this.height = height;\n                this.scrollbarHeight = scrollbarHeight;\n                this.scrollButtonSize = scrollButtonSize;\n                this.scrollbarEnabled = scrollbarEnabled;\n                this.navigatorEnabled = navigatorEnabled;\n                this.navigatorOptions = navigatorOptions;\n                this.scrollbarOptions = scrollbarOptions;\n                this.opposite = pick(navigatorOptions.opposite, Boolean(!navigatorEnabled && chart.inverted)); // #6262\n                var navigator = this, baseSeries = navigator.baseSeries, xAxisIndex = chart.xAxis.length, yAxisIndex = chart.yAxis.length, baseXaxis = baseSeries && baseSeries[0] && baseSeries[0].xAxis ||\n                    chart.xAxis[0] || { options: {} };\n                chart.isDirtyBox = true;\n                if (navigator.navigatorEnabled) {\n                    // an x axis is required for scrollbar also\n                    navigator.xAxis = new Axis(chart, merge({\n                        // inherit base xAxis' break, ordinal options and overscroll\n                        breaks: baseXaxis.options.breaks,\n                        ordinal: baseXaxis.options.ordinal,\n                        overscroll: baseXaxis.options.overscroll\n                    }, navigatorOptions.xAxis, {\n                        id: 'navigator-x-axis',\n                        yAxis: 'navigator-y-axis',\n                        type: 'datetime',\n                        index: xAxisIndex,\n                        isInternal: true,\n                        offset: 0,\n                        keepOrdinalPadding: true,\n                        startOnTick: false,\n                        endOnTick: false,\n                        minPadding: 0,\n                        maxPadding: 0,\n                        zoomEnabled: false\n                    }, chart.inverted ? {\n                        offsets: [scrollButtonSize, 0, -scrollButtonSize, 0],\n                        width: height\n                    } : {\n                        offsets: [0, -scrollButtonSize, 0, scrollButtonSize],\n                        height: height\n                    }), 'xAxis');\n                    navigator.yAxis = new Axis(chart, merge(navigatorOptions.yAxis, {\n                        id: 'navigator-y-axis',\n                        alignTicks: false,\n                        offset: 0,\n                        index: yAxisIndex,\n                        isInternal: true,\n                        reversed: pick((navigatorOptions.yAxis &&\n                            navigatorOptions.yAxis.reversed), (chart.yAxis[0] && chart.yAxis[0].reversed), false),\n                        zoomEnabled: false\n                    }, chart.inverted ? {\n                        width: height\n                    } : {\n                        height: height\n                    }), 'yAxis');\n                    // If we have a base series, initialize the navigator series\n                    if (baseSeries || navigatorOptions.series.data) {\n                        navigator.updateNavigatorSeries(false);\n                        // If not, set up an event to listen for added series\n                    }\n                    else if (chart.series.length === 0) {\n                        navigator.unbindRedraw = addEvent(chart, 'beforeRedraw', function () {\n                            // We've got one, now add it as base\n                            if (chart.series.length > 0 && !navigator.series) {\n                                navigator.setBaseSeries();\n                                navigator.unbindRedraw(); // reset\n                            }\n                        });\n                    }\n                    navigator.reversedExtremes = (chart.inverted && !navigator.xAxis.reversed) || (!chart.inverted && navigator.xAxis.reversed);\n                    // Render items, so we can bind events to them:\n                    navigator.renderElements();\n                    // Add mouse events\n                    navigator.addMouseEvents();\n                    // in case of scrollbar only, fake an x axis to get translation\n                }\n                else {\n                    navigator.xAxis = {\n                        chart: chart,\n                        navigatorAxis: {\n                            fake: true\n                        },\n                        translate: function (value, reverse) {\n                            var axis = chart.xAxis[0], ext = axis.getExtremes(), scrollTrackWidth = axis.len - 2 * scrollButtonSize, min = numExt('min', axis.options.min, ext.dataMin), valueRange = numExt('max', axis.options.max, ext.dataMax) - min;\n                            return reverse ?\n                                // from pixel to value\n                                (value * valueRange / scrollTrackWidth) + min :\n                                // from value to pixel\n                                scrollTrackWidth * (value - min) / valueRange;\n                        },\n                        toPixels: function (value) {\n                            return this.translate(value);\n                        },\n                        toValue: function (value) {\n                            return this.translate(value, true);\n                        }\n                    };\n                    navigator.xAxis.navigatorAxis.axis = navigator.xAxis;\n                    navigator.xAxis.navigatorAxis.toFixedRange = (NavigatorAxisAdditions.prototype.toFixedRange.bind(navigator.xAxis.navigatorAxis));\n                }\n                // Initialize the scrollbar\n                if (chart.options.scrollbar.enabled) {\n                    var options = merge(chart.options.scrollbar, { vertical: chart.inverted });\n                    if (!isNumber(options.margin) && navigator.navigatorEnabled) {\n                        options.margin = chart.inverted ? -3 : 3;\n                    }\n                    chart.scrollbar = navigator.scrollbar = new Scrollbar(chart.renderer, options, chart);\n                    addEvent(navigator.scrollbar, 'changed', function (e) {\n                        var range = navigator.size, to = range * this.to, from = range * this.from;\n                        navigator.hasDragged = navigator.scrollbar.hasDragged;\n                        navigator.render(0, 0, from, to);\n                        if (this.shouldUpdateExtremes(e.DOMType)) {\n                            setTimeout(function () {\n                                navigator.onMouseUp(e);\n                            });\n                        }\n                    });\n                }\n                // Add data events\n                navigator.addBaseSeriesEvents();\n                // Add redraw events\n                navigator.addChartEvents();\n            };\n            /**\n             * Get the union data extremes of the chart - the outer data extremes of the\n             * base X axis and the navigator axis.\n             *\n             * @private\n             * @function Highcharts.Navigator#getUnionExtremes\n             */\n            Navigator.prototype.getUnionExtremes = function (returnFalseOnNoBaseSeries) {\n                var baseAxis = this.chart.xAxis[0], navAxis = this.xAxis, navAxisOptions = navAxis.options, baseAxisOptions = baseAxis.options;\n                var ret;\n                if (!returnFalseOnNoBaseSeries || baseAxis.dataMin !== null) {\n                    ret = {\n                        dataMin: pick(// #4053\n                        navAxisOptions && navAxisOptions.min, numExt('min', baseAxisOptions.min, baseAxis.dataMin, navAxis.dataMin, navAxis.min)),\n                        dataMax: pick(navAxisOptions && navAxisOptions.max, numExt('max', baseAxisOptions.max, baseAxis.dataMax, navAxis.dataMax, navAxis.max))\n                    };\n                }\n                return ret;\n            };\n            /**\n             * Set the base series and update the navigator series from this. With a bit\n             * of modification we should be able to make this an API method to be called\n             * from the outside\n             *\n             * @private\n             * @function Highcharts.Navigator#setBaseSeries\n             * @param {Highcharts.SeriesOptionsType} [baseSeriesOptions]\n             *        Additional series options for a navigator\n             * @param {boolean} [redraw]\n             *        Whether to redraw after update.\n             */\n            Navigator.prototype.setBaseSeries = function (baseSeriesOptions, redraw) {\n                var chart = this.chart, baseSeries = this.baseSeries = [];\n                baseSeriesOptions = (baseSeriesOptions ||\n                    chart.options && chart.options.navigator.baseSeries ||\n                    (chart.series.length ?\n                        // Find the first non-navigator series (#8430)\n                        find(chart.series, function (s) { return (!s.options.isInternal); }).index :\n                        0));\n                // Iterate through series and add the ones that should be shown in\n                // navigator.\n                (chart.series || []).forEach(function (series, i) {\n                    if (\n                    // Don't include existing nav series\n                    !series.options.isInternal &&\n                        (series.options.showInNavigator ||\n                            (i === baseSeriesOptions ||\n                                series.options.id === baseSeriesOptions) &&\n                                series.options.showInNavigator !== false)) {\n                        baseSeries.push(series);\n                    }\n                });\n                // When run after render, this.xAxis already exists\n                if (this.xAxis && !this.xAxis.navigatorAxis.fake) {\n                    this.updateNavigatorSeries(true, redraw);\n                }\n            };\n            /**\n             * Update series in the navigator from baseSeries, adding new if does not\n             * exist.\n             *\n             * @private\n             * @function Highcharts.Navigator.updateNavigatorSeries\n             */\n            Navigator.prototype.updateNavigatorSeries = function (addEvents, redraw) {\n                var navigator = this, chart = navigator.chart, baseSeries = navigator.baseSeries, navSeriesMixin = {\n                    enableMouseTracking: false,\n                    index: null,\n                    linkedTo: null,\n                    group: 'nav',\n                    padXAxis: false,\n                    xAxis: 'navigator-x-axis',\n                    yAxis: 'navigator-y-axis',\n                    showInLegend: false,\n                    stacking: void 0,\n                    isInternal: true,\n                    states: {\n                        inactive: {\n                            opacity: 1\n                        }\n                    }\n                }, \n                // Remove navigator series that are no longer in the baseSeries\n                navigatorSeries = navigator.series =\n                    (navigator.series || []).filter(function (navSeries) {\n                        var base = navSeries.baseSeries;\n                        if (baseSeries.indexOf(base) < 0) { // Not in array\n                            // If there is still a base series connected to this\n                            // series, remove event handler and reference.\n                            if (base) {\n                                removeEvent(base, 'updatedData', navigator.updatedDataHandler);\n                                delete base.navigatorSeries;\n                            }\n                            // Kill the nav series. It may already have been\n                            // destroyed (#8715).\n                            if (navSeries.chart) {\n                                navSeries.destroy();\n                            }\n                            return false;\n                        }\n                        return true;\n                    });\n                var baseOptions, mergedNavSeriesOptions, chartNavigatorSeriesOptions = navigator.navigatorOptions.series, baseNavigatorOptions;\n                // Go through each base series and merge the options to create new\n                // series\n                if (baseSeries && baseSeries.length) {\n                    baseSeries.forEach(function (base) {\n                        var linkedNavSeries = base.navigatorSeries, userNavOptions = extend(\n                        // Grab color and visibility from base as default\n                        {\n                            color: base.color,\n                            visible: base.visible\n                        }, !isArray(chartNavigatorSeriesOptions) ?\n                            chartNavigatorSeriesOptions :\n                            defaultOptions.navigator.series);\n                        // Don't update if the series exists in nav and we have disabled\n                        // adaptToUpdatedData.\n                        if (linkedNavSeries &&\n                            navigator.navigatorOptions.adaptToUpdatedData === false) {\n                            return;\n                        }\n                        navSeriesMixin.name = 'Navigator ' + baseSeries.length;\n                        baseOptions = base.options || {};\n                        baseNavigatorOptions = baseOptions.navigatorOptions || {};\n                        // The dataLabels options are not merged correctly\n                        // if the settings are an array, #13847.\n                        userNavOptions.dataLabels = splat(userNavOptions.dataLabels);\n                        mergedNavSeriesOptions = merge(baseOptions, navSeriesMixin, userNavOptions, baseNavigatorOptions);\n                        // Once nav series type is resolved, pick correct pointRange\n                        mergedNavSeriesOptions.pointRange = pick(\n                        // Stricte set pointRange in options\n                        userNavOptions.pointRange, baseNavigatorOptions.pointRange, \n                        // Fallback to default values, e.g. `null` for column\n                        defaultOptions.plotOptions[mergedNavSeriesOptions.type || 'line'].pointRange);\n                        // Merge data separately. Do a slice to avoid mutating the\n                        // navigator options from base series (#4923).\n                        var navigatorSeriesData = baseNavigatorOptions.data || userNavOptions.data;\n                        navigator.hasNavigatorData =\n                            navigator.hasNavigatorData || !!navigatorSeriesData;\n                        mergedNavSeriesOptions.data =\n                            navigatorSeriesData ||\n                                baseOptions.data && baseOptions.data.slice(0);\n                        // Update or add the series\n                        if (linkedNavSeries && linkedNavSeries.options) {\n                            linkedNavSeries.update(mergedNavSeriesOptions, redraw);\n                        }\n                        else {\n                            base.navigatorSeries = chart.initSeries(mergedNavSeriesOptions);\n                            // Set data on initial run with dataSorting enabled (#20318)\n                            chart.setSortedData();\n                            base.navigatorSeries.baseSeries = base; // Store ref\n                            navigatorSeries.push(base.navigatorSeries);\n                        }\n                    });\n                }\n                // If user has defined data (and no base series) or explicitly defined\n                // navigator.series as an array, we create these series on top of any\n                // base series.\n                if (chartNavigatorSeriesOptions.data &&\n                    !(baseSeries && baseSeries.length) ||\n                    isArray(chartNavigatorSeriesOptions)) {\n                    navigator.hasNavigatorData = false;\n                    // Allow navigator.series to be an array\n                    chartNavigatorSeriesOptions =\n                        splat(chartNavigatorSeriesOptions);\n                    chartNavigatorSeriesOptions.forEach(function (userSeriesOptions, i) {\n                        navSeriesMixin.name =\n                            'Navigator ' + (navigatorSeries.length + 1);\n                        mergedNavSeriesOptions = merge(defaultOptions.navigator.series, {\n                            // Since we don't have a base series to pull color from,\n                            // try to fake it by using color from series with same\n                            // index. Otherwise pull from the colors array. We need\n                            // an explicit color as otherwise updates will increment\n                            // color counter and we'll get a new color for each\n                            // update of the nav series.\n                            color: chart.series[i] &&\n                                !chart.series[i].options.isInternal &&\n                                chart.series[i].color ||\n                                chart.options.colors[i] ||\n                                chart.options.colors[0]\n                        }, navSeriesMixin, userSeriesOptions);\n                        mergedNavSeriesOptions.data = userSeriesOptions.data;\n                        if (mergedNavSeriesOptions.data) {\n                            navigator.hasNavigatorData = true;\n                            navigatorSeries.push(chart.initSeries(mergedNavSeriesOptions));\n                        }\n                    });\n                }\n                if (addEvents) {\n                    this.addBaseSeriesEvents();\n                }\n            };\n            /**\n             * Add data events.\n             * For example when main series is updated we need to recalculate extremes\n             *\n             * @private\n             * @function Highcharts.Navigator#addBaseSeriesEvent\n             */\n            Navigator.prototype.addBaseSeriesEvents = function () {\n                var _this = this;\n                var navigator = this, baseSeries = navigator.baseSeries || [];\n                // Bind modified extremes event to first base's xAxis only.\n                // In event of > 1 base-xAxes, the navigator will ignore those.\n                // Adding this multiple times to the same axis is no problem, as\n                // duplicates should be discarded by the browser.\n                if (baseSeries[0] && baseSeries[0].xAxis) {\n                    baseSeries[0].eventsToUnbind.push(addEvent(baseSeries[0].xAxis, 'foundExtremes', this.modifyBaseAxisExtremes));\n                }\n                baseSeries.forEach(function (base) {\n                    // Link base series show/hide to navigator series visibility\n                    base.eventsToUnbind.push(addEvent(base, 'show', function () {\n                        if (this.navigatorSeries) {\n                            this.navigatorSeries.setVisible(true, false);\n                        }\n                    }));\n                    base.eventsToUnbind.push(addEvent(base, 'hide', function () {\n                        if (this.navigatorSeries) {\n                            this.navigatorSeries.setVisible(false, false);\n                        }\n                    }));\n                    // Respond to updated data in the base series, unless explicitly\n                    // not adapting to data changes.\n                    if (_this.navigatorOptions.adaptToUpdatedData !== false) {\n                        if (base.xAxis) {\n                            base.eventsToUnbind.push(addEvent(base, 'updatedData', _this.updatedDataHandler));\n                        }\n                    }\n                    // Handle series removal\n                    base.eventsToUnbind.push(addEvent(base, 'remove', function () {\n                        if (this.navigatorSeries) {\n                            erase(navigator.series, this.navigatorSeries);\n                            if (defined(this.navigatorSeries.options)) {\n                                this.navigatorSeries.remove(false);\n                            }\n                            delete this.navigatorSeries;\n                        }\n                    }));\n                });\n            };\n            /**\n             * Get minimum from all base series connected to the navigator\n             * @private\n             * @param {number} currentSeriesMin\n             *        Minium from the current series\n             * @return {number}\n             *         Minimum from all series\n             */\n            Navigator.prototype.getBaseSeriesMin = function (currentSeriesMin) {\n                return this.baseSeries.reduce(function (min, series) {\n                    // (#10193)\n                    return Math.min(min, series.xData && series.xData.length ?\n                        series.xData[0] : min);\n                }, currentSeriesMin);\n            };\n            /**\n             * Set the navigator x axis extremes to reflect the total. The navigator\n             * extremes should always be the extremes of the union of all series in the\n             * chart as well as the navigator series.\n             *\n             * @private\n             * @function Highcharts.Navigator#modifyNavigatorAxisExtremes\n             */\n            Navigator.prototype.modifyNavigatorAxisExtremes = function () {\n                var xAxis = this.xAxis;\n                if (typeof xAxis.getExtremes !== 'undefined') {\n                    var unionExtremes = this.getUnionExtremes(true);\n                    if (unionExtremes &&\n                        (unionExtremes.dataMin !== xAxis.min ||\n                            unionExtremes.dataMax !== xAxis.max)) {\n                        xAxis.min = unionExtremes.dataMin;\n                        xAxis.max = unionExtremes.dataMax;\n                    }\n                }\n            };\n            /**\n             * Hook to modify the base axis extremes with information from the Navigator\n             *\n             * @private\n             * @function Highcharts.Navigator#modifyBaseAxisExtremes\n             */\n            Navigator.prototype.modifyBaseAxisExtremes = function () {\n                var _a;\n                var baseXAxis = this, navigator = baseXAxis.chart.navigator, baseExtremes = baseXAxis.getExtremes(), baseMin = baseExtremes.min, baseMax = baseExtremes.max, baseDataMin = baseExtremes.dataMin, baseDataMax = baseExtremes.dataMax, range = baseMax - baseMin, stickToMin = navigator.stickToMin, stickToMax = navigator.stickToMax, overscroll = pick((_a = baseXAxis.ordinal) === null || _a === void 0 ? void 0 : _a.convertOverscroll(baseXAxis.options.overscroll), 0), navigatorSeries = navigator.series && navigator.series[0], hasSetExtremes = !!baseXAxis.setExtremes, \n                // When the extremes have been set by range selector button, don't\n                // stick to min or max. The range selector buttons will handle the\n                // extremes. (#5489)\n                unmutable = baseXAxis.eventArgs &&\n                    baseXAxis.eventArgs.trigger === 'rangeSelectorButton';\n                var newMax, newMin;\n                if (!unmutable) {\n                    // If the zoomed range is already at the min, move it to the right\n                    // as new data comes in\n                    if (stickToMin) {\n                        newMin = baseDataMin;\n                        newMax = newMin + range;\n                    }\n                    // If the zoomed range is already at the max, move it to the right\n                    // as new data comes in\n                    if (stickToMax) {\n                        newMax = baseDataMax + overscroll;\n                        // If stickToMin is true, the new min value is set above\n                        if (!stickToMin) {\n                            newMin = Math.max(baseDataMin, // don't go below data extremes (#13184)\n                            newMax - range, navigator.getBaseSeriesMin(navigatorSeries && navigatorSeries.xData ?\n                                navigatorSeries.xData[0] :\n                                -Number.MAX_VALUE));\n                        }\n                    }\n                    // Update the extremes\n                    if (hasSetExtremes && (stickToMin || stickToMax)) {\n                        if (isNumber(newMin)) {\n                            baseXAxis.min = baseXAxis.userMin = newMin;\n                            baseXAxis.max = baseXAxis.userMax = newMax;\n                        }\n                    }\n                }\n                // Reset\n                navigator.stickToMin =\n                    navigator.stickToMax = null;\n            };\n            /**\n             * Handler for updated data on the base series. When data is modified, the\n             * navigator series must reflect it. This is called from the Chart.redraw\n             * function before axis and series extremes are computed.\n             *\n             * @private\n             * @function Highcharts.Navigator#updateDataHandler\n             */\n            Navigator.prototype.updatedDataHandler = function () {\n                var navigator = this.chart.navigator, baseSeries = this, navigatorSeries = this.navigatorSeries, shouldStickToMax = navigator.reversedExtremes ?\n                    Math.round(navigator.zoomedMin) === 0 :\n                    Math.round(navigator.zoomedMax) >= Math.round(navigator.size);\n                // If the scrollbar is scrolled all the way to the right, keep right as\n                // new data comes in, unless user set navigator.stickToMax to false.\n                navigator.stickToMax = pick(this.chart.options.navigator &&\n                    this.chart.options.navigator.stickToMax, shouldStickToMax);\n                navigator.stickToMin = navigator.shouldStickToMin(baseSeries, navigator);\n                // Set the navigator series data to the new data of the base series\n                if (navigatorSeries && !navigator.hasNavigatorData) {\n                    navigatorSeries.options.pointStart = baseSeries.xData[0];\n                    navigatorSeries.setData(baseSeries.options.data, false, null, false); // #5414\n                }\n            };\n            /**\n             * Detect if the zoomed area should stick to the minimum, #14742.\n             *\n             * @private\n             * @function Highcharts.Navigator#shouldStickToMin\n             */\n            Navigator.prototype.shouldStickToMin = function (baseSeries, navigator) {\n                var xDataMin = navigator.getBaseSeriesMin(baseSeries.xData[0]), xAxis = baseSeries.xAxis, max = xAxis.max, min = xAxis.min, range = xAxis.options.range;\n                var stickToMin = true;\n                if (isNumber(max) && isNumber(min)) {\n                    // If range declared, stick to the minimum only if the range\n                    // is smaller than the data set range.\n                    if (range && max - xDataMin > 0) {\n                        stickToMin = max - xDataMin < range;\n                    }\n                    else {\n                        // If the current axis minimum falls outside the new\n                        // updated dataset, we must adjust.\n                        stickToMin = min <= xDataMin;\n                    }\n                }\n                else {\n                    stickToMin = false; // #15864\n                }\n                return stickToMin;\n            };\n            /**\n             * Add chart events, like redrawing navigator, when chart requires that.\n             *\n             * @private\n             * @function Highcharts.Navigator#addChartEvents\n             */\n            Navigator.prototype.addChartEvents = function () {\n                if (!this.eventsToUnbind) {\n                    this.eventsToUnbind = [];\n                }\n                this.eventsToUnbind.push(\n                // Move the scrollbar after redraw, like after data updata even if\n                // axes don't redraw\n                addEvent(this.chart, 'redraw', function () {\n                    var navigator = this.navigator, xAxis = navigator && (navigator.baseSeries &&\n                        navigator.baseSeries[0] &&\n                        navigator.baseSeries[0].xAxis ||\n                        this.xAxis[0]); // #5709, #13114\n                    if (xAxis) {\n                        navigator.render(xAxis.min, xAxis.max);\n                    }\n                }), \n                // Make room for the navigator, can be placed around the chart:\n                addEvent(this.chart, 'getMargins', function () {\n                    var chart = this, navigator = chart.navigator, marginName = navigator.opposite ?\n                        'plotTop' : 'marginBottom';\n                    if (chart.inverted) {\n                        marginName = navigator.opposite ?\n                            'marginRight' : 'plotLeft';\n                    }\n                    chart[marginName] =\n                        (chart[marginName] || 0) + (navigator.navigatorEnabled || !chart.inverted ?\n                            navigator.height + navigator.scrollbarHeight :\n                            0) + navigator.navigatorOptions.margin;\n                }), addEvent(Navigator, 'setRange', function (e) {\n                    this.chart.xAxis[0].setExtremes(e.min, e.max, e.redraw, e.animation, e.eventArguments);\n                }));\n            };\n            /**\n             * Destroys allocated elements.\n             *\n             * @private\n             * @function Highcharts.Navigator#destroy\n             */\n            Navigator.prototype.destroy = function () {\n                var _this = this;\n                // Disconnect events added in addEvents\n                this.removeEvents();\n                if (this.xAxis) {\n                    erase(this.chart.xAxis, this.xAxis);\n                    erase(this.chart.axes, this.xAxis);\n                }\n                if (this.yAxis) {\n                    erase(this.chart.yAxis, this.yAxis);\n                    erase(this.chart.axes, this.yAxis);\n                }\n                // Destroy series\n                (this.series || []).forEach(function (s) {\n                    if (s.destroy) {\n                        s.destroy();\n                    }\n                });\n                // Destroy properties\n                [\n                    'series', 'xAxis', 'yAxis', 'shades', 'outline', 'scrollbarTrack',\n                    'scrollbarRifles', 'scrollbarGroup', 'scrollbar', 'navigatorGroup',\n                    'rendered'\n                ].forEach(function (prop) {\n                    if (_this[prop] && _this[prop].destroy) {\n                        _this[prop].destroy();\n                    }\n                    _this[prop] = null;\n                });\n                // Destroy elements in collection\n                [this.handles].forEach(function (coll) {\n                    destroyObjectProperties(coll);\n                });\n            };\n            return Navigator;\n        }());\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return Navigator;\n    });\n    _registerModule(_modules, 'Core/Axis/OrdinalAxis.js', [_modules['Core/Axis/Axis.js'], _modules['Core/Globals.js'], _modules['Core/Series/Series.js'], _modules['Core/Utilities.js']], function (Axis, H, Series, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var addEvent = U.addEvent, correctFloat = U.correctFloat, css = U.css, defined = U.defined, error = U.error, isNumber = U.isNumber, pick = U.pick, timeUnits = U.timeUnits, isString = U.isString;\n        /* *\n         *\n         *  Composition\n         *\n         * */\n        /**\n         * Extends the axis with ordinal support.\n         * @private\n         */\n        var OrdinalAxis;\n        (function (OrdinalAxis) {\n            /* *\n             *\n             *  Declarations\n             *\n             * */\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Extends the axis with ordinal support.\n             *\n             * @private\n             *\n             * @param AxisClass\n             * Axis class to extend.\n             *\n             * @param ChartClass\n             * Chart class to use.\n             *\n             * @param SeriesClass\n             * Series class to use.\n             */\n            function compose(AxisClass, SeriesClass, ChartClass) {\n                var axisProto = AxisClass.prototype;\n                if (!axisProto.ordinal2lin) {\n                    axisProto.getTimeTicks = getTimeTicks;\n                    axisProto.index2val = index2val;\n                    axisProto.lin2val = lin2val;\n                    axisProto.val2lin = val2lin;\n                    // Record this to prevent overwriting by broken-axis module (#5979)\n                    axisProto.ordinal2lin = axisProto.val2lin;\n                    addEvent(AxisClass, 'afterInit', onAxisAfterInit);\n                    addEvent(AxisClass, 'foundExtremes', onAxisFoundExtremes);\n                    addEvent(AxisClass, 'afterSetScale', onAxisAfterSetScale);\n                    addEvent(AxisClass, 'initialAxisTranslation', onAxisInitialAxisTranslation);\n                    addEvent(ChartClass, 'pan', onChartPan);\n                    addEvent(SeriesClass, 'updatedData', onSeriesUpdatedData);\n                }\n                return AxisClass;\n            }\n            OrdinalAxis.compose = compose;\n            /**\n             * In an ordinal axis, there might be areas with dense concentrations of\n             * points, then large gaps between some. Creating equally distributed\n             * ticks over this entire range may lead to a huge number of ticks that\n             * will later be removed. So instead, break the positions up in\n             * segments, find the tick positions for each segment then concatenize\n             * them. This method is used from both data grouping logic and X axis\n             * tick position logic.\n             * @private\n             */\n            function getTimeTicks(normalizedInterval, min, max, startOfWeek, positions, closestDistance, findHigherRanks) {\n                if (positions === void 0) { positions = []; }\n                if (closestDistance === void 0) { closestDistance = 0; }\n                var higherRanks = {}, tickPixelIntervalOption = this.options.tickPixelInterval, time = this.chart.time, \n                // Record all the start positions of a segment, to use when\n                // deciding what's a gap in the data.\n                segmentStarts = [];\n                var end, segmentPositions, hasCrossedHigherRank, info, outsideMax, start = 0, groupPositions = [], lastGroupPosition = -Number.MAX_VALUE;\n                // The positions are not always defined, for example for ordinal\n                // positions when data has regular interval (#1557, #2090)\n                if ((!this.options.ordinal && !this.options.breaks) ||\n                    !positions ||\n                    positions.length < 3 ||\n                    typeof min === 'undefined') {\n                    return time.getTimeTicks.apply(time, arguments);\n                }\n                // Analyze the positions array to split it into segments on gaps\n                // larger than 5 times the closest distance. The closest distance is\n                // already found at this point, so we reuse that instead of\n                // computing it again.\n                var posLength = positions.length;\n                for (end = 0; end < posLength; end++) {\n                    outsideMax = end && positions[end - 1] > max;\n                    if (positions[end] < min) { // Set the last position before min\n                        start = end;\n                    }\n                    if (end === posLength - 1 ||\n                        positions[end + 1] - positions[end] > closestDistance * 5 ||\n                        outsideMax) {\n                        // For each segment, calculate the tick positions from the\n                        // getTimeTicks utility function. The interval will be the\n                        // same regardless of how long the segment is.\n                        if (positions[end] > lastGroupPosition) { // #1475\n                            segmentPositions = time.getTimeTicks(normalizedInterval, positions[start], positions[end], startOfWeek);\n                            // Prevent duplicate groups, for example for multiple\n                            // segments within one larger time frame (#1475)\n                            while (segmentPositions.length &&\n                                segmentPositions[0] <= lastGroupPosition) {\n                                segmentPositions.shift();\n                            }\n                            if (segmentPositions.length) {\n                                lastGroupPosition =\n                                    segmentPositions[segmentPositions.length - 1];\n                            }\n                            segmentStarts.push(groupPositions.length);\n                            groupPositions = groupPositions.concat(segmentPositions);\n                        }\n                        // Set start of next segment\n                        start = end + 1;\n                    }\n                    if (outsideMax) {\n                        break;\n                    }\n                }\n                // Get the grouping info from the last of the segments. The info is\n                // the same for all segments.\n                if (segmentPositions) {\n                    info = segmentPositions.info;\n                    // Optionally identify ticks with higher rank, for example\n                    // when the ticks have crossed midnight.\n                    if (findHigherRanks && info.unitRange <= timeUnits.hour) {\n                        end = groupPositions.length - 1;\n                        // Compare points two by two\n                        for (start = 1; start < end; start++) {\n                            if (time.dateFormat('%d', groupPositions[start]) !==\n                                time.dateFormat('%d', groupPositions[start - 1])) {\n                                higherRanks[groupPositions[start]] = 'day';\n                                hasCrossedHigherRank = true;\n                            }\n                        }\n                        // If the complete array has crossed midnight, we want\n                        // to mark the first positions also as higher rank\n                        if (hasCrossedHigherRank) {\n                            higherRanks[groupPositions[0]] = 'day';\n                        }\n                        info.higherRanks = higherRanks;\n                    }\n                    // Save the info\n                    info.segmentStarts = segmentStarts;\n                    groupPositions.info = info;\n                }\n                else {\n                    error(12, false, this.chart);\n                }\n                // Don't show ticks within a gap in the ordinal axis, where the\n                // space between two points is greater than a portion of the tick\n                // pixel interval\n                if (findHigherRanks && defined(tickPixelIntervalOption)) {\n                    var length_1 = groupPositions.length, translatedArr = [], distances = [];\n                    var itemToRemove = void 0, translated = void 0, lastTranslated = void 0, medianDistance = void 0, distance = void 0, i = length_1;\n                    // Find median pixel distance in order to keep a reasonably even\n                    // distance between ticks (#748)\n                    while (i--) {\n                        translated = this.translate(groupPositions[i]);\n                        if (lastTranslated) {\n                            distances[i] = lastTranslated - translated;\n                        }\n                        translatedArr[i] = lastTranslated = translated;\n                    }\n                    distances.sort();\n                    medianDistance = distances[Math.floor(distances.length / 2)];\n                    if (medianDistance < tickPixelIntervalOption * 0.6) {\n                        medianDistance = null;\n                    }\n                    // Now loop over again and remove ticks where needed\n                    i = groupPositions[length_1 - 1] > max ? length_1 - 1 : length_1; // #817\n                    lastTranslated = void 0;\n                    while (i--) {\n                        translated = translatedArr[i];\n                        distance = Math.abs(lastTranslated - translated);\n                        // #4175 - when axis is reversed, the distance, is negative but\n                        // tickPixelIntervalOption positive, so we need to compare the\n                        // same values\n                        // Remove ticks that are closer than 0.6 times the pixel\n                        // interval from the one to the right, but not if it is close to\n                        // the median distance (#748).\n                        if (lastTranslated &&\n                            distance < tickPixelIntervalOption * 0.8 &&\n                            (medianDistance === null || distance < medianDistance * 0.8)) {\n                            // Is this a higher ranked position with a normal\n                            // position to the right?\n                            if (higherRanks[groupPositions[i]] &&\n                                !higherRanks[groupPositions[i + 1]]) {\n                                // Yes: remove the lower ranked neighbour to the\n                                // right\n                                itemToRemove = i + 1;\n                                lastTranslated = translated; // #709\n                            }\n                            else {\n                                // No: remove this one\n                                itemToRemove = i;\n                            }\n                            groupPositions.splice(itemToRemove, 1);\n                        }\n                        else {\n                            lastTranslated = translated;\n                        }\n                    }\n                }\n                return groupPositions;\n            }\n            /**\n             * Get axis position of given index of the extended ordinal positions.\n             * Used only when panning an ordinal axis.\n             *\n             * @private\n             * @function Highcharts.Axis#index2val\n             * @param {number} index\n             * The index value of searched point\n             */\n            function index2val(index) {\n                var axis = this, ordinal = axis.ordinal, \n                // Context could be changed to extendedOrdinalPositions.\n                ordinalPositions = ordinal.positions;\n                // The visible range contains only equally spaced values.\n                if (!ordinalPositions) {\n                    return index;\n                }\n                var i = ordinalPositions.length - 1, distance;\n                if (index < 0) { // out of range, in effect panning to the left\n                    index = ordinalPositions[0];\n                }\n                else if (index > i) { // out of range, panning to the right\n                    index = ordinalPositions[i];\n                }\n                else { // split it up\n                    i = Math.floor(index);\n                    distance = index - i; // the decimal\n                }\n                if (typeof distance !== 'undefined' &&\n                    typeof ordinalPositions[i] !== 'undefined') {\n                    return ordinalPositions[i] + (distance ?\n                        distance *\n                            (ordinalPositions[i + 1] - ordinalPositions[i]) :\n                        0);\n                }\n                return index;\n            }\n            /**\n             * Translate from linear (internal) to axis value.\n             *\n             * @private\n             * @function Highcharts.Axis#lin2val\n             * @param {number} val\n             * The linear abstracted value.\n             */\n            function lin2val(val) {\n                var axis = this, ordinal = axis.ordinal, localMin = axis.old ? axis.old.min : axis.min, localA = axis.old ? axis.old.transA : axis.transA;\n                // Always use extendedPositions (#19816)\n                var positions = ordinal.getExtendedPositions();\n                // In some cases (especially in early stages of the chart creation) the\n                // getExtendedPositions might return undefined.\n                if (positions && positions.length) {\n                    // Convert back from modivied value to pixels. // #15970\n                    var pixelVal = correctFloat((val - localMin) * localA +\n                        axis.minPixelPadding), index = correctFloat(ordinal.getIndexOfPoint(pixelVal, positions)), mantissa = correctFloat(index % 1);\n                    // Check if the index is inside position array. If true,\n                    // read/approximate value for that exact index.\n                    if (index >= 0 && index <= positions.length - 1) {\n                        var leftNeighbour = positions[Math.floor(index)], rightNeighbour = positions[Math.ceil(index)], distance = rightNeighbour - leftNeighbour;\n                        return positions[Math.floor(index)] + mantissa * distance;\n                    }\n                }\n                // If the value is outside positions array, return initial value\n                return val; // #16784\n            }\n            /**\n             * Internal function to calculate the precise index in ordinalPositions\n             * array.\n             * @private\n             */\n            function getIndexInArray(ordinalPositions, val) {\n                var index = OrdinalAxis.Additions.findIndexOf(ordinalPositions, val, true);\n                if (ordinalPositions[index] === val) {\n                    return index;\n                }\n                var percent = (val - ordinalPositions[index]) /\n                    (ordinalPositions[index + 1] - ordinalPositions[index]);\n                return index + percent;\n            }\n            /**\n            * @private\n            */\n            function onAxisAfterInit() {\n                var axis = this;\n                if (!axis.ordinal) {\n                    axis.ordinal = new OrdinalAxis.Additions(axis);\n                }\n            }\n            /**\n             * @private\n             */\n            function onAxisFoundExtremes() {\n                var axis = this, eventArgs = axis.eventArgs, options = axis.options;\n                if (axis.isXAxis &&\n                    defined(options.overscroll) &&\n                    options.overscroll !== 0 &&\n                    isNumber(axis.max) &&\n                    isNumber(axis.min)) {\n                    if (axis.options.ordinal && !axis.ordinal.originalOrdinalRange) {\n                        // Calculate the original ordinal range\n                        axis.ordinal.getExtendedPositions(false);\n                    }\n                    if (axis.max === axis.dataMax &&\n                        (\n                        // Panning is an exception. We don't want to apply\n                        // overscroll when panning over the dataMax\n                        (eventArgs === null || eventArgs === void 0 ? void 0 : eventArgs.trigger) !== 'pan' ||\n                            axis.isInternal) &&\n                        // Scrollbar buttons are the other execption\n                        (eventArgs === null || eventArgs === void 0 ? void 0 : eventArgs.trigger) !== 'navigator') {\n                        var overscroll = axis.ordinal.convertOverscroll(options.overscroll);\n                        axis.max += overscroll;\n                        // Live data and buttons require translation for the min:\n                        if (!axis.isInternal &&\n                            defined(axis.userMin) &&\n                            (eventArgs === null || eventArgs === void 0 ? void 0 : eventArgs.trigger) !== 'mousewheel') {\n                            axis.min += overscroll;\n                        }\n                    }\n                }\n            }\n            /**\n             * For ordinal axis, that loads data async, redraw axis after data is\n             * loaded. If we don't do that, axis will have the same extremes as\n             * previously, but ordinal positions won't be calculated. See #10290\n             * @private\n             */\n            function onAxisAfterSetScale() {\n                var axis = this;\n                if (axis.horiz && !axis.isDirty) {\n                    axis.isDirty = axis.isOrdinal &&\n                        axis.chart.navigator &&\n                        !axis.chart.navigator.adaptToUpdatedData;\n                }\n            }\n            /**\n             * @private\n             */\n            function onAxisInitialAxisTranslation() {\n                var axis = this;\n                if (axis.ordinal) {\n                    axis.ordinal.beforeSetTickPositions();\n                    axis.tickInterval = axis.ordinal.postProcessTickInterval(axis.tickInterval);\n                }\n            }\n            /**\n             * Extending the Chart.pan method for ordinal axes\n             * @private\n             */\n            function onChartPan(e) {\n                var chart = this, xAxis = chart.xAxis[0], overscroll = xAxis.ordinal.convertOverscroll(xAxis.options.overscroll), chartX = e.originalEvent.chartX, panning = chart.options.chart.panning;\n                var runBase = false;\n                if (panning &&\n                    panning.type !== 'y' &&\n                    xAxis.options.ordinal &&\n                    xAxis.series.length) {\n                    var mouseDownX = chart.mouseDownX, extremes = xAxis.getExtremes(), dataMax = extremes.dataMax, min = extremes.min, max = extremes.max, hoverPoints = chart.hoverPoints, closestPointRange = (xAxis.closestPointRange ||\n                        (xAxis.ordinal && xAxis.ordinal.overscrollPointsRange)), pointPixelWidth = (xAxis.translationSlope *\n                        (xAxis.ordinal.slope || closestPointRange)), \n                    // how many ordinal units did we move?\n                    movedUnits = Math.round((mouseDownX - chartX) / pointPixelWidth), \n                    // get index of all the chart's points\n                    extendedOrdinalPositions = xAxis.ordinal.getExtendedPositions(), extendedAxis = {\n                        ordinal: {\n                            positions: extendedOrdinalPositions,\n                            extendedOrdinalPositions: extendedOrdinalPositions\n                        }\n                    }, index2val_1 = xAxis.index2val, val2lin_1 = xAxis.val2lin;\n                    var trimmedRange = void 0, ordinalPositions = void 0;\n                    // we have an ordinal axis, but the data is equally spaced\n                    if (!extendedAxis.ordinal.positions) {\n                        runBase = true;\n                    }\n                    else if (Math.abs(movedUnits) > 1) {\n                        // Remove active points for shared tooltip\n                        if (hoverPoints) {\n                            hoverPoints.forEach(function (point) {\n                                point.setState();\n                            });\n                        }\n                        // In grouped data series, the last ordinal position represents\n                        // the grouped data, which is to the left of the real data max.\n                        // If we don't compensate for this, we will be allowed to pan\n                        // grouped data series passed the right of the plot area.\n                        ordinalPositions = extendedAxis.ordinal.positions;\n                        if (dataMax >\n                            ordinalPositions[ordinalPositions.length - 1]) {\n                            ordinalPositions.push(dataMax);\n                        }\n                        // Get the new min and max values by getting the ordinal index\n                        // for the current extreme, then add the moved units and\n                        // translate back to values. This happens on the extended\n                        // ordinal positions if the new position is out of range, else\n                        // it happens on the current x axis which is smaller and faster.\n                        chart.setFixedRange(max - min);\n                        trimmedRange = xAxis.navigatorAxis\n                            .toFixedRange(void 0, void 0, index2val_1.apply(extendedAxis, [\n                            val2lin_1.apply(extendedAxis, [min, true]) +\n                                movedUnits\n                        ]), index2val_1.apply(extendedAxis, [\n                            val2lin_1.apply(extendedAxis, [max, true]) +\n                                movedUnits\n                        ]));\n                        // Apply it if it is within the available data range\n                        if (trimmedRange.min >= Math.min(extremes.dataMin, min) &&\n                            trimmedRange.max <= Math.max(dataMax, max) + overscroll) {\n                            xAxis.setExtremes(trimmedRange.min, trimmedRange.max, true, false, { trigger: 'pan' });\n                        }\n                        chart.mouseDownX = chartX; // set new reference for next run\n                        css(chart.container, { cursor: 'move' });\n                    }\n                }\n                else {\n                    runBase = true;\n                }\n                // revert to the linear chart.pan version\n                if (runBase || (panning && /y/.test(panning.type))) {\n                    if (overscroll) {\n                        xAxis.max = xAxis.dataMax + overscroll;\n                    }\n                }\n                else {\n                    e.preventDefault();\n                }\n            }\n            /**\n             * @private\n             */\n            function onSeriesUpdatedData() {\n                var xAxis = this.xAxis;\n                // Destroy the extended ordinal index on updated data\n                // and destroy extendedOrdinalPositions, #16055.\n                if (xAxis && xAxis.options.ordinal) {\n                    delete xAxis.ordinal.index;\n                    delete xAxis.ordinal.originalOrdinalRange;\n                }\n            }\n            /**\n             * Translate from a linear axis value to the corresponding ordinal axis\n             * position. If there are no gaps in the ordinal axis this will be the\n             * same. The translated value is the value that the point would have if\n             * the axis was linear, using the same min and max.\n             *\n             * @private\n             * @function Highcharts.Axis#val2lin\n             * @param {number} val\n             * The axis value.\n             * @param {boolean} [toIndex]\n             * Whether to return the index in the ordinalPositions or the new value.\n             */\n            function val2lin(val, toIndex) {\n                var axis = this, ordinal = axis.ordinal, ordinalPositions = ordinal.positions;\n                var slope = ordinal.slope, extendedOrdinalPositions;\n                if (!ordinalPositions) {\n                    return val;\n                }\n                var ordinalLength = ordinalPositions.length;\n                var ordinalIndex;\n                // If the searched value is inside visible plotArea, ivastigate the\n                // value basing on ordinalPositions.\n                if (ordinalPositions[0] <= val &&\n                    ordinalPositions[ordinalLength - 1] >= val) {\n                    ordinalIndex = getIndexInArray(ordinalPositions, val);\n                    // final return value is based on ordinalIndex\n                }\n                else {\n                    extendedOrdinalPositions =\n                        ordinal.getExtendedPositions &&\n                            ordinal.getExtendedPositions();\n                    if (!(extendedOrdinalPositions && extendedOrdinalPositions.length)) {\n                        return val;\n                    }\n                    var length_2 = extendedOrdinalPositions.length;\n                    if (!slope) {\n                        slope =\n                            (extendedOrdinalPositions[length_2 - 1] -\n                                extendedOrdinalPositions[0]) /\n                                length_2;\n                    }\n                    // OriginalPointReference is equal to the index of\n                    // first point of ordinalPositions in extendedOrdinalPositions.\n                    var originalPositionsReference = getIndexInArray(extendedOrdinalPositions, ordinalPositions[0]);\n                    // If the searched value is outside the visiblePlotArea,\n                    // check if it is inside extendedOrdinalPositions.\n                    if (val >= extendedOrdinalPositions[0] &&\n                        val <=\n                            extendedOrdinalPositions[length_2 - 1]) {\n                        // Return Value\n                        ordinalIndex = getIndexInArray(extendedOrdinalPositions, val) -\n                            originalPositionsReference;\n                    }\n                    else {\n                        if (!toIndex) {\n                            // If the value is outside positions array,\n                            // return initial value, #16784\n                            return val;\n                        }\n                        // Since ordinal.slope is the average distance between 2\n                        // points on visible plotArea, this can be used to calculate\n                        // the approximate position of the point, which is outside\n                        // the extendedOrdinalPositions.\n                        if (val < extendedOrdinalPositions[0]) {\n                            var diff = extendedOrdinalPositions[0] - val, approximateIndexOffset = diff / slope;\n                            ordinalIndex =\n                                -originalPositionsReference -\n                                    approximateIndexOffset;\n                        }\n                        else {\n                            var diff = val -\n                                extendedOrdinalPositions[length_2 - 1], approximateIndexOffset = diff / slope;\n                            ordinalIndex =\n                                approximateIndexOffset +\n                                    length_2 -\n                                    originalPositionsReference;\n                        }\n                    }\n                }\n                return toIndex ? ordinalIndex : slope * (ordinalIndex || 0) +\n                    ordinal.offset;\n            }\n            /* *\n             *\n             *  Classes\n             *\n             * */\n            /**\n             * @private\n             */\n            var Additions = /** @class */ (function () {\n                /* *\n                 *\n                 *  Constructors\n                 *\n                 * */\n                /**\n                 * @private\n                 */\n                function Additions(axis) {\n                    this.index = {};\n                    this.axis = axis;\n                }\n                /* *\n                *\n                *  Functions\n                *\n                * */\n                /**\n                 * Calculate the ordinal positions before tick positions are calculated.\n                 * @private\n                 */\n                Additions.prototype.beforeSetTickPositions = function () {\n                    var _a;\n                    var axis = this.axis, ordinal = axis.ordinal, extremes = axis.getExtremes(), min = extremes.min, max = extremes.max, hasBreaks = (_a = axis.brokenAxis) === null || _a === void 0 ? void 0 : _a.hasBreaks, isOrdinal = axis.options.ordinal;\n                    var len, uniqueOrdinalPositions, dist, minIndex, maxIndex, slope, i, ordinalPositions = [], overscrollPointsRange = Number.MAX_VALUE, useOrdinal = false, adjustOrdinalExtremesPoints = false, isBoosted = false;\n                    // Apply the ordinal logic\n                    if (isOrdinal || hasBreaks) { // #4167 YAxis is never ordinal ?\n                        var distanceBetweenPoint_1 = 0;\n                        axis.series.forEach(function (series, i) {\n                            uniqueOrdinalPositions = [];\n                            // For an axis with multiple series, check if the distance\n                            // between points is identical throughout all series.\n                            if (i > 0 &&\n                                series.options.id !== 'highcharts-navigator-series' &&\n                                series.processedXData.length > 1) {\n                                adjustOrdinalExtremesPoints =\n                                    distanceBetweenPoint_1 !== series.processedXData[1] -\n                                        series.processedXData[0];\n                            }\n                            distanceBetweenPoint_1 =\n                                series.processedXData[1] - series.processedXData[0];\n                            if (series.boosted) {\n                                isBoosted = series.boosted;\n                            }\n                            if (series.reserveSpace() &&\n                                (series\n                                    .takeOrdinalPosition !== false || hasBreaks)) {\n                                // concatenate the processed X data into the existing\n                                // positions, or the empty array\n                                ordinalPositions = ordinalPositions.concat(series.processedXData);\n                                len = ordinalPositions.length;\n                                // remove duplicates (#1588)\n                                ordinalPositions.sort(function (a, b) {\n                                    // without a custom function it is sorted as strings\n                                    return a - b;\n                                });\n                                overscrollPointsRange = Math.min(overscrollPointsRange, pick(\n                                // Check for a single-point series:\n                                series.closestPointRange, overscrollPointsRange));\n                                if (len) {\n                                    i = 0;\n                                    while (i < len - 1) {\n                                        if (ordinalPositions[i] !==\n                                            ordinalPositions[i + 1]) {\n                                            uniqueOrdinalPositions.push(ordinalPositions[i + 1]);\n                                        }\n                                        i++;\n                                    }\n                                    // Check first item:\n                                    if (uniqueOrdinalPositions[0] !==\n                                        ordinalPositions[0]) {\n                                        uniqueOrdinalPositions.unshift(ordinalPositions[0]);\n                                    }\n                                    ordinalPositions = uniqueOrdinalPositions;\n                                }\n                            }\n                        });\n                        if (!axis.ordinal.originalOrdinalRange) {\n                            // Calculate current originalOrdinalRange\n                            axis.ordinal.originalOrdinalRange =\n                                (ordinalPositions.length - 1) * overscrollPointsRange;\n                        }\n                        // If the distance between points is not identical throughout\n                        // all series, remove the first and last ordinal position to\n                        // avoid enabling ordinal logic when it is not needed, #17405.\n                        // Only for boosted series because changes are negligible.\n                        if (adjustOrdinalExtremesPoints && isBoosted) {\n                            ordinalPositions.pop();\n                            ordinalPositions.shift();\n                        }\n                        // cache the length\n                        len = ordinalPositions.length;\n                        // Check if we really need the overhead of mapping axis data\n                        // against the ordinal positions. If the series consist of\n                        // evenly spaced data any way, we don't need any ordinal logic.\n                        if (len > 2) { // two points have equal distance by default\n                            dist = ordinalPositions[1] - ordinalPositions[0];\n                            i = len - 1;\n                            while (i-- && !useOrdinal) {\n                                if (ordinalPositions[i + 1] - ordinalPositions[i] !==\n                                    dist) {\n                                    useOrdinal = true;\n                                }\n                            }\n                            // When zooming in on a week, prevent axis padding for\n                            // weekends even though the data within the week is evenly\n                            // spaced.\n                            if (!axis.options.keepOrdinalPadding &&\n                                (ordinalPositions[0] - min > dist ||\n                                    (max -\n                                        ordinalPositions[ordinalPositions.length - 1]) > dist)) {\n                                useOrdinal = true;\n                            }\n                        }\n                        else if (axis.options.overscroll) {\n                            if (len === 2) {\n                                // Exactly two points, distance for overscroll is fixed:\n                                overscrollPointsRange =\n                                    ordinalPositions[1] - ordinalPositions[0];\n                            }\n                            else if (len === 1) {\n                                // We have just one point, closest distance is unknown.\n                                // Assume then it is last point and overscrolled range:\n                                overscrollPointsRange = axis.ordinal.convertOverscroll(axis.options.overscroll);\n                                ordinalPositions = [\n                                    ordinalPositions[0],\n                                    ordinalPositions[0] + overscrollPointsRange\n                                ];\n                            }\n                            else {\n                                // In case of zooming in on overscrolled range, stick to\n                                // the old range:\n                                overscrollPointsRange = ordinal.overscrollPointsRange;\n                            }\n                        }\n                        // Record the slope and offset to compute the linear values from\n                        // the array index. Since the ordinal positions may exceed the\n                        // current range, get the start and end positions within it\n                        // (#719, #665b)\n                        if (useOrdinal || axis.forceOrdinal) {\n                            if (axis.options.overscroll) {\n                                ordinal.overscrollPointsRange = overscrollPointsRange;\n                                ordinalPositions = ordinalPositions.concat(ordinal.getOverscrollPositions());\n                            }\n                            // Register\n                            ordinal.positions = ordinalPositions;\n                            // This relies on the ordinalPositions being set. Use\n                            // Math.max and Math.min to prevent padding on either sides\n                            // of the data.\n                            minIndex = axis.ordinal2lin(// #5979\n                            Math.max(min, ordinalPositions[0]), true);\n                            maxIndex = Math.max(axis.ordinal2lin(Math.min(max, ordinalPositions[ordinalPositions.length - 1]), true), 1); // #3339\n                            // Set the slope and offset of the values compared to the\n                            // indices in the ordinal positions.\n                            ordinal.slope = slope =\n                                (max - min) / (maxIndex - minIndex);\n                            ordinal.offset = min - (minIndex * slope);\n                        }\n                        else {\n                            ordinal.overscrollPointsRange = pick(axis.closestPointRange, ordinal.overscrollPointsRange);\n                            ordinal.positions = axis.ordinal.slope = ordinal.offset =\n                                void 0;\n                        }\n                    }\n                    axis.isOrdinal = isOrdinal && useOrdinal; // #3818, #4196, #4926\n                    ordinal.groupIntervalFactor = null; // reset for next run\n                };\n                /**\n                 * Faster way of using the Array.indexOf method.\n                 * Works for sorted arrays only with unique values.\n                 *\n                 * @param {Array} sortedArray\n                 *        The sorted array inside which we are looking for.\n                 * @param {number} key\n                 *        The key to being found.\n                 * @param {boolean} indirectSearch\n                 *        In case of lack of the point in the array, should return\n                 *        value be equal to -1 or the closest smaller index.\n                 *  @private\n                 */\n                Additions.findIndexOf = function (sortedArray, key, indirectSearch) {\n                    var start = 0, end = sortedArray.length - 1, middle;\n                    while (start < end) {\n                        middle = Math.ceil((start + end) / 2);\n                        // Key found as the middle element.\n                        if (sortedArray[middle] <= key) {\n                            // Continue searching to the right.\n                            start = middle;\n                        }\n                        else {\n                            // Continue searching to the left.\n                            end = middle - 1;\n                        }\n                    }\n                    if (sortedArray[start] === key) {\n                        return start;\n                    }\n                    // Key could not be found.\n                    return !indirectSearch ? -1 : start;\n                };\n                /**\n                 * Get the ordinal positions for the entire data set. This is necessary\n                 * in chart panning because we need to find out what points or data\n                 * groups are available outside the visible range. When a panning\n                 * operation starts, if an index for the given grouping does not exists,\n                 * it is created and cached. This index is deleted on updated data, so\n                 * it will be regenerated the next time a panning operation starts.\n                 * @private\n                 */\n                Additions.prototype.getExtendedPositions = function (withOverscroll) {\n                    var _a;\n                    if (withOverscroll === void 0) { withOverscroll = true; }\n                    var ordinal = this, axis = ordinal.axis, axisProto = axis.constructor.prototype, chart = axis.chart, grouping = (_a = axis.series[0]) === null || _a === void 0 ? void 0 : _a.currentDataGrouping, key = grouping ?\n                        grouping.count + grouping.unitName :\n                        'raw', overscroll = withOverscroll ?\n                        axis.ordinal.convertOverscroll(axis.options.overscroll) : 0, extremes = axis.getExtremes();\n                    var fakeAxis, fakeSeries = void 0, ordinalIndex = ordinal.index;\n                    // If this is the first time, or the ordinal index is deleted by\n                    // updatedData,\n                    // create it.\n                    if (!ordinalIndex) {\n                        ordinalIndex = ordinal.index = {};\n                    }\n                    if (!ordinalIndex[key]) {\n                        // Create a fake axis object where the extended ordinal\n                        // positions are emulated\n                        fakeAxis = {\n                            series: [],\n                            chart: chart,\n                            forceOrdinal: false,\n                            getExtremes: function () {\n                                return {\n                                    min: extremes.dataMin,\n                                    max: extremes.dataMax + overscroll\n                                };\n                            },\n                            applyGrouping: axisProto.applyGrouping,\n                            getGroupPixelWidth: axisProto.getGroupPixelWidth,\n                            getTimeTicks: axisProto.getTimeTicks,\n                            options: {\n                                ordinal: true\n                            },\n                            ordinal: {\n                                getGroupIntervalFactor: this.getGroupIntervalFactor\n                            },\n                            ordinal2lin: axisProto.ordinal2lin,\n                            getIndexOfPoint: axisProto.getIndexOfPoint,\n                            val2lin: axisProto.val2lin // #2590\n                        };\n                        fakeAxis.ordinal.axis = fakeAxis;\n                        // Add the fake series to hold the full data, then apply\n                        // processData to it\n                        axis.series.forEach(function (series) {\n                            fakeSeries = {\n                                xAxis: fakeAxis,\n                                xData: series.xData.slice(),\n                                chart: chart,\n                                groupPixelWidth: series.groupPixelWidth,\n                                destroyGroupedData: H.noop,\n                                getProcessedData: Series.prototype.getProcessedData,\n                                applyGrouping: Series.prototype.applyGrouping,\n                                reserveSpace: Series.prototype.reserveSpace,\n                                visible: series.visible\n                            };\n                            if (withOverscroll) {\n                                fakeSeries.xData = fakeSeries.xData.concat(ordinal.getOverscrollPositions());\n                            }\n                            fakeSeries.options = {\n                                dataGrouping: grouping ? {\n                                    firstAnchor: 'firstPoint',\n                                    anchor: 'middle',\n                                    lastAnchor: 'lastPoint',\n                                    enabled: true,\n                                    forced: true,\n                                    // doesn't matter which, use the fastest\n                                    approximation: 'open',\n                                    units: [[\n                                            grouping.unitName,\n                                            [grouping.count]\n                                        ]]\n                                } : {\n                                    enabled: false\n                                }\n                            };\n                            fakeAxis.series.push(fakeSeries);\n                            series.processData.apply(fakeSeries);\n                        });\n                        fakeAxis.applyGrouping({ hasExtremesChanged: true });\n                        // Force to use the ordinal when points are evenly spaced (e.g.\n                        // weeks), #3825.\n                        if (((fakeSeries === null || fakeSeries === void 0 ? void 0 : fakeSeries.closestPointRange) !==\n                            (fakeSeries === null || fakeSeries === void 0 ? void 0 : fakeSeries.basePointRange)) &&\n                            fakeSeries.currentDataGrouping) {\n                            fakeAxis.forceOrdinal = true;\n                        }\n                        // Run beforeSetTickPositions to compute the ordinalPositions\n                        axis.ordinal.beforeSetTickPositions.apply({ axis: fakeAxis });\n                        if (!axis.ordinal.originalOrdinalRange &&\n                            fakeAxis.ordinal.originalOrdinalRange) {\n                            axis.ordinal.originalOrdinalRange =\n                                fakeAxis.ordinal.originalOrdinalRange;\n                        }\n                        // Cache it\n                        ordinalIndex[key] = fakeAxis.ordinal.positions;\n                    }\n                    return ordinalIndex[key];\n                };\n                /**\n                 * Find the factor to estimate how wide the plot area would have been if\n                 * ordinal gaps were included. This value is used to compute an imagined\n                 * plot width in order to establish the data grouping interval.\n                 *\n                 * A real world case is the intraday-candlestick example. Without this\n                 * logic, it would show the correct data grouping when viewing a range\n                 * within each day, but once moving the range to include the gap between\n                 * two days, the interval would include the cut-away night hours and the\n                 * data grouping would be wrong. So the below method tries to compensate\n                 * by identifying the most common point interval, in this case days.\n                 *\n                 * An opposite case is presented in issue #718. We have a long array of\n                 * daily data, then one point is appended one hour after the last point.\n                 * We expect the data grouping not to change.\n                 *\n                 * In the future, if we find cases where this estimation doesn't work\n                 * optimally, we might need to add a second pass to the data grouping\n                 * logic, where we do another run with a greater interval if the number\n                 * of data groups is more than a certain fraction of the desired group\n                 * count.\n                 * @private\n                 */\n                Additions.prototype.getGroupIntervalFactor = function (xMin, xMax, series) {\n                    var ordinal = this, processedXData = series.processedXData, len = processedXData.length, distances = [];\n                    var median, i, groupIntervalFactor = ordinal.groupIntervalFactor;\n                    // Only do this computation for the first series, let the other\n                    // inherit it (#2416)\n                    if (!groupIntervalFactor) {\n                        // Register all the distances in an array\n                        for (i = 0; i < len - 1; i++) {\n                            distances[i] = (processedXData[i + 1] -\n                                processedXData[i]);\n                        }\n                        // Sort them and find the median\n                        distances.sort(function (a, b) {\n                            return a - b;\n                        });\n                        median = distances[Math.floor(len / 2)];\n                        // Compensate for series that don't extend through the entire\n                        // axis extent. #1675.\n                        xMin = Math.max(xMin, processedXData[0]);\n                        xMax = Math.min(xMax, processedXData[len - 1]);\n                        ordinal.groupIntervalFactor = groupIntervalFactor =\n                            (len * median) / (xMax - xMin);\n                    }\n                    // Return the factor needed for data grouping\n                    return groupIntervalFactor;\n                };\n                /**\n                 * Get index of point inside the ordinal positions array.\n                 *\n                 * @private\n                 * @param {number} val\n                 * The pixel value of a point.\n                 *\n                 * @param {Array<number>} [ordinalArray]\n                 * An array of all points available on the axis for the given data set.\n                 * Either ordinalPositions if the value is inside the plotArea or\n                 * extendedOrdinalPositions if not.\n                 */\n                Additions.prototype.getIndexOfPoint = function (val, ordinalArray) {\n                    var ordinal = this, axis = ordinal.axis;\n                    var firstPointVal = 0;\n                    // Check whether the series has at least one point inside the chart\n                    var hasPointsInside = function (series) {\n                        var min = axis.min, max = axis.max;\n                        if (defined(min) && defined(max)) {\n                            return series.points.some(function (point) {\n                                return point.x >= min && point.x <= max;\n                            });\n                        }\n                        return false;\n                    };\n                    var firstPointX;\n                    // When more series assign to axis, find the smallest one, #15987.\n                    axis.series.forEach(function (series) {\n                        var _a;\n                        var firstPoint = (_a = series.points) === null || _a === void 0 ? void 0 : _a[0];\n                        if (defined(firstPoint === null || firstPoint === void 0 ? void 0 : firstPoint.plotX) &&\n                            (firstPoint.plotX < firstPointX ||\n                                !defined(firstPointX)) &&\n                            hasPointsInside(series)) {\n                            firstPointX = firstPoint.plotX;\n                            firstPointVal = firstPoint.x;\n                        }\n                    });\n                    // If undefined, give a default value\n                    firstPointX !== null && firstPointX !== void 0 ? firstPointX : (firstPointX = axis.minPixelPadding);\n                    // Distance in pixels between two points on the ordinal axis in the\n                    // current zoom.\n                    var ordinalPointPixelInterval = axis.translationSlope * (ordinal.slope ||\n                        axis.closestPointRange ||\n                        ordinal.overscrollPointsRange), \n                    // toValue for the first point.\n                    shiftIndex = correctFloat((val - firstPointX) / ordinalPointPixelInterval);\n                    return Additions.findIndexOf(ordinalArray, firstPointVal, true) + shiftIndex;\n                };\n                /**\n                 * Get ticks for an ordinal axis within a range where points don't\n                 * exist. It is required when overscroll is enabled. We can't base on\n                 * points, because we may not have any, so we use approximated\n                 * pointRange and generate these ticks between Axis.dataMax,\n                 * Axis.dataMax + Axis.overscroll evenly spaced. Used in panning and\n                 * navigator scrolling.\n                 * @private\n                 */\n                Additions.prototype.getOverscrollPositions = function () {\n                    var ordinal = this, axis = ordinal.axis, extraRange = ordinal.convertOverscroll(axis.options.overscroll), distance = ordinal.overscrollPointsRange, positions = [];\n                    var max = axis.dataMax;\n                    if (defined(distance)) {\n                        // Max + pointRange because we need to scroll to the last\n                        while (max <= axis.dataMax + extraRange) {\n                            max += distance;\n                            positions.push(max);\n                        }\n                    }\n                    return positions;\n                };\n                /**\n                 * Make the tick intervals closer because the ordinal gaps make the\n                 * ticks spread out or cluster.\n                 * @private\n                 */\n                Additions.prototype.postProcessTickInterval = function (tickInterval) {\n                    // Problem: https://jsfiddle.net/highcharts/FQm4E/1/. This is a case\n                    // where this algorithm doesn't work optimally. In this case, the\n                    // tick labels are spread out per week, but all the gaps reside\n                    // within weeks. So we have a situation where the labels are courser\n                    // than the ordinal gaps, and thus the tick interval should not be\n                    // altered.\n                    var ordinal = this, axis = ordinal.axis, ordinalSlope = ordinal.slope;\n                    var ret;\n                    if (ordinalSlope) {\n                        if (!axis.options.breaks) {\n                            ret = (tickInterval /\n                                (ordinalSlope / axis.closestPointRange));\n                        }\n                        else {\n                            ret = axis.closestPointRange || tickInterval; // #7275\n                        }\n                    }\n                    else {\n                        ret = tickInterval;\n                    }\n                    return ret;\n                };\n                /**\n                 * If overscroll is pixel or pecentage value, convert it to axis range.\n                 *\n                 * @private\n                 * @param {number | string} overscroll\n                 * Overscroll value in axis range, pixels or percentage value.\n                 * @return {number}\n                 * Overscroll value in axis range.\n                 */\n                Additions.prototype.convertOverscroll = function (overscroll) {\n                    if (overscroll === void 0) { overscroll = 0; }\n                    var ordinal = this, axis = ordinal.axis, calculateOverscroll = function (overscrollPercentage) {\n                        return pick(ordinal.originalOrdinalRange, defined(axis.dataMax) && defined(axis.dataMin) ?\n                            axis.dataMax - axis.dataMin : 0) * overscrollPercentage;\n                    };\n                    if (isString(overscroll)) {\n                        var overscrollValue = parseInt(overscroll, 10);\n                        if (/%$/.test(overscroll)) {\n                            // If overscroll is percentage\n                            return calculateOverscroll(overscrollValue / 100);\n                        }\n                        if (/px/.test(overscroll)) {\n                            // If overscroll is pixels, it is limited to 90% of the axis\n                            // length to prevent division by zero\n                            var limitedOverscrollValue = Math.min(overscrollValue, axis.len * 0.9), pixelToPercent = limitedOverscrollValue / axis.len;\n                            return calculateOverscroll(pixelToPercent / (1 - pixelToPercent));\n                        }\n                        // If overscroll is a string but not pixels or percentage,\n                        // return 0 as no overscroll\n                        return 0;\n                    }\n                    return overscroll;\n                };\n                return Additions;\n            }());\n            OrdinalAxis.Additions = Additions;\n        })(OrdinalAxis || (OrdinalAxis = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return OrdinalAxis;\n    });\n    _registerModule(_modules, 'Stock/RangeSelector/RangeSelectorDefaults.js', [], function () {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  Declarations\n         *\n         * */\n        /**\n         * Language object. The language object is global and it can't be set\n         * on each chart initialization. Instead, use `Highcharts.setOptions` to\n         * set it before any chart is initialized.\n         *\n         * ```js\n         * Highcharts.setOptions({\n         *     lang: {\n         *         months: [\n         *             'Janvier', 'Février', 'Mars', 'Avril',\n         *             'Mai', 'Juin', 'Juillet', 'Août',\n         *             'Septembre', 'Octobre', 'Novembre', 'Décembre'\n         *         ],\n         *         weekdays: [\n         *             'Dimanche', 'Lundi', 'Mardi', 'Mercredi',\n         *             'Jeudi', 'Vendredi', 'Samedi'\n         *         ]\n         *     }\n         * });\n         * ```\n         *\n         * @optionparent lang\n         */\n        var lang = {\n            /**\n             * The text for the label for the range selector buttons.\n             *\n             * @product highstock gantt\n             */\n            rangeSelectorZoom: 'Zoom',\n            /**\n             * The text for the label for the \"from\" input box in the range\n             * selector. Since v9.0, this string is empty as the label is not\n             * rendered by default.\n             *\n             * @product highstock gantt\n             */\n            rangeSelectorFrom: '',\n            /**\n             * The text for the label for the \"to\" input box in the range selector.\n             *\n             * @product highstock gantt\n             */\n            rangeSelectorTo: '→'\n        };\n        /**\n         * The range selector is a tool for selecting ranges to display within\n         * the chart. It provides buttons to select preconfigured ranges in\n         * the chart, like 1 day, 1 week, 1 month etc. It also provides input\n         * boxes where min and max dates can be manually input.\n         *\n         * @product      highstock gantt\n         * @optionparent rangeSelector\n         */\n        var rangeSelector = {\n            /**\n             * Whether to enable all buttons from the start. By default buttons are\n             * only enabled if the corresponding time range exists on the X axis,\n             * but enabling all buttons allows for dynamically loading different\n             * time ranges.\n             *\n             * @sample {highstock} stock/rangeselector/allbuttonsenabled-true/\n             *         All buttons enabled\n             *\n             * @since     2.0.3\n             */\n            allButtonsEnabled: false,\n            /**\n             * An array of configuration objects for the buttons.\n             *\n             * Defaults to:\n             * ```js\n             * buttons: [{\n             *     type: 'month',\n             *     count: 1,\n             *     text: '1m',\n             *     title: 'View 1 month'\n             * }, {\n             *     type: 'month',\n             *     count: 3,\n             *     text: '3m',\n             *     title: 'View 3 months'\n             * }, {\n             *     type: 'month',\n             *     count: 6,\n             *     text: '6m',\n             *     title: 'View 6 months'\n             * }, {\n             *     type: 'ytd',\n             *     text: 'YTD',\n             *     title: 'View year to date'\n             * }, {\n             *     type: 'year',\n             *     count: 1,\n             *     text: '1y',\n             *     title: 'View 1 year'\n             * }, {\n             *     type: 'all',\n             *     text: 'All',\n             *     title: 'View all'\n             * }]\n             * ```\n             *\n             * @sample {highstock} stock/demo/rangeselector-datagrouping/\n             *         Data grouping by buttons\n             *\n             * @type      {Array<*>}\n             */\n            buttons: void 0,\n            /**\n             * How many units of the defined type the button should span. If `type`\n             * is \"month\" and `count` is 3, the button spans three months.\n             *\n             * @type      {number}\n             * @default   1\n             * @apioption rangeSelector.buttons.count\n             */\n            /**\n             * Fires when clicking on the rangeSelector button. One parameter,\n             * event, is passed to the function, containing common event\n             * information.\n             *\n             * ```js\n             * click: function(e) {\n             *   console.log(this);\n             * }\n             * ```\n             *\n             * Return false to stop default button's click action.\n             *\n             * @sample {highstock} stock/rangeselector/button-click/\n             *         Click event on the button\n             *\n             * @type      {Highcharts.RangeSelectorClickCallbackFunction}\n             * @apioption rangeSelector.buttons.events.click\n             */\n            /**\n             * Additional range (in milliseconds) added to the end of the calculated\n             * time span.\n             *\n             * @sample {highstock} stock/rangeselector/min-max-offsets/\n             *         Button offsets\n             *\n             * @type      {number}\n             * @default   0\n             * @since     6.0.0\n             * @apioption rangeSelector.buttons.offsetMax\n             */\n            /**\n             * Additional range (in milliseconds) added to the start of the\n             * calculated time span.\n             *\n             * @sample {highstock} stock/rangeselector/min-max-offsets/\n             *         Button offsets\n             *\n             * @type      {number}\n             * @default   0\n             * @since     6.0.0\n             * @apioption rangeSelector.buttons.offsetMin\n             */\n            /**\n             * When buttons apply dataGrouping on a series, by default zooming\n             * in/out will deselect buttons and unset dataGrouping. Enable this\n             * option to keep buttons selected when extremes change.\n             *\n             * @sample {highstock} stock/rangeselector/preserve-datagrouping/\n             *         Different preserveDataGrouping settings\n             *\n             * @type      {boolean}\n             * @default   false\n             * @since     6.1.2\n             * @apioption rangeSelector.buttons.preserveDataGrouping\n             */\n            /**\n             * A custom data grouping object for each button.\n             *\n             * @see [series.dataGrouping](#plotOptions.series.dataGrouping)\n             *\n             * @sample {highstock} stock/demo/rangeselector-datagrouping/\n             *         Data grouping by range selector buttons\n             *\n             * @type      {*}\n             * @extends   plotOptions.series.dataGrouping\n             * @apioption rangeSelector.buttons.dataGrouping\n             */\n            /**\n             * The text for the button itself.\n             *\n             * @type      {string}\n             * @apioption rangeSelector.buttons.text\n             */\n            /**\n             * Explanation for the button, shown as a tooltip on hover, and used by\n             * assistive technology.\n             *\n             * @type      {string}\n             * @apioption rangeSelector.buttons.title\n             */\n            /**\n             * Defined the time span for the button. Can be one of `millisecond`,\n             * `second`, `minute`, `hour`, `day`, `week`, `month`, `year`, `ytd`,\n             * and `all`.\n             *\n             * @type       {Highcharts.RangeSelectorButtonTypeValue}\n             * @apioption  rangeSelector.buttons.type\n             */\n            /**\n             * The space in pixels between the buttons in the range selector.\n             */\n            buttonSpacing: 5,\n            /**\n             * Whether to collapse the range selector buttons into a dropdown when\n             * there is not enough room to show everything in a single row, instead\n             * of dividing the range selector into multiple rows.\n             * Can be one of the following:\n             *  - `always`: Always collapse\n             *  - `responsive`: Only collapse when there is not enough room\n             *  - `never`: Never collapse\n             *\n             * @sample {highstock} stock/rangeselector/dropdown/\n             *         Dropdown option\n             *\n             * @validvalue [\"always\", \"responsive\", \"never\"]\n             * @since 9.0.0\n             */\n            dropdown: 'responsive',\n            /**\n             * Enable or disable the range selector. Default to `true` for stock\n             * charts, using the `stockChart` factory.\n             *\n             * @sample {highstock} stock/rangeselector/enabled/\n             *         Disable the range selector\n             *\n             * @type {boolean|undefined}\n             * @default {highstock} true\n             */\n            enabled: void 0,\n            /**\n             * The vertical alignment of the rangeselector box. Allowed properties\n             * are `top`, `middle`, `bottom`.\n             *\n             * @sample {highstock} stock/rangeselector/vertical-align-middle/\n             *         Middle\n             * @sample {highstock} stock/rangeselector/vertical-align-bottom/\n             *         Bottom\n             *\n             * @type  {Highcharts.VerticalAlignValue}\n             * @since 6.0.0\n             */\n            verticalAlign: 'top',\n            /**\n             * A collection of attributes for the buttons. The object takes SVG\n             * attributes like `fill`, `stroke`, `stroke-width`, as well as `style`,\n             * a collection of CSS properties for the text.\n             *\n             * The object can also be extended with states, so you can set\n             * presentational options for `hover`, `select` or `disabled` button\n             * states.\n             *\n             * CSS styles for the text label.\n             *\n             * In styled mode, the buttons are styled by the\n             * `.highcharts-range-selector-buttons .highcharts-button` rule with its\n             * different states.\n             *\n             * @sample {highstock} stock/rangeselector/styling/\n             *         Styling the buttons and inputs\n             *\n             * @type {Highcharts.SVGAttributes}\n             */\n            buttonTheme: {\n                /** @ignore */\n                width: 28,\n                /** @ignore */\n                height: 18,\n                /** @ignore */\n                padding: 2,\n                /** @ignore */\n                zIndex: 7 // #484, #852\n            },\n            /**\n             * When the rangeselector is floating, the plot area does not reserve\n             * space for it. This opens for positioning anywhere on the chart.\n             *\n             * @sample {highstock} stock/rangeselector/floating/\n             *         Placing the range selector between the plot area and the\n             *         navigator\n             *\n             * @since 6.0.0\n             */\n            floating: false,\n            /**\n             * The x offset of the range selector relative to its horizontal\n             * alignment within `chart.spacingLeft` and `chart.spacingRight`.\n             *\n             * @since 6.0.0\n             */\n            x: 0,\n            /**\n             * The y offset of the range selector relative to its horizontal\n             * alignment within `chart.spacingLeft` and `chart.spacingRight`.\n             *\n             * @since 6.0.0\n             */\n            y: 0,\n            /**\n             * Deprecated. The height of the range selector. Currently it is\n             * calculated dynamically.\n             *\n             * @deprecated\n             * @type  {number|undefined}\n             * @since 2.1.9\n             */\n            height: void 0,\n            /**\n             * The border color of the date input boxes.\n             *\n             * @sample {highstock} stock/rangeselector/styling/\n             *         Styling the buttons and inputs\n             *\n             * @type      {Highcharts.ColorString}\n             * @since     1.3.7\n             */\n            inputBoxBorderColor: 'none',\n            /**\n             * The pixel height of the date input boxes.\n             *\n             * @sample {highstock} stock/rangeselector/styling/\n             *         Styling the buttons and inputs\n             *\n             * @since     1.3.7\n             */\n            inputBoxHeight: 17,\n            /**\n             * The pixel width of the date input boxes. When `undefined`, the width\n             * is fitted to the rendered content.\n             *\n             * @sample {highstock} stock/rangeselector/styling/\n             *         Styling the buttons and inputs\n             *\n             * @type   {number|undefined}\n             * @since  1.3.7\n             */\n            inputBoxWidth: void 0,\n            /**\n             * The date format in the input boxes when not selected for editing.\n             * Defaults to `%e %b %Y`.\n             *\n             * This is used to determine which type of input to show,\n             * `datetime-local`, `date` or `time` and falling back to `text` when\n             * the browser does not support the input type or the format contains\n             * milliseconds.\n             *\n             * @sample {highstock} stock/rangeselector/input-type/\n             *         Input types\n             * @sample {highstock} stock/rangeselector/input-format/\n             *         Milliseconds in the range selector\n             *\n             */\n            inputDateFormat: '%e %b %Y',\n            /**\n             * A custom callback function to parse values entered in the input boxes\n             * and return a valid JavaScript time as milliseconds since 1970.\n             * The first argument passed is a value to parse,\n             * second is a boolean indicating use of the UTC time.\n             *\n             * This will only get called for inputs of type `text`. Since v8.2.3,\n             * the input type is dynamically determined based on the granularity\n             * of the `inputDateFormat` and the browser support.\n             *\n             * @sample {highstock} stock/rangeselector/input-format/\n             *         Milliseconds in the range selector\n             *\n             * @type      {Highcharts.RangeSelectorParseCallbackFunction}\n             * @since     1.3.3\n             */\n            inputDateParser: void 0,\n            /**\n             * The date format in the input boxes when they are selected for\n             * editing. This must be a format that is recognized by JavaScript\n             * Date.parse.\n             *\n             * This will only be used for inputs of type `text`. Since v8.2.3,\n             * the input type is dynamically determined based on the granularity\n             * of the `inputDateFormat` and the browser support.\n             *\n             * @sample {highstock} stock/rangeselector/input-format/\n             *         Milliseconds in the range selector\n             *\n             */\n            inputEditDateFormat: '%Y-%m-%d',\n            /**\n             * Enable or disable the date input boxes.\n             */\n            inputEnabled: true,\n            /**\n             * Positioning for the input boxes. Allowed properties are `align`,\n             *  `x` and `y`.\n             *\n             * @since 1.2.4\n             */\n            inputPosition: {\n                /**\n                 * The alignment of the input box. Allowed properties are `left`,\n                 * `center`, `right`.\n                 *\n                 * @sample {highstock} stock/rangeselector/input-button-position/\n                 *         Alignment\n                 *\n                 * @type  {Highcharts.AlignValue}\n                 * @since 6.0.0\n                 */\n                align: 'right',\n                /**\n                 * X offset of the input row.\n                 */\n                x: 0,\n                /**\n                 * Y offset of the input row.\n                 */\n                y: 0\n            },\n            /**\n             * The space in pixels between the labels and the date input boxes in\n             * the range selector.\n             *\n             * @since 9.0.0\n             */\n            inputSpacing: 5,\n            /**\n             * The index of the button to appear pre-selected. If the selected range\n             * exceeds the total data range and the 'all' option is available,\n             * the 'all' option, showing the full range, is automatically selected.\n             *\n             * @type      {number}\n             */\n            selected: void 0,\n            /**\n             * Positioning for the button row.\n             *\n             * @since 1.2.4\n             */\n            buttonPosition: {\n                /**\n                 * The alignment of the input box. Allowed properties are `left`,\n                 * `center`, `right`.\n                 *\n                 * @sample {highstock} stock/rangeselector/input-button-position/\n                 *         Alignment\n                 *\n                 * @type  {Highcharts.AlignValue}\n                 * @since 6.0.0\n                 */\n                align: 'left',\n                /**\n                 * X offset of the button row.\n                 */\n                x: 0,\n                /**\n                 * Y offset of the button row.\n                 */\n                y: 0\n            },\n            /**\n             * CSS for the HTML inputs in the range selector.\n             *\n             * In styled mode, the inputs are styled by the\n             * `.highcharts-range-input text` rule in SVG mode, and\n             * `input.highcharts-range-selector` when active.\n             *\n             * @sample {highstock} stock/rangeselector/styling/\n             *         Styling the buttons and inputs\n             *\n             * @type      {Highcharts.CSSObject}\n             * @apioption rangeSelector.inputStyle\n             */\n            inputStyle: {\n                /** @ignore */\n                color: \"#334eff\" /* Palette.highlightColor80 */,\n                /** @ignore */\n                cursor: 'pointer',\n                /** @ignore */\n                fontSize: '0.8em'\n            },\n            /**\n             * CSS styles for the labels - the Zoom, From and To texts.\n             *\n             * In styled mode, the labels are styled by the\n             * `.highcharts-range-label` class.\n             *\n             * @sample {highstock} stock/rangeselector/styling/\n             *         Styling the buttons and inputs\n             *\n             * @type {Highcharts.CSSObject}\n             */\n            labelStyle: {\n                /** @ignore */\n                color: \"#666666\" /* Palette.neutralColor60 */,\n                /** @ignore */\n                fontSize: '0.8em'\n            }\n        };\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var RangeSelectorDefaults = {\n            lang: lang,\n            rangeSelector: rangeSelector\n        };\n\n        return RangeSelectorDefaults;\n    });\n    _registerModule(_modules, 'Stock/RangeSelector/RangeSelectorComposition.js', [_modules['Core/Defaults.js'], _modules['Core/Globals.js'], _modules['Stock/RangeSelector/RangeSelectorDefaults.js'], _modules['Core/Utilities.js']], function (D, H, RangeSelectorDefaults, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var defaultOptions = D.defaultOptions;\n        var composed = H.composed;\n        var addEvent = U.addEvent, defined = U.defined, extend = U.extend, find = U.find, isNumber = U.isNumber, merge = U.merge, pick = U.pick, pushUnique = U.pushUnique;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        var chartDestroyEvents = [];\n        /* *\n         *\n         *  Variables\n         *\n         * */\n        var RangeSelectorConstructor;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Get the axis min value based on the range option and the current max. For\n         * stock charts this is extended via the {@link RangeSelector} so that if the\n         * selected range is a multiple of months or years, it is compensated for\n         * various month lengths.\n         *\n         * @private\n         * @function Highcharts.Axis#minFromRange\n         * @return {number|undefined}\n         *         The new minimum value.\n         */\n        function axisMinFromRange() {\n            var rangeOptions = this.range, type = rangeOptions.type, max = this.max, time = this.chart.time, \n            // Get the true range from a start date\n            getTrueRange = function (base, count) {\n                var timeName = type === 'year' ?\n                    'FullYear' : 'Month';\n                var date = new time.Date(base);\n                var basePeriod = time.get(timeName, date);\n                time.set(timeName, date, basePeriod + count);\n                if (basePeriod === time.get(timeName, date)) {\n                    time.set('Date', date, 0); // #6537\n                }\n                return date.getTime() - base;\n            };\n            var min, range;\n            if (isNumber(rangeOptions)) {\n                min = max - rangeOptions;\n                range = rangeOptions;\n            }\n            else if (rangeOptions) {\n                min = max + getTrueRange(max, -(rangeOptions.count || 1));\n                // Let the fixedRange reflect initial settings (#5930)\n                if (this.chart) {\n                    this.chart.setFixedRange(max - min);\n                }\n            }\n            var dataMin = pick(this.dataMin, Number.MIN_VALUE);\n            if (!isNumber(min)) {\n                min = dataMin;\n            }\n            if (min <= dataMin) {\n                min = dataMin;\n                if (typeof range === 'undefined') { // #4501\n                    range = getTrueRange(min, rangeOptions.count);\n                }\n                this.newMax = Math.min(min + range, pick(this.dataMax, Number.MAX_VALUE));\n            }\n            if (!isNumber(max)) {\n                min = void 0;\n            }\n            else if (!isNumber(rangeOptions) &&\n                rangeOptions &&\n                rangeOptions._offsetMin) {\n                min += rangeOptions._offsetMin;\n            }\n            return min;\n        }\n        /**\n         * @private\n         */\n        function compose(AxisClass, ChartClass, RangeSelectorClass) {\n            RangeSelectorConstructor = RangeSelectorClass;\n            if (pushUnique(composed, 'RangeSelector')) {\n                var chartProto = ChartClass.prototype;\n                AxisClass.prototype.minFromRange = axisMinFromRange;\n                addEvent(ChartClass, 'afterGetContainer', onChartAfterGetContainer);\n                addEvent(ChartClass, 'beforeRender', onChartBeforeRender);\n                addEvent(ChartClass, 'destroy', onChartDestroy);\n                addEvent(ChartClass, 'getMargins', onChartGetMargins);\n                addEvent(ChartClass, 'render', onChartRender);\n                addEvent(ChartClass, 'update', onChartUpdate);\n                chartProto.callbacks.push(onChartCallback);\n                extend(defaultOptions, { rangeSelector: RangeSelectorDefaults.rangeSelector });\n                extend(defaultOptions.lang, RangeSelectorDefaults.lang);\n            }\n        }\n        /**\n         * Initialize rangeselector for stock charts\n         * @private\n         */\n        function onChartAfterGetContainer() {\n            if (this.options.rangeSelector &&\n                this.options.rangeSelector.enabled) {\n                this.rangeSelector = new RangeSelectorConstructor(this);\n            }\n        }\n        /**\n         * @private\n         */\n        function onChartBeforeRender() {\n            var chart = this, axes = chart.axes, rangeSelector = chart.rangeSelector;\n            if (rangeSelector) {\n                if (isNumber(rangeSelector.deferredYTDClick)) {\n                    rangeSelector.clickButton(rangeSelector.deferredYTDClick);\n                    delete rangeSelector.deferredYTDClick;\n                }\n                axes.forEach(function (axis) {\n                    axis.updateNames();\n                    axis.setScale();\n                });\n                chart.getAxisMargins();\n                rangeSelector.render();\n                var verticalAlign = rangeSelector.options.verticalAlign;\n                if (!rangeSelector.options.floating) {\n                    if (verticalAlign === 'bottom') {\n                        this.extraBottomMargin = true;\n                    }\n                    else if (verticalAlign !== 'middle') {\n                        this.extraTopMargin = true;\n                    }\n                }\n            }\n        }\n        /**\n         * @private\n         */\n        function onChartCallback(chart) {\n            var extremes, legend, alignTo, verticalAlign;\n            var rangeSelector = chart.rangeSelector, redraw = function () {\n                if (rangeSelector) {\n                    extremes = chart.xAxis[0].getExtremes();\n                    legend = chart.legend;\n                    verticalAlign = (rangeSelector &&\n                        rangeSelector.options.verticalAlign);\n                    if (isNumber(extremes.min)) {\n                        rangeSelector.render(extremes.min, extremes.max);\n                    }\n                    // Re-align the legend so that it's below the rangeselector\n                    if (legend.display &&\n                        verticalAlign === 'top' &&\n                        verticalAlign === legend.options.verticalAlign) {\n                        // Create a new alignment box for the legend.\n                        alignTo = merge(chart.spacingBox);\n                        if (legend.options.layout === 'vertical') {\n                            alignTo.y = chart.plotTop;\n                        }\n                        else {\n                            alignTo.y += rangeSelector.getHeight();\n                        }\n                        legend.group.placed = false; // Don't animate the alignment.\n                        legend.align(alignTo);\n                    }\n                }\n            };\n            if (rangeSelector) {\n                var events = find(chartDestroyEvents, function (e) { return e[0] === chart; });\n                if (!events) {\n                    chartDestroyEvents.push([chart, [\n                            // redraw the scroller on setExtremes\n                            addEvent(chart.xAxis[0], 'afterSetExtremes', function (e) {\n                                if (rangeSelector) {\n                                    rangeSelector.render(e.min, e.max);\n                                }\n                            }),\n                            // redraw the scroller chart resize\n                            addEvent(chart, 'redraw', redraw)\n                        ]]);\n                }\n                // do it now\n                redraw();\n            }\n        }\n        /**\n         * Remove resize/afterSetExtremes at chart destroy.\n         * @private\n         */\n        function onChartDestroy() {\n            for (var i = 0, iEnd = chartDestroyEvents.length; i < iEnd; ++i) {\n                var events = chartDestroyEvents[i];\n                if (events[0] === this) {\n                    events[1].forEach(function (unbind) { return unbind(); });\n                    chartDestroyEvents.splice(i, 1);\n                    return;\n                }\n            }\n        }\n        function onChartGetMargins() {\n            var rangeSelector = this.rangeSelector;\n            if (rangeSelector) {\n                var rangeSelectorHeight = rangeSelector.getHeight();\n                if (this.extraTopMargin) {\n                    this.plotTop += rangeSelectorHeight;\n                }\n                if (this.extraBottomMargin) {\n                    this.marginBottom += rangeSelectorHeight;\n                }\n            }\n        }\n        /**\n         * @private\n         */\n        function onChartRender() {\n            var chart = this, rangeSelector = chart.rangeSelector;\n            if (rangeSelector && !rangeSelector.options.floating) {\n                rangeSelector.render();\n                var verticalAlign = rangeSelector.options.verticalAlign;\n                if (verticalAlign === 'bottom') {\n                    this.extraBottomMargin = true;\n                }\n                else if (verticalAlign !== 'middle') {\n                    this.extraTopMargin = true;\n                }\n            }\n        }\n        /**\n         * @private\n         */\n        function onChartUpdate(e) {\n            var chart = this, options = e.options, optionsRangeSelector = options.rangeSelector, extraBottomMarginWas = this.extraBottomMargin, extraTopMarginWas = this.extraTopMargin;\n            var rangeSelector = chart.rangeSelector;\n            if (optionsRangeSelector &&\n                optionsRangeSelector.enabled &&\n                !defined(rangeSelector) &&\n                this.options.rangeSelector) {\n                this.options.rangeSelector.enabled = true;\n                this.rangeSelector = rangeSelector = new RangeSelectorConstructor(this);\n            }\n            this.extraBottomMargin = false;\n            this.extraTopMargin = false;\n            if (rangeSelector) {\n                onChartCallback(this);\n                var verticalAlign = (optionsRangeSelector &&\n                    optionsRangeSelector.verticalAlign) || (rangeSelector.options && rangeSelector.options.verticalAlign);\n                if (!rangeSelector.options.floating) {\n                    if (verticalAlign === 'bottom') {\n                        this.extraBottomMargin = true;\n                    }\n                    else if (verticalAlign !== 'middle') {\n                        this.extraTopMargin = true;\n                    }\n                }\n                if (this.extraBottomMargin !== extraBottomMarginWas ||\n                    this.extraTopMargin !== extraTopMarginWas) {\n                    this.isDirtyBox = true;\n                }\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var RangeSelectorComposition = {\n            compose: compose\n        };\n\n        return RangeSelectorComposition;\n    });\n    _registerModule(_modules, 'Stock/RangeSelector/RangeSelector.js', [_modules['Core/Axis/Axis.js'], _modules['Core/Defaults.js'], _modules['Core/Globals.js'], _modules['Stock/RangeSelector/RangeSelectorComposition.js'], _modules['Core/Renderer/SVG/SVGElement.js'], _modules['Core/Utilities.js']], function (Axis, D, H, RangeSelectorComposition, SVGElement, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var defaultOptions = D.defaultOptions;\n        var addEvent = U.addEvent, createElement = U.createElement, css = U.css, defined = U.defined, destroyObjectProperties = U.destroyObjectProperties, discardElement = U.discardElement, extend = U.extend, fireEvent = U.fireEvent, isNumber = U.isNumber, merge = U.merge, objectEach = U.objectEach, pad = U.pad, pick = U.pick, pInt = U.pInt, splat = U.splat;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Get the preferred input type based on a date format string.\n         *\n         * @private\n         * @function preferredInputType\n         */\n        function preferredInputType(format) {\n            var ms = format.indexOf('%L') !== -1;\n            if (ms) {\n                return 'text';\n            }\n            var date = ['a', 'A', 'd', 'e', 'w', 'b', 'B', 'm', 'o', 'y', 'Y']\n                .some(function (char) { return format.indexOf('%' + char) !== -1; });\n            var time = ['H', 'k', 'I', 'l', 'M', 'S']\n                .some(function (char) { return format.indexOf('%' + char) !== -1; });\n            if (date && time) {\n                return 'datetime-local';\n            }\n            if (date) {\n                return 'date';\n            }\n            if (time) {\n                return 'time';\n            }\n            return 'text';\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The range selector.\n         *\n         * @private\n         * @class\n         * @name Highcharts.RangeSelector\n         * @param {Highcharts.Chart} chart\n         */\n        var RangeSelector = /** @class */ (function () {\n            /* *\n             *\n             *  Constructor\n             *\n             * */\n            function RangeSelector(chart) {\n                this.buttonOptions = RangeSelector.prototype.defaultButtons;\n                this.initialButtonGroupWidth = 0;\n                this.chart = chart;\n                this.init(chart);\n            }\n            /* *\n             *\n             *  Static Functions\n             *\n             * */\n            /**\n             * @private\n             */\n            RangeSelector.compose = function (AxisClass, ChartClass) {\n                RangeSelectorComposition.compose(AxisClass, ChartClass, RangeSelector);\n            };\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * The method to run when one of the buttons in the range selectors is\n             * clicked\n             *\n             * @private\n             * @function Highcharts.RangeSelector#clickButton\n             * @param {number} i\n             *        The index of the button\n             * @param {boolean} [redraw]\n             */\n            RangeSelector.prototype.clickButton = function (i, redraw) {\n                var rangeSelector = this, chart = rangeSelector.chart, rangeOptions = rangeSelector.buttonOptions[i], baseAxis = chart.xAxis[0], unionExtremes = (chart.scroller && chart.scroller.getUnionExtremes()) || baseAxis || {}, type = rangeOptions.type, dataGrouping = rangeOptions.dataGrouping;\n                var dataMin = unionExtremes.dataMin, dataMax = unionExtremes.dataMax, newMin, newMax = baseAxis && Math.round(Math.min(baseAxis.max, pick(dataMax, baseAxis.max))), // #1568\n                baseXAxisOptions, range = rangeOptions._range, rangeMin, minSetting, rangeSetting, ctx, ytdExtremes, addOffsetMin = true;\n                // chart has no data, base series is removed\n                if (dataMin === null || dataMax === null) {\n                    return;\n                }\n                rangeSelector.setSelected(i);\n                // Apply dataGrouping associated to button\n                if (dataGrouping) {\n                    this.forcedDataGrouping = true;\n                    Axis.prototype.setDataGrouping.call(baseAxis || { chart: this.chart }, dataGrouping, false);\n                    this.frozenStates = rangeOptions.preserveDataGrouping;\n                }\n                // Apply range\n                if (type === 'month' || type === 'year') {\n                    if (!baseAxis) {\n                        // This is set to the user options and picked up later when the\n                        // axis is instantiated so that we know the min and max.\n                        range = rangeOptions;\n                    }\n                    else {\n                        ctx = {\n                            range: rangeOptions,\n                            max: newMax,\n                            chart: chart,\n                            dataMin: dataMin,\n                            dataMax: dataMax\n                        };\n                        newMin = baseAxis.minFromRange.call(ctx);\n                        if (isNumber(ctx.newMax)) {\n                            newMax = ctx.newMax;\n                        }\n                        // #15799: offsetMin is added in minFromRange so that it works\n                        // with pre-selected buttons as well\n                        addOffsetMin = false;\n                    }\n                    // Fixed times like minutes, hours, days\n                }\n                else if (range) {\n                    newMin = Math.max(newMax - range, dataMin);\n                    newMax = Math.min(newMin + range, dataMax);\n                    addOffsetMin = false;\n                }\n                else if (type === 'ytd') {\n                    // On user clicks on the buttons, or a delayed action running from\n                    // the beforeRender event (below), the baseAxis is defined.\n                    if (baseAxis) {\n                        // When \"ytd\" is the pre-selected button for the initial view,\n                        // its calculation is delayed and rerun in the beforeRender\n                        // event (below). When the series are initialized, but before\n                        // the chart is rendered, we have access to the xData array\n                        // (#942).\n                        if (typeof dataMax === 'undefined' ||\n                            typeof dataMin === 'undefined') {\n                            dataMin = Number.MAX_VALUE;\n                            dataMax = Number.MIN_VALUE;\n                            chart.series.forEach(function (series) {\n                                // reassign it to the last item\n                                var xData = series.xData;\n                                if (xData) {\n                                    dataMin = Math.min(xData[0], dataMin);\n                                    dataMax = Math.max(xData[xData.length - 1], dataMax);\n                                }\n                            });\n                            redraw = false;\n                        }\n                        ytdExtremes = rangeSelector.getYTDExtremes(dataMax, dataMin, chart.time.useUTC);\n                        newMin = rangeMin = ytdExtremes.min;\n                        newMax = ytdExtremes.max;\n                        // \"ytd\" is pre-selected. We don't yet have access to processed\n                        // point and extremes data (things like pointStart and pointInterval\n                        // are missing), so we delay the process (#942)\n                    }\n                    else {\n                        rangeSelector.deferredYTDClick = i;\n                        return;\n                    }\n                }\n                else if (type === 'all' && baseAxis) {\n                    // If the navigator exist and the axis range is declared reset that\n                    // range and from now on only use the range set by a user, #14742.\n                    if (chart.navigator && chart.navigator.baseSeries[0]) {\n                        chart.navigator.baseSeries[0].xAxis.options.range = void 0;\n                    }\n                    newMin = dataMin;\n                    newMax = dataMax;\n                }\n                if (addOffsetMin && rangeOptions._offsetMin && defined(newMin)) {\n                    newMin += rangeOptions._offsetMin;\n                }\n                if (rangeOptions._offsetMax && defined(newMax)) {\n                    newMax += rangeOptions._offsetMax;\n                }\n                if (this.dropdown) {\n                    this.dropdown.selectedIndex = i + 1;\n                }\n                // Update the chart\n                if (!baseAxis) {\n                    // Axis not yet instantiated. Temporarily set min and range\n                    // options and remove them on chart load (#4317).\n                    baseXAxisOptions = splat(chart.options.xAxis)[0];\n                    rangeSetting = baseXAxisOptions.range;\n                    baseXAxisOptions.range = range;\n                    minSetting = baseXAxisOptions.min;\n                    baseXAxisOptions.min = rangeMin;\n                    addEvent(chart, 'load', function resetMinAndRange() {\n                        chart.setFixedRange(rangeOptions._range);\n                        baseXAxisOptions.range = rangeSetting;\n                        baseXAxisOptions.min = minSetting;\n                    });\n                }\n                else {\n                    // Existing axis object. Set extremes after render time.\n                    baseAxis.setExtremes(newMin, newMax, pick(redraw, true), void 0, // auto animation\n                    {\n                        trigger: 'rangeSelectorButton',\n                        rangeSelectorButton: rangeOptions\n                    });\n                    chart.setFixedRange(rangeOptions._range);\n                }\n                fireEvent(this, 'afterBtnClick');\n            };\n            /**\n             * Set the selected option. This method only sets the internal flag, it\n             * doesn't update the buttons or the actual zoomed range.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#setSelected\n             * @param {number} [selected]\n             */\n            RangeSelector.prototype.setSelected = function (selected) {\n                this.selected = this.options.selected = selected;\n            };\n            /**\n             * Initialize the range selector\n             *\n             * @private\n             * @function Highcharts.RangeSelector#init\n             * @param {Highcharts.Chart} chart\n             */\n            RangeSelector.prototype.init = function (chart) {\n                var rangeSelector = this, options = chart.options.rangeSelector, buttonOptions = (options.buttons || rangeSelector.defaultButtons.slice()), selectedOption = options.selected, blurInputs = function () {\n                    var minInput = rangeSelector.minInput, maxInput = rangeSelector.maxInput;\n                    // #3274 in some case blur is not defined\n                    if (minInput && !!minInput.blur) {\n                        fireEvent(minInput, 'blur');\n                    }\n                    if (maxInput && !!maxInput.blur) {\n                        fireEvent(maxInput, 'blur');\n                    }\n                };\n                rangeSelector.chart = chart;\n                rangeSelector.options = options;\n                rangeSelector.buttons = [];\n                rangeSelector.buttonOptions = buttonOptions;\n                this.eventsToUnbind = [];\n                this.eventsToUnbind.push(addEvent(chart.container, 'mousedown', blurInputs));\n                this.eventsToUnbind.push(addEvent(chart, 'resize', blurInputs));\n                // Extend the buttonOptions with actual range\n                buttonOptions.forEach(rangeSelector.computeButtonRange);\n                // Zoomed range based on a pre-selected button index\n                if (typeof selectedOption !== 'undefined' &&\n                    buttonOptions[selectedOption]) {\n                    this.clickButton(selectedOption, false);\n                }\n                this.eventsToUnbind.push(addEvent(chart, 'load', function () {\n                    // If a data grouping is applied to the current button, release it\n                    // when extremes change\n                    if (chart.xAxis && chart.xAxis[0]) {\n                        addEvent(chart.xAxis[0], 'setExtremes', function (e) {\n                            if (isNumber(this.max) &&\n                                isNumber(this.min) &&\n                                this.max - this.min !== chart.fixedRange &&\n                                e.trigger !== 'rangeSelectorButton' &&\n                                e.trigger !== 'updatedData' &&\n                                rangeSelector.forcedDataGrouping &&\n                                !rangeSelector.frozenStates) {\n                                this.setDataGrouping(false, false);\n                            }\n                        });\n                    }\n                }));\n            };\n            /**\n             * Dynamically update the range selector buttons after a new range has been\n             * set\n             *\n             * @private\n             * @function Highcharts.RangeSelector#updateButtonStates\n             */\n            RangeSelector.prototype.updateButtonStates = function () {\n                var rangeSelector = this, chart = this.chart, dropdown = this.dropdown, baseAxis = chart.xAxis[0], actualRange = Math.round(baseAxis.max - baseAxis.min), hasNoData = !baseAxis.hasVisibleSeries, day = 24 * 36e5, // A single day in milliseconds\n                unionExtremes = (chart.scroller &&\n                    chart.scroller.getUnionExtremes()) || baseAxis, dataMin = unionExtremes.dataMin, dataMax = unionExtremes.dataMax, ytdExtremes = rangeSelector.getYTDExtremes(dataMax, dataMin, chart.time.useUTC), ytdMin = ytdExtremes.min, ytdMax = ytdExtremes.max, selected = rangeSelector.selected, allButtonsEnabled = rangeSelector.options.allButtonsEnabled, buttons = rangeSelector.buttons;\n                var selectedExists = isNumber(selected), isSelectedTooGreat = false;\n                rangeSelector.buttonOptions.forEach(function (rangeOptions, i) {\n                    var _a;\n                    var range = rangeOptions._range, type = rangeOptions.type, count = rangeOptions.count || 1, button = buttons[i], offsetRange = rangeOptions._offsetMax -\n                        rangeOptions._offsetMin, isSelected = i === selected, \n                    // Disable buttons where the range exceeds what is allowed in\n                    // the current view\n                    isTooGreatRange = range >\n                        dataMax - dataMin, \n                    // Disable buttons where the range is smaller than the minimum\n                    // range\n                    isTooSmallRange = range < baseAxis.minRange;\n                    var state = 0, \n                    // Do not select the YTD button if not explicitly told so\n                    isYTDButNotSelected = false, \n                    // Disable the All button if we're already showing all\n                    isAllButAlreadyShowingAll = false, isSameRange = range === actualRange;\n                    if (isSelected && isTooGreatRange) {\n                        isSelectedTooGreat = true;\n                    }\n                    if (baseAxis.isOrdinal &&\n                        ((_a = baseAxis.ordinal) === null || _a === void 0 ? void 0 : _a.positions) &&\n                        range &&\n                        actualRange < range) {\n                        // Handle ordinal ranges\n                        var positions = baseAxis.ordinal.positions;\n                        if (positions[positions.length - 1] - positions[0] > range) {\n                            isSameRange = true;\n                        }\n                    }\n                    else if (\n                    // Months and years have variable range so we check the extremes\n                    (type === 'month' || type === 'year') &&\n                        (actualRange + 36e5 >=\n                            { month: 28, year: 365 }[type] * day * count - offsetRange) &&\n                        (actualRange - 36e5 <=\n                            { month: 31, year: 366 }[type] * day * count + offsetRange)) {\n                        isSameRange = true;\n                    }\n                    else if (type === 'ytd') {\n                        isSameRange = (ytdMax - ytdMin + offsetRange) === actualRange;\n                        isYTDButNotSelected = !isSelected;\n                    }\n                    else if (type === 'all') {\n                        isSameRange = (baseAxis.max - baseAxis.min >=\n                            dataMax - dataMin);\n                        isAllButAlreadyShowingAll = (!isSelected &&\n                            selectedExists &&\n                            isSameRange);\n                    }\n                    // The new zoom area happens to match the range for a button - mark\n                    // it selected. This happens when scrolling across an ordinal gap.\n                    // It can be seen in the intraday demos when selecting 1h and scroll\n                    // across the night gap.\n                    var disable = (!allButtonsEnabled &&\n                        !(isSelectedTooGreat && type === 'all') &&\n                        (isTooGreatRange ||\n                            isTooSmallRange ||\n                            isAllButAlreadyShowingAll ||\n                            hasNoData));\n                    var select = ((isSelectedTooGreat && type === 'all') ||\n                        (isSelected && isSameRange) ||\n                        (isSameRange && !selectedExists && !isYTDButNotSelected) ||\n                        (isSelected && rangeSelector.frozenStates));\n                    if (disable) {\n                        state = 3;\n                    }\n                    else if (select) {\n                        selectedExists = true; // Only one button can be selected\n                        state = 2;\n                    }\n                    // If state has changed, update the button\n                    if (button.state !== state) {\n                        button.setState(state);\n                        if (dropdown) {\n                            dropdown.options[i + 1].disabled = disable;\n                            if (state === 2) {\n                                dropdown.selectedIndex = i + 1;\n                            }\n                        }\n                        // Reset (#9209)\n                        if (state === 0 && selected === i) {\n                            rangeSelector.setSelected();\n                        }\n                        else if ((state === 2 && !defined(selected)) ||\n                            isSelectedTooGreat) {\n                            rangeSelector.setSelected(i);\n                        }\n                    }\n                });\n            };\n            /**\n             * Compute and cache the range for an individual button\n             *\n             * @private\n             * @function Highcharts.RangeSelector#computeButtonRange\n             * @param {Highcharts.RangeSelectorButtonsOptions} rangeOptions\n             */\n            RangeSelector.prototype.computeButtonRange = function (rangeOptions) {\n                var type = rangeOptions.type, count = rangeOptions.count || 1, \n                // these time intervals have a fixed number of milliseconds, as\n                // opposed to month, ytd and year\n                fixedTimes = {\n                    millisecond: 1,\n                    second: 1000,\n                    minute: 60 * 1000,\n                    hour: 3600 * 1000,\n                    day: 24 * 3600 * 1000,\n                    week: 7 * 24 * 3600 * 1000\n                };\n                // Store the range on the button object\n                if (fixedTimes[type]) {\n                    rangeOptions._range = fixedTimes[type] * count;\n                }\n                else if (type === 'month' || type === 'year') {\n                    rangeOptions._range = {\n                        month: 30,\n                        year: 365\n                    }[type] * 24 * 36e5 * count;\n                }\n                rangeOptions._offsetMin = pick(rangeOptions.offsetMin, 0);\n                rangeOptions._offsetMax = pick(rangeOptions.offsetMax, 0);\n                rangeOptions._range +=\n                    rangeOptions._offsetMax - rangeOptions._offsetMin;\n            };\n            /**\n             * Get the unix timestamp of a HTML input for the dates\n             *\n             * @private\n             * @function Highcharts.RangeSelector#getInputValue\n             */\n            RangeSelector.prototype.getInputValue = function (name) {\n                var input = name === 'min' ? this.minInput : this.maxInput;\n                var options = this.chart.options\n                    .rangeSelector;\n                var time = this.chart.time;\n                if (input) {\n                    return ((input.type === 'text' && options.inputDateParser) ||\n                        this.defaultInputDateParser)(input.value, time.useUTC, time);\n                }\n                return 0;\n            };\n            /**\n             * Set the internal and displayed value of a HTML input for the dates\n             *\n             * @private\n             * @function Highcharts.RangeSelector#setInputValue\n             */\n            RangeSelector.prototype.setInputValue = function (name, inputTime) {\n                var options = this.options, time = this.chart.time, input = name === 'min' ? this.minInput : this.maxInput, dateBox = name === 'min' ? this.minDateBox : this.maxDateBox;\n                if (input) {\n                    var hcTimeAttr = input.getAttribute('data-hc-time');\n                    var updatedTime = defined(hcTimeAttr) ? Number(hcTimeAttr) : void 0;\n                    if (defined(inputTime)) {\n                        var previousTime = updatedTime;\n                        if (defined(previousTime)) {\n                            input.setAttribute('data-hc-time-previous', previousTime);\n                        }\n                        input.setAttribute('data-hc-time', inputTime);\n                        updatedTime = inputTime;\n                    }\n                    input.value = time.dateFormat((this.inputTypeFormats[input.type] ||\n                        options.inputEditDateFormat), updatedTime);\n                    if (dateBox) {\n                        dateBox.attr({\n                            text: time.dateFormat(options.inputDateFormat, updatedTime)\n                        });\n                    }\n                }\n            };\n            /**\n             * Set the min and max value of a HTML input for the dates\n             *\n             * @private\n             * @function Highcharts.RangeSelector#setInputExtremes\n             */\n            RangeSelector.prototype.setInputExtremes = function (name, min, max) {\n                var input = name === 'min' ? this.minInput : this.maxInput;\n                if (input) {\n                    var format = this.inputTypeFormats[input.type];\n                    var time = this.chart.time;\n                    if (format) {\n                        var newMin = time.dateFormat(format, min);\n                        if (input.min !== newMin) {\n                            input.min = newMin;\n                        }\n                        var newMax = time.dateFormat(format, max);\n                        if (input.max !== newMax) {\n                            input.max = newMax;\n                        }\n                    }\n                }\n            };\n            /**\n             * @private\n             * @function Highcharts.RangeSelector#showInput\n             * @param {string} name\n             */\n            RangeSelector.prototype.showInput = function (name) {\n                var dateBox = name === 'min' ? this.minDateBox : this.maxDateBox, input = name === 'min' ? this.minInput : this.maxInput;\n                if (input && dateBox && this.inputGroup) {\n                    var isTextInput = input.type === 'text', _a = this.inputGroup, _b = _a.translateX, translateX = _b === void 0 ? 0 : _b, _c = _a.translateY, translateY = _c === void 0 ? 0 : _c, _d = dateBox.x, x = _d === void 0 ? 0 : _d, _e = dateBox.width, width = _e === void 0 ? 0 : _e, _f = dateBox.height, height = _f === void 0 ? 0 : _f, inputBoxWidth = this.options.inputBoxWidth;\n                    css(input, {\n                        width: isTextInput ?\n                            ((width + (inputBoxWidth ? -2 : 20)) + 'px') :\n                            'auto',\n                        height: (height - 2) + 'px',\n                        border: '2px solid silver'\n                    });\n                    if (isTextInput && inputBoxWidth) {\n                        css(input, {\n                            left: (translateX + x) + 'px',\n                            top: translateY + 'px'\n                        });\n                        // Inputs of types date, time or datetime-local should be centered\n                        // on top of the dateBox\n                    }\n                    else {\n                        css(input, {\n                            left: Math.min(Math.round(x +\n                                translateX -\n                                (input.offsetWidth - width) / 2), this.chart.chartWidth - input.offsetWidth) + 'px',\n                            top: (translateY - (input.offsetHeight - height) / 2) + 'px'\n                        });\n                    }\n                }\n            };\n            /**\n             * @private\n             * @function Highcharts.RangeSelector#hideInput\n             * @param {string} name\n             */\n            RangeSelector.prototype.hideInput = function (name) {\n                var input = name === 'min' ? this.minInput : this.maxInput;\n                if (input) {\n                    css(input, {\n                        top: '-9999em',\n                        border: 0,\n                        width: '1px',\n                        height: '1px'\n                    });\n                }\n            };\n            /**\n             * @private\n             * @function Highcharts.RangeSelector#defaultInputDateParser\n             */\n            RangeSelector.prototype.defaultInputDateParser = function (inputDate, useUTC, time) {\n                var hasTimezone = function (str) {\n                    return str.length > 6 &&\n                        (str.lastIndexOf('-') === str.length - 6 ||\n                            str.lastIndexOf('+') === str.length - 6);\n                };\n                var input = inputDate.split('/').join('-').split(' ').join('T');\n                if (input.indexOf('T') === -1) {\n                    input += 'T00:00';\n                }\n                if (useUTC) {\n                    input += 'Z';\n                }\n                else if (H.isSafari && !hasTimezone(input)) {\n                    var offset = new Date(input).getTimezoneOffset() / 60;\n                    input += offset <= 0 ? \"+\".concat(pad(-offset), \":00\") : \"-\".concat(pad(offset), \":00\");\n                }\n                var date = Date.parse(input);\n                // If the value isn't parsed directly to a value by the\n                // browser's Date.parse method, try\n                // parsing it a different way\n                if (!isNumber(date)) {\n                    var parts = inputDate.split('-');\n                    date = Date.UTC(pInt(parts[0]), pInt(parts[1]) - 1, pInt(parts[2]));\n                }\n                if (time && useUTC && isNumber(date)) {\n                    date += time.getTimezoneOffset(date);\n                }\n                return date;\n            };\n            /**\n             * Draw either the 'from' or the 'to' HTML input box of the range selector\n             *\n             * @private\n             * @function Highcharts.RangeSelector#drawInput\n             */\n            RangeSelector.prototype.drawInput = function (name) {\n                var _a = this, chart = _a.chart, div = _a.div, inputGroup = _a.inputGroup;\n                var rangeSelector = this, chartStyle = chart.renderer.style || {}, renderer = chart.renderer, options = chart.options.rangeSelector, lang = defaultOptions.lang, isMin = name === 'min';\n                /**\n                 * @private\n                 */\n                function updateExtremes() {\n                    var maxInput = rangeSelector.maxInput, minInput = rangeSelector.minInput, chartAxis = chart.xAxis[0], unionExtremes = (chart.scroller && chart.scroller.getUnionExtremes()) || chartAxis, dataMin = unionExtremes.dataMin, dataMax = unionExtremes.dataMax;\n                    var value = rangeSelector.getInputValue(name);\n                    if (value !== Number(input.getAttribute('data-hc-time-previous')) &&\n                        isNumber(value)) {\n                        input.setAttribute('data-hc-time-previous', value);\n                        // Validate the extremes. If it goes beyond the data min or\n                        // max, use the actual data extreme (#2438).\n                        if (isMin && maxInput && isNumber(dataMin)) {\n                            if (value > Number(maxInput.getAttribute('data-hc-time'))) {\n                                value = void 0;\n                            }\n                            else if (value < dataMin) {\n                                value = dataMin;\n                            }\n                        }\n                        else if (minInput && isNumber(dataMax)) {\n                            if (value < Number(minInput.getAttribute('data-hc-time'))) {\n                                value = void 0;\n                            }\n                            else if (value > dataMax) {\n                                value = dataMax;\n                            }\n                        }\n                        // Set the extremes\n                        if (typeof value !== 'undefined') { // @todo typeof undefined\n                            chartAxis.setExtremes(isMin ? value : chartAxis.min, isMin ? chartAxis.max : value, void 0, void 0, { trigger: 'rangeSelectorInput' });\n                        }\n                    }\n                }\n                // Create the text label\n                var text = lang[isMin ? 'rangeSelectorFrom' : 'rangeSelectorTo'] || '';\n                var label = renderer\n                    .label(text, 0)\n                    .addClass('highcharts-range-label')\n                    .attr({\n                    padding: text ? 2 : 0,\n                    height: text ? options.inputBoxHeight : 0\n                })\n                    .add(inputGroup);\n                // Create an SVG label that shows updated date ranges and records click\n                // events that bring in the HTML input.\n                var dateBox = renderer\n                    .label('', 0)\n                    .addClass('highcharts-range-input')\n                    .attr({\n                    padding: 2,\n                    width: options.inputBoxWidth,\n                    height: options.inputBoxHeight,\n                    'text-align': 'center'\n                })\n                    .on('click', function () {\n                    // If it is already focused, the onfocus event doesn't fire\n                    // (#3713)\n                    rangeSelector.showInput(name);\n                    rangeSelector[name + 'Input'].focus();\n                });\n                if (!chart.styledMode) {\n                    dateBox.attr({\n                        stroke: options.inputBoxBorderColor,\n                        'stroke-width': 1\n                    });\n                }\n                dateBox.add(inputGroup);\n                // Create the HTML input element. This is rendered as 1x1 pixel then set\n                // to the right size when focused.\n                var input = createElement('input', {\n                    name: name,\n                    className: 'highcharts-range-selector'\n                }, void 0, div);\n                // #14788: Setting input.type to an unsupported type throws in IE, so\n                // we need to use setAttribute instead\n                input.setAttribute('type', preferredInputType(options.inputDateFormat || '%e %b %Y'));\n                if (!chart.styledMode) {\n                    // Styles\n                    label.css(merge(chartStyle, options.labelStyle));\n                    dateBox.css(merge({\n                        color: \"#333333\" /* Palette.neutralColor80 */\n                    }, chartStyle, options.inputStyle));\n                    css(input, extend({\n                        position: 'absolute',\n                        border: 0,\n                        boxShadow: '0 0 15px rgba(0,0,0,0.3)',\n                        width: '1px',\n                        height: '1px',\n                        padding: 0,\n                        textAlign: 'center',\n                        fontSize: chartStyle.fontSize,\n                        fontFamily: chartStyle.fontFamily,\n                        top: '-9999em' // #4798\n                    }, options.inputStyle));\n                }\n                // Blow up the input box\n                input.onfocus = function () {\n                    rangeSelector.showInput(name);\n                };\n                // Hide away the input box\n                input.onblur = function () {\n                    // update extremes only when inputs are active\n                    if (input === H.doc.activeElement) { // Only when focused\n                        // Update also when no `change` event is triggered, like when\n                        // clicking inside the SVG (#4710)\n                        updateExtremes();\n                    }\n                    // #10404 - move hide and blur outside focus\n                    rangeSelector.hideInput(name);\n                    rangeSelector.setInputValue(name);\n                    input.blur(); // #4606\n                };\n                var keyDown = false;\n                // handle changes in the input boxes\n                input.onchange = function () {\n                    // Update extremes and blur input when clicking date input calendar\n                    if (!keyDown) {\n                        updateExtremes();\n                        rangeSelector.hideInput(name);\n                        input.blur();\n                    }\n                };\n                input.onkeypress = function (event) {\n                    // IE does not fire onchange on enter\n                    if (event.keyCode === 13) {\n                        updateExtremes();\n                    }\n                };\n                input.onkeydown = function (event) {\n                    keyDown = true;\n                    // Arrow keys\n                    if (event.keyCode === 38 || event.keyCode === 40) {\n                        updateExtremes();\n                    }\n                };\n                input.onkeyup = function () {\n                    keyDown = false;\n                };\n                return { dateBox: dateBox, input: input, label: label };\n            };\n            /**\n             * Get the position of the range selector buttons and inputs. This can be\n             * overridden from outside for custom positioning.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#getPosition\n             */\n            RangeSelector.prototype.getPosition = function () {\n                var chart = this.chart, options = chart.options.rangeSelector, top = options.verticalAlign === 'top' ?\n                    chart.plotTop - chart.axisOffset[0] :\n                    0; // set offset only for verticalAlign top\n                return {\n                    buttonTop: top + options.buttonPosition.y,\n                    inputTop: top + options.inputPosition.y - 10\n                };\n            };\n            /**\n             * Get the extremes of YTD. Will choose dataMax if its value is lower than\n             * the current timestamp. Will choose dataMin if its value is higher than\n             * the timestamp for the start of current year.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#getYTDExtremes\n             * @return {*}\n             * Returns min and max for the YTD\n             */\n            RangeSelector.prototype.getYTDExtremes = function (dataMax, dataMin, useUTC) {\n                var time = this.chart.time, now = new time.Date(dataMax), year = time.get('FullYear', now), startOfYear = useUTC ?\n                    time.Date.UTC(year, 0, 1) : // eslint-disable-line new-cap\n                    +new time.Date(year, 0, 1), min = Math.max(dataMin, startOfYear), ts = now.getTime();\n                return {\n                    max: Math.min(dataMax || ts, ts),\n                    min: min\n                };\n            };\n            /**\n             * Render the range selector including the buttons and the inputs. The first\n             * time render is called, the elements are created and positioned. On\n             * subsequent calls, they are moved and updated.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#render\n             * @param {number} [min]\n             *        X axis minimum\n             * @param {number} [max]\n             *        X axis maximum\n             */\n            RangeSelector.prototype.render = function (min, max) {\n                var chart = this.chart, renderer = chart.renderer, container = chart.container, chartOptions = chart.options, options = chartOptions.rangeSelector, \n                // Place inputs above the container\n                inputsZIndex = pick(chartOptions.chart.style &&\n                    chartOptions.chart.style.zIndex, 0) + 1, inputEnabled = options.inputEnabled, rendered = this.rendered;\n                if (options.enabled === false) {\n                    return;\n                }\n                // create the elements\n                if (!rendered) {\n                    this.group = renderer.g('range-selector-group')\n                        .attr({\n                        zIndex: 7\n                    })\n                        .add();\n                    this.div = createElement('div', void 0, {\n                        position: 'relative',\n                        height: 0,\n                        zIndex: inputsZIndex\n                    });\n                    if (this.buttonOptions.length) {\n                        this.renderButtons();\n                    }\n                    // First create a wrapper outside the container in order to make\n                    // the inputs work and make export correct\n                    if (container.parentNode) {\n                        container.parentNode.insertBefore(this.div, container);\n                    }\n                    if (inputEnabled) {\n                        // Create the group to keep the inputs\n                        this.inputGroup = renderer.g('input-group').add(this.group);\n                        var minElems = this.drawInput('min');\n                        this.minDateBox = minElems.dateBox;\n                        this.minLabel = minElems.label;\n                        this.minInput = minElems.input;\n                        var maxElems = this.drawInput('max');\n                        this.maxDateBox = maxElems.dateBox;\n                        this.maxLabel = maxElems.label;\n                        this.maxInput = maxElems.input;\n                    }\n                }\n                if (inputEnabled) {\n                    // Set or reset the input values\n                    this.setInputValue('min', min);\n                    this.setInputValue('max', max);\n                    var unionExtremes = (chart.scroller && chart.scroller.getUnionExtremes()) || chart.xAxis[0] || {};\n                    if (defined(unionExtremes.dataMin) &&\n                        defined(unionExtremes.dataMax)) {\n                        var minRange = chart.xAxis[0].minRange || 0;\n                        this.setInputExtremes('min', unionExtremes.dataMin, Math.min(unionExtremes.dataMax, this.getInputValue('max')) - minRange);\n                        this.setInputExtremes('max', Math.max(unionExtremes.dataMin, this.getInputValue('min')) + minRange, unionExtremes.dataMax);\n                    }\n                    // Reflow\n                    if (this.inputGroup) {\n                        var x_1 = 0;\n                        [\n                            this.minLabel,\n                            this.minDateBox,\n                            this.maxLabel,\n                            this.maxDateBox\n                        ].forEach(function (label) {\n                            if (label) {\n                                var width = label.getBBox().width;\n                                if (width) {\n                                    label.attr({ x: x_1 });\n                                    x_1 += width + options.inputSpacing;\n                                }\n                            }\n                        });\n                    }\n                }\n                this.alignElements();\n                this.rendered = true;\n            };\n            /**\n             * Render the range buttons. This only runs the first time, later the\n             * positioning is laid out in alignElements.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#renderButtons\n             */\n            RangeSelector.prototype.renderButtons = function () {\n                var _this = this;\n                var _a = this, buttons = _a.buttons, chart = _a.chart, options = _a.options;\n                var lang = defaultOptions.lang;\n                var renderer = chart.renderer;\n                var buttonTheme = merge(options.buttonTheme);\n                var states = buttonTheme && buttonTheme.states;\n                // Prevent the button from resetting the width when the button state\n                // changes since we need more control over the width when collapsing\n                // the buttons\n                var width = buttonTheme.width || 28;\n                delete buttonTheme.width;\n                delete buttonTheme.states;\n                this.buttonGroup = renderer.g('range-selector-buttons').add(this.group);\n                var dropdown = this.dropdown = createElement('select', void 0, {\n                    position: 'absolute',\n                    width: '1px',\n                    height: '1px',\n                    padding: 0,\n                    border: 0,\n                    top: '-9999em',\n                    cursor: 'pointer',\n                    opacity: 0.0001\n                }, this.div);\n                // Prevent page zoom on iPhone\n                addEvent(dropdown, 'touchstart', function () {\n                    dropdown.style.fontSize = '16px';\n                });\n                // Forward events from select to button\n                [\n                    [H.isMS ? 'mouseover' : 'mouseenter'],\n                    [H.isMS ? 'mouseout' : 'mouseleave'],\n                    ['change', 'click']\n                ].forEach(function (_a) {\n                    var from = _a[0], to = _a[1];\n                    addEvent(dropdown, from, function () {\n                        var button = buttons[_this.currentButtonIndex()];\n                        if (button) {\n                            fireEvent(button.element, to || from);\n                        }\n                    });\n                });\n                this.zoomText = renderer\n                    .label((lang && lang.rangeSelectorZoom) || '', 0)\n                    .attr({\n                    padding: options.buttonTheme.padding,\n                    height: options.buttonTheme.height,\n                    paddingLeft: 0,\n                    paddingRight: 0\n                })\n                    .add(this.buttonGroup);\n                if (!this.chart.styledMode) {\n                    this.zoomText.css(options.labelStyle);\n                    buttonTheme['stroke-width'] = pick(buttonTheme['stroke-width'], 0);\n                }\n                createElement('option', {\n                    textContent: this.zoomText.textStr,\n                    disabled: true\n                }, void 0, dropdown);\n                this.buttonOptions.forEach(function (rangeOptions, i) {\n                    createElement('option', {\n                        textContent: rangeOptions.title || rangeOptions.text\n                    }, void 0, dropdown);\n                    buttons[i] = renderer\n                        .button(rangeOptions.text, 0, 0, function (e) {\n                        // extract events from button object and call\n                        var buttonEvents = (rangeOptions.events && rangeOptions.events.click);\n                        var callDefaultEvent;\n                        if (buttonEvents) {\n                            callDefaultEvent =\n                                buttonEvents.call(rangeOptions, e);\n                        }\n                        if (callDefaultEvent !== false) {\n                            _this.clickButton(i);\n                        }\n                        _this.isActive = true;\n                    }, buttonTheme, states && states.hover, states && states.select, states && states.disabled)\n                        .attr({\n                        'text-align': 'center',\n                        width: width\n                    })\n                        .add(_this.buttonGroup);\n                    if (rangeOptions.title) {\n                        buttons[i].attr('title', rangeOptions.title);\n                    }\n                });\n            };\n            /**\n             * Align the elements horizontally and vertically.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#alignElements\n             */\n            RangeSelector.prototype.alignElements = function () {\n                var _this = this;\n                var _a = this, buttonGroup = _a.buttonGroup, buttons = _a.buttons, chart = _a.chart, group = _a.group, inputGroup = _a.inputGroup, options = _a.options, zoomText = _a.zoomText;\n                var chartOptions = chart.options;\n                var navButtonOptions = (chartOptions.exporting &&\n                    chartOptions.exporting.enabled !== false &&\n                    chartOptions.navigation &&\n                    chartOptions.navigation.buttonOptions);\n                var buttonPosition = options.buttonPosition, inputPosition = options.inputPosition, verticalAlign = options.verticalAlign;\n                // Get the X offset required to avoid overlapping with the exporting\n                // button. This is used both by the buttonGroup and the inputGroup.\n                var getXOffsetForExportButton = function (group, position) {\n                    if (navButtonOptions &&\n                        _this.titleCollision(chart) &&\n                        verticalAlign === 'top' &&\n                        position.align === 'right' && ((position.y -\n                        group.getBBox().height - 12) <\n                        ((navButtonOptions.y || 0) +\n                            (navButtonOptions.height || 0) +\n                            chart.spacing[0]))) {\n                        return -40;\n                    }\n                    return 0;\n                };\n                var plotLeft = chart.plotLeft;\n                if (group && buttonPosition && inputPosition) {\n                    var translateX = buttonPosition.x - chart.spacing[3];\n                    if (buttonGroup) {\n                        this.positionButtons();\n                        if (!this.initialButtonGroupWidth) {\n                            var width_1 = 0;\n                            if (zoomText) {\n                                width_1 += zoomText.getBBox().width + 5;\n                            }\n                            buttons.forEach(function (button, i) {\n                                width_1 += button.width || 0;\n                                if (i !== buttons.length - 1) {\n                                    width_1 += options.buttonSpacing;\n                                }\n                            });\n                            this.initialButtonGroupWidth = width_1;\n                        }\n                        plotLeft -= chart.spacing[3];\n                        this.updateButtonStates();\n                        // Detect collision between button group and exporting\n                        var xOffsetForExportButton_1 = getXOffsetForExportButton(buttonGroup, buttonPosition);\n                        this.alignButtonGroup(xOffsetForExportButton_1);\n                        // Skip animation\n                        group.placed = buttonGroup.placed = chart.hasLoaded;\n                    }\n                    var xOffsetForExportButton = 0;\n                    if (inputGroup) {\n                        // Detect collision between the input group and exporting button\n                        xOffsetForExportButton = getXOffsetForExportButton(inputGroup, inputPosition);\n                        if (inputPosition.align === 'left') {\n                            translateX = plotLeft;\n                        }\n                        else if (inputPosition.align === 'right') {\n                            translateX = -Math.max(chart.axisOffset[1], -xOffsetForExportButton);\n                        }\n                        // Update the alignment to the updated spacing box\n                        inputGroup.align({\n                            y: inputPosition.y,\n                            width: inputGroup.getBBox().width,\n                            align: inputPosition.align,\n                            // fix wrong getBBox() value on right align\n                            x: inputPosition.x + translateX - 2\n                        }, true, chart.spacingBox);\n                        // Skip animation\n                        inputGroup.placed = chart.hasLoaded;\n                    }\n                    this.handleCollision(xOffsetForExportButton);\n                    // Vertical align\n                    group.align({\n                        verticalAlign: verticalAlign\n                    }, true, chart.spacingBox);\n                    var alignTranslateY = group.alignAttr.translateY;\n                    // Set position\n                    var groupHeight = group.getBBox().height + 20; // # 20 padding\n                    var translateY = 0;\n                    // Calculate bottom position\n                    if (verticalAlign === 'bottom') {\n                        var legendOptions = chart.legend && chart.legend.options;\n                        var legendHeight = (legendOptions &&\n                            legendOptions.verticalAlign === 'bottom' &&\n                            legendOptions.enabled &&\n                            !legendOptions.floating ?\n                            (chart.legend.legendHeight +\n                                pick(legendOptions.margin, 10)) :\n                            0);\n                        groupHeight = groupHeight + legendHeight - 20;\n                        translateY = (alignTranslateY -\n                            groupHeight -\n                            (options.floating ? 0 : options.y) -\n                            (chart.titleOffset ? chart.titleOffset[2] : 0) -\n                            10 // 10 spacing\n                        );\n                    }\n                    if (verticalAlign === 'top') {\n                        if (options.floating) {\n                            translateY = 0;\n                        }\n                        if (chart.titleOffset && chart.titleOffset[0]) {\n                            translateY = chart.titleOffset[0];\n                        }\n                        translateY += ((chart.margin[0] - chart.spacing[0]) || 0);\n                    }\n                    else if (verticalAlign === 'middle') {\n                        if (inputPosition.y === buttonPosition.y) {\n                            translateY = alignTranslateY;\n                        }\n                        else if (inputPosition.y || buttonPosition.y) {\n                            if (inputPosition.y < 0 ||\n                                buttonPosition.y < 0) {\n                                translateY -= Math.min(inputPosition.y, buttonPosition.y);\n                            }\n                            else {\n                                translateY = alignTranslateY - groupHeight;\n                            }\n                        }\n                    }\n                    group.translate(options.x, options.y + Math.floor(translateY));\n                    // Translate HTML inputs\n                    var _b = this, minInput = _b.minInput, maxInput = _b.maxInput, dropdown = _b.dropdown;\n                    if (options.inputEnabled && minInput && maxInput) {\n                        minInput.style.marginTop = group.translateY + 'px';\n                        maxInput.style.marginTop = group.translateY + 'px';\n                    }\n                    if (dropdown) {\n                        dropdown.style.marginTop = group.translateY + 'px';\n                    }\n                }\n            };\n            /**\n             * Align the button group horizontally and vertically.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#alignButtonGroup\n             * @param {number} xOffsetForExportButton\n             * @param {number} [width]\n             */\n            RangeSelector.prototype.alignButtonGroup = function (xOffsetForExportButton, width) {\n                var _a = this, chart = _a.chart, options = _a.options, buttonGroup = _a.buttonGroup;\n                var buttonPosition = options.buttonPosition;\n                var plotLeft = chart.plotLeft - chart.spacing[3];\n                var translateX = buttonPosition.x - chart.spacing[3];\n                if (buttonPosition.align === 'right') {\n                    translateX += xOffsetForExportButton - plotLeft; // #13014\n                }\n                else if (buttonPosition.align === 'center') {\n                    translateX -= plotLeft / 2;\n                }\n                if (buttonGroup) {\n                    // Align button group\n                    buttonGroup.align({\n                        y: buttonPosition.y,\n                        width: pick(width, this.initialButtonGroupWidth),\n                        align: buttonPosition.align,\n                        x: translateX\n                    }, true, chart.spacingBox);\n                }\n            };\n            /**\n             * @private\n             * @function Highcharts.RangeSelector#positionButtons\n             */\n            RangeSelector.prototype.positionButtons = function () {\n                var _a = this, buttons = _a.buttons, chart = _a.chart, options = _a.options, zoomText = _a.zoomText;\n                var verb = chart.hasLoaded ? 'animate' : 'attr';\n                var buttonPosition = options.buttonPosition;\n                var plotLeft = chart.plotLeft;\n                var buttonLeft = plotLeft;\n                if (zoomText && zoomText.visibility !== 'hidden') {\n                    // #8769, allow dynamically updating margins\n                    zoomText[verb]({\n                        x: pick(plotLeft + buttonPosition.x, plotLeft)\n                    });\n                    // Button start position\n                    buttonLeft += buttonPosition.x +\n                        zoomText.getBBox().width + 5;\n                }\n                for (var i = 0, iEnd = this.buttonOptions.length; i < iEnd; ++i) {\n                    if (buttons[i].visibility !== 'hidden') {\n                        buttons[i][verb]({ x: buttonLeft });\n                        // Increase the button position for the next button\n                        buttonLeft += (buttons[i].width || 0) + options.buttonSpacing;\n                    }\n                    else {\n                        buttons[i][verb]({ x: plotLeft });\n                    }\n                }\n            };\n            /**\n             * Handle collision between the button group and the input group\n             *\n             * @private\n             * @function Highcharts.RangeSelector#handleCollision\n             *\n             * @param  {number} xOffsetForExportButton\n             *                  The X offset of the group required to make room for the\n             *                  exporting button\n             */\n            RangeSelector.prototype.handleCollision = function (xOffsetForExportButton) {\n                var _this = this;\n                var _a = this, chart = _a.chart, buttonGroup = _a.buttonGroup, inputGroup = _a.inputGroup;\n                var _b = this.options, buttonPosition = _b.buttonPosition, dropdown = _b.dropdown, inputPosition = _b.inputPosition;\n                var maxButtonWidth = function () {\n                    var buttonWidth = 0;\n                    _this.buttons.forEach(function (button) {\n                        var bBox = button.getBBox();\n                        if (bBox.width > buttonWidth) {\n                            buttonWidth = bBox.width;\n                        }\n                    });\n                    return buttonWidth;\n                };\n                var groupsOverlap = function (buttonGroupWidth) {\n                    if (inputGroup && buttonGroup) {\n                        var inputGroupX = (inputGroup.alignAttr.translateX +\n                            inputGroup.alignOptions.x -\n                            xOffsetForExportButton +\n                            // getBBox for detecing left margin\n                            inputGroup.getBBox().x +\n                            // 2px padding to not overlap input and label\n                            2);\n                        var inputGroupWidth = inputGroup.alignOptions.width;\n                        var buttonGroupX = buttonGroup.alignAttr.translateX +\n                            buttonGroup.getBBox().x;\n                        return (buttonGroupX + buttonGroupWidth > inputGroupX) &&\n                            (inputGroupX + inputGroupWidth > buttonGroupX) &&\n                            (buttonPosition.y <\n                                (inputPosition.y +\n                                    inputGroup.getBBox().height));\n                    }\n                    return false;\n                };\n                var moveInputsDown = function () {\n                    if (inputGroup && buttonGroup) {\n                        inputGroup.attr({\n                            translateX: inputGroup.alignAttr.translateX + (chart.axisOffset[1] >= -xOffsetForExportButton ?\n                                0 :\n                                -xOffsetForExportButton),\n                            translateY: inputGroup.alignAttr.translateY +\n                                buttonGroup.getBBox().height + 10\n                        });\n                    }\n                };\n                if (buttonGroup) {\n                    if (dropdown === 'always') {\n                        this.collapseButtons(xOffsetForExportButton);\n                        if (groupsOverlap(maxButtonWidth())) {\n                            // Move the inputs down if there is still a collision\n                            // after collapsing the buttons\n                            moveInputsDown();\n                        }\n                        return;\n                    }\n                    if (dropdown === 'never') {\n                        this.expandButtons();\n                    }\n                }\n                // Detect collision\n                if (inputGroup && buttonGroup) {\n                    if ((inputPosition.align === buttonPosition.align) ||\n                        // 20 is minimal spacing between elements\n                        groupsOverlap(this.initialButtonGroupWidth + 20)) {\n                        if (dropdown === 'responsive') {\n                            this.collapseButtons(xOffsetForExportButton);\n                            if (groupsOverlap(maxButtonWidth())) {\n                                moveInputsDown();\n                            }\n                        }\n                        else {\n                            moveInputsDown();\n                        }\n                    }\n                    else if (dropdown === 'responsive') {\n                        this.expandButtons();\n                    }\n                }\n                else if (buttonGroup && dropdown === 'responsive') {\n                    if (this.initialButtonGroupWidth > chart.plotWidth) {\n                        this.collapseButtons(xOffsetForExportButton);\n                    }\n                    else {\n                        this.expandButtons();\n                    }\n                }\n            };\n            /**\n             * Collapse the buttons and put the select element on top.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#collapseButtons\n             * @param {number} xOffsetForExportButton\n             */\n            RangeSelector.prototype.collapseButtons = function (xOffsetForExportButton) {\n                var _a = this, buttons = _a.buttons, buttonOptions = _a.buttonOptions, chart = _a.chart, dropdown = _a.dropdown, options = _a.options, zoomText = _a.zoomText;\n                // If the buttons are already collapsed do nothing.\n                if (this.isCollapsed === true) {\n                    return;\n                }\n                this.isCollapsed = true;\n                var userButtonTheme = (chart.userOptions.rangeSelector &&\n                    chart.userOptions.rangeSelector.buttonTheme) || {};\n                var getAttribs = function (text) { return ({\n                    text: text ? \"\".concat(text, \" \\u25BE\") : '▾',\n                    width: 'auto',\n                    paddingLeft: pick(options.buttonTheme.paddingLeft, userButtonTheme.padding, 8),\n                    paddingRight: pick(options.buttonTheme.paddingRight, userButtonTheme.padding, 8)\n                }); };\n                if (zoomText) {\n                    zoomText.hide();\n                }\n                var hasActiveButton = false;\n                buttonOptions.forEach(function (rangeOptions, i) {\n                    var button = buttons[i];\n                    if (button.state !== 2) {\n                        button.hide();\n                    }\n                    else {\n                        button.show();\n                        button.attr(getAttribs(rangeOptions.text));\n                        hasActiveButton = true;\n                    }\n                });\n                if (!hasActiveButton) {\n                    if (dropdown) {\n                        dropdown.selectedIndex = 0;\n                    }\n                    buttons[0].show();\n                    buttons[0].attr(getAttribs(this.zoomText && this.zoomText.textStr));\n                }\n                var align = options.buttonPosition.align;\n                this.positionButtons();\n                if (align === 'right' || align === 'center') {\n                    this.alignButtonGroup(xOffsetForExportButton, buttons[this.currentButtonIndex()].getBBox().width);\n                }\n                this.showDropdown();\n            };\n            /**\n             * Show all the buttons and hide the select element.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#expandButtons\n             */\n            RangeSelector.prototype.expandButtons = function () {\n                var _a = this, buttons = _a.buttons, buttonOptions = _a.buttonOptions, options = _a.options, zoomText = _a.zoomText;\n                this.hideDropdown();\n                // If buttons are already not collapsed, do nothing.\n                if (this.isCollapsed === false) {\n                    return;\n                }\n                this.isCollapsed = false;\n                if (zoomText) {\n                    zoomText.show();\n                }\n                buttonOptions.forEach(function (rangeOptions, i) {\n                    var button = buttons[i];\n                    button.show();\n                    button.attr({\n                        text: rangeOptions.text,\n                        width: options.buttonTheme.width || 28,\n                        paddingLeft: pick(options.buttonTheme.paddingLeft, 'unset'),\n                        paddingRight: pick(options.buttonTheme.paddingRight, 'unset')\n                    });\n                    if (button.state < 2) {\n                        button.setState(0);\n                    }\n                });\n                this.positionButtons();\n            };\n            /**\n             * Get the index of the visible button when the buttons are collapsed.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#currentButtonIndex\n             */\n            RangeSelector.prototype.currentButtonIndex = function () {\n                var dropdown = this.dropdown;\n                if (dropdown && dropdown.selectedIndex > 0) {\n                    return dropdown.selectedIndex - 1;\n                }\n                return 0;\n            };\n            /**\n             * Position the select element on top of the button.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#showDropdown\n             */\n            RangeSelector.prototype.showDropdown = function () {\n                var _a = this, buttonGroup = _a.buttonGroup, buttons = _a.buttons, chart = _a.chart, dropdown = _a.dropdown;\n                if (buttonGroup && dropdown) {\n                    var _b = buttonGroup.translateX, translateX = _b === void 0 ? 0 : _b, _c = buttonGroup.translateY, translateY = _c === void 0 ? 0 : _c, bBox = buttons[this.currentButtonIndex()].getBBox();\n                    css(dropdown, {\n                        left: (chart.plotLeft + translateX) + 'px',\n                        top: (translateY + 0.5) + 'px',\n                        width: bBox.width + 'px',\n                        height: bBox.height + 'px'\n                    });\n                    this.hasVisibleDropdown = true;\n                }\n            };\n            /**\n             * @private\n             * @function Highcharts.RangeSelector#hideDropdown\n             */\n            RangeSelector.prototype.hideDropdown = function () {\n                var dropdown = this.dropdown;\n                if (dropdown) {\n                    css(dropdown, {\n                        top: '-9999em',\n                        width: '1px',\n                        height: '1px'\n                    });\n                    this.hasVisibleDropdown = false;\n                }\n            };\n            /**\n             * Extracts height of range selector\n             *\n             * @private\n             * @function Highcharts.RangeSelector#getHeight\n             * @return {number}\n             * Returns rangeSelector height\n             */\n            RangeSelector.prototype.getHeight = function () {\n                var rangeSelector = this, options = rangeSelector.options, rangeSelectorGroup = rangeSelector.group, inputPosition = options.inputPosition, buttonPosition = options.buttonPosition, yPosition = options.y, buttonPositionY = buttonPosition.y, inputPositionY = inputPosition.y;\n                var rangeSelectorHeight = 0;\n                if (options.height) {\n                    return options.height;\n                }\n                // Align the elements before we read the height in case we're switching\n                // between wrapped and non-wrapped layout\n                this.alignElements();\n                rangeSelectorHeight = rangeSelectorGroup ?\n                    // 13px to keep back compatibility\n                    (rangeSelectorGroup.getBBox(true).height) + 13 +\n                        yPosition :\n                    0;\n                var minPosition = Math.min(inputPositionY, buttonPositionY);\n                if ((inputPositionY < 0 && buttonPositionY < 0) ||\n                    (inputPositionY > 0 && buttonPositionY > 0)) {\n                    rangeSelectorHeight += Math.abs(minPosition);\n                }\n                return rangeSelectorHeight;\n            };\n            /**\n             * Detect collision with title or subtitle\n             *\n             * @private\n             * @function Highcharts.RangeSelector#titleCollision\n             * @return {boolean}\n             * Returns collision status\n             */\n            RangeSelector.prototype.titleCollision = function (chart) {\n                return !(chart.options.title.text ||\n                    chart.options.subtitle.text);\n            };\n            /**\n             * Update the range selector with new options\n             *\n             * @private\n             * @function Highcharts.RangeSelector#update\n             * @param {Highcharts.RangeSelectorOptions} options\n             */\n            RangeSelector.prototype.update = function (options) {\n                var chart = this.chart;\n                merge(true, chart.options.rangeSelector, options);\n                this.destroy();\n                this.init(chart);\n                this.render();\n            };\n            /**\n             * Destroys allocated elements.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#destroy\n             */\n            RangeSelector.prototype.destroy = function () {\n                var rSelector = this, minInput = rSelector.minInput, maxInput = rSelector.maxInput;\n                if (rSelector.eventsToUnbind) {\n                    rSelector.eventsToUnbind.forEach(function (unbind) { return unbind(); });\n                    rSelector.eventsToUnbind = void 0;\n                }\n                // Destroy elements in collections\n                destroyObjectProperties(rSelector.buttons);\n                // Clear input element events\n                if (minInput) {\n                    minInput.onfocus = minInput.onblur = minInput.onchange = null;\n                }\n                if (maxInput) {\n                    maxInput.onfocus = maxInput.onblur = maxInput.onchange = null;\n                }\n                // Destroy HTML and SVG elements\n                objectEach(rSelector, function (val, key) {\n                    if (val && key !== 'chart') {\n                        if (val instanceof SVGElement) {\n                            // SVGElement\n                            val.destroy();\n                        }\n                        else if (val instanceof window.HTMLElement) {\n                            // HTML element\n                            discardElement(val);\n                        }\n                    }\n                    if (val !== RangeSelector.prototype[key]) {\n                        rSelector[key] = null;\n                    }\n                }, this);\n            };\n            return RangeSelector;\n        }());\n        extend(RangeSelector.prototype, {\n            /**\n             * The default buttons for pre-selecting time frames.\n             * @private\n             */\n            defaultButtons: [{\n                    type: 'month',\n                    count: 1,\n                    text: '1m',\n                    title: 'View 1 month'\n                }, {\n                    type: 'month',\n                    count: 3,\n                    text: '3m',\n                    title: 'View 3 months'\n                }, {\n                    type: 'month',\n                    count: 6,\n                    text: '6m',\n                    title: 'View 6 months'\n                }, {\n                    type: 'ytd',\n                    text: 'YTD',\n                    title: 'View year to date'\n                }, {\n                    type: 'year',\n                    count: 1,\n                    text: '1y',\n                    title: 'View 1 year'\n                }, {\n                    type: 'all',\n                    text: 'All',\n                    title: 'View all'\n                }],\n            /**\n             * The date formats to use when setting min, max and value on date inputs.\n             * @private\n             */\n            inputTypeFormats: {\n                'datetime-local': '%Y-%m-%dT%H:%M:%S',\n                'date': '%Y-%m-%d',\n                'time': '%H:%M:%S'\n            }\n        });\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * Define the time span for the button\n         *\n         * @typedef {\"all\"|\"day\"|\"hour\"|\"millisecond\"|\"minute\"|\"month\"|\"second\"|\"week\"|\"year\"|\"ytd\"} Highcharts.RangeSelectorButtonTypeValue\n         */\n        /**\n         * Callback function to react on button clicks.\n         *\n         * @callback Highcharts.RangeSelectorClickCallbackFunction\n         *\n         * @param {global.Event} e\n         *        Event arguments.\n         *\n         * @param {boolean|undefined}\n         *        Return false to cancel the default button event.\n         */\n        /**\n         * Callback function to parse values entered in the input boxes and return a\n         * valid JavaScript time as milliseconds since 1970.\n         *\n         * @callback Highcharts.RangeSelectorParseCallbackFunction\n         *\n         * @param {string} value\n         *        Input value to parse.\n         *\n         * @return {number}\n         *         Parsed JavaScript time value.\n         */\n        (''); // keeps doclets above in JS file\n\n        return RangeSelector;\n    });\n    _registerModule(_modules, 'Core/Chart/StockChart.js', [_modules['Core/Chart/Chart.js'], _modules['Core/Templating.js'], _modules['Core/Defaults.js'], _modules['Stock/Navigator/NavigatorDefaults.js'], _modules['Stock/RangeSelector/RangeSelectorDefaults.js'], _modules['Stock/Scrollbar/ScrollbarDefaults.js'], _modules['Stock/Utilities/StockUtilities.js'], _modules['Core/Utilities.js']], function (Chart, F, D, NavigatorDefaults, RangeSelectorDefaults, ScrollbarDefaults, StockUtilities, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n            var extendStatics = function (d, b) {\n                extendStatics = Object.setPrototypeOf ||\n                    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                    function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                if (typeof b !== \"function\" && b !== null)\n                    throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var format = F.format;\n        var getOptions = D.getOptions;\n        var setFixedRange = StockUtilities.setFixedRange;\n        var addEvent = U.addEvent, clamp = U.clamp, defined = U.defined, extend = U.extend, find = U.find, isNumber = U.isNumber, isString = U.isString, merge = U.merge, pick = U.pick, splat = U.splat;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Get stock-specific default axis options.\n         *\n         * @private\n         * @function getDefaultAxisOptions\n         */\n        function getDefaultAxisOptions(coll, options, defaultOptions) {\n            var _a, _b, _c, _d;\n            if (coll === 'xAxis') {\n                return {\n                    minPadding: 0,\n                    maxPadding: 0,\n                    overscroll: 0,\n                    ordinal: true\n                };\n            }\n            if (coll === 'yAxis') {\n                return {\n                    labels: {\n                        y: -2\n                    },\n                    opposite: (_b = (_a = defaultOptions.opposite) !== null && _a !== void 0 ? _a : options.opposite) !== null && _b !== void 0 ? _b : true,\n                    showLastLabel: !!(\n                    // #6104, show last label by default for category axes\n                    options.categories ||\n                        options.type === 'category'),\n                    title: {\n                        text: ((_c = defaultOptions.title) === null || _c === void 0 ? void 0 : _c.text) !== 'Values' ?\n                            (_d = defaultOptions.title) === null || _d === void 0 ? void 0 : _d.text :\n                            null\n                    }\n                };\n            }\n            return {};\n        }\n        /**\n         * Get stock-specific forced axis options.\n         *\n         * @private\n         * @function getForcedAxisOptions\n         */\n        function getForcedAxisOptions(type, chartOptions) {\n            if (type === 'xAxis') {\n                // Always disable startOnTick:true on the main axis when the navigator\n                // is enabled (#1090)\n                var navigatorEnabled = pick(chartOptions.navigator && chartOptions.navigator.enabled, NavigatorDefaults.enabled, true);\n                var axisOptions = {\n                    type: 'datetime',\n                    categories: void 0\n                };\n                if (navigatorEnabled) {\n                    axisOptions.startOnTick = false;\n                    axisOptions.endOnTick = false;\n                }\n                return axisOptions;\n            }\n            return {};\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * Stock-optimized chart. Use {@link Highcharts.Chart|Chart} for common charts.\n         *\n         * @requires modules/stock\n         *\n         * @class\n         * @name Highcharts.StockChart\n         * @extends Highcharts.Chart\n         */\n        var StockChart = /** @class */ (function (_super) {\n            __extends(StockChart, _super);\n            function StockChart() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Initializes the chart. The constructor's arguments are passed on\n             * directly.\n             *\n             * @function Highcharts.StockChart#init\n             *\n             * @param {Highcharts.Options} userOptions\n             *        Custom options.\n             *\n             * @param {Function} [callback]\n             *        Function to run when the chart has loaded and all external\n             *        images are loaded.\n             *\n             *\n             * @emits Highcharts.StockChart#event:init\n             * @emits Highcharts.StockChart#event:afterInit\n             */\n            StockChart.prototype.init = function (userOptions, callback) {\n                var defaultOptions = getOptions(), xAxisOptions = userOptions.xAxis, yAxisOptions = userOptions.yAxis, \n                // Always disable startOnTick:true on the main axis when the\n                // navigator is enabled (#1090)\n                navigatorEnabled = pick(userOptions.navigator && userOptions.navigator.enabled, NavigatorDefaults.enabled, true);\n                // Avoid doing these twice\n                userOptions.xAxis = userOptions.yAxis = void 0;\n                var options = merge({\n                    chart: {\n                        panning: {\n                            enabled: true,\n                            type: 'x'\n                        },\n                        zooming: {\n                            pinchType: 'x',\n                            mouseWheel: {\n                                type: 'x'\n                            }\n                        }\n                    },\n                    navigator: {\n                        enabled: navigatorEnabled\n                    },\n                    scrollbar: {\n                        // #4988 - check if setOptions was called\n                        enabled: pick(ScrollbarDefaults.enabled, true)\n                    },\n                    rangeSelector: {\n                        // #4988 - check if setOptions was called\n                        enabled: pick(RangeSelectorDefaults.rangeSelector.enabled, true)\n                    },\n                    title: {\n                        text: null\n                    },\n                    tooltip: {\n                        split: pick(defaultOptions.tooltip && defaultOptions.tooltip.split, true),\n                        crosshairs: true\n                    },\n                    legend: {\n                        enabled: false\n                    }\n                }, userOptions, // User's options\n                {\n                    isStock: true // Internal flag\n                });\n                userOptions.xAxis = xAxisOptions;\n                userOptions.yAxis = yAxisOptions;\n                // Apply X axis options to both single and multi y axes\n                options.xAxis = splat(userOptions.xAxis || {}).map(function (xAxisOptions) { return merge(getDefaultAxisOptions('xAxis', xAxisOptions, defaultOptions.xAxis), \n                // #7690\n                xAxisOptions, // User options\n                getForcedAxisOptions('xAxis', userOptions)); });\n                // Apply Y axis options to both single and multi y axes\n                options.yAxis = splat(userOptions.yAxis || {}).map(function (yAxisOptions) { return merge(getDefaultAxisOptions('yAxis', yAxisOptions, defaultOptions.yAxis), \n                // #7690\n                yAxisOptions // User options\n                ); });\n                _super.prototype.init.call(this, options, callback);\n            };\n            /**\n             * Factory for creating different axis types.\n             * Extended to add stock defaults.\n             *\n             * @private\n             * @function Highcharts.StockChart#createAxis\n             * @param {string} coll\n             * An axis type.\n             * @param {Chart.CreateAxisOptionsObject} options\n             * The axis creation options.\n             */\n            StockChart.prototype.createAxis = function (coll, options) {\n                options.axis = merge(getDefaultAxisOptions(coll, options.axis, getOptions()[coll]), options.axis, getForcedAxisOptions(coll, this.userOptions));\n                return _super.prototype.createAxis.call(this, coll, options);\n            };\n            return StockChart;\n        }(Chart));\n        addEvent(Chart, 'update', function (e) {\n            var chart = this, options = e.options;\n            // Use case: enabling scrollbar from a disabled state.\n            // Scrollbar needs to be initialized from a controller, Navigator in this\n            // case (#6615)\n            if ('scrollbar' in options && chart.navigator) {\n                merge(true, chart.options.scrollbar, options.scrollbar);\n                chart.navigator.update({});\n                delete options.scrollbar;\n            }\n        });\n        /* *\n         *\n         *  Composition\n         *\n         * */\n        (function (StockChart) {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /** @private */\n            function compose(ChartClass, AxisClass, SeriesClass, SVGRendererClass) {\n                var seriesProto = SeriesClass.prototype;\n                if (!seriesProto.forceCropping) {\n                    addEvent(AxisClass, 'afterDrawCrosshair', onAxisAfterDrawCrosshair);\n                    addEvent(AxisClass, 'afterHideCrosshair', onAxisAfterHideCrosshair);\n                    addEvent(AxisClass, 'autoLabelAlign', onAxisAutoLabelAlign);\n                    addEvent(AxisClass, 'destroy', onAxisDestroy);\n                    addEvent(AxisClass, 'getPlotLinePath', onAxisGetPlotLinePath);\n                    ChartClass.prototype.setFixedRange = setFixedRange;\n                    seriesProto.forceCropping = seriesForceCropping;\n                    addEvent(SeriesClass, 'setOptions', onSeriesSetOptions);\n                    SVGRendererClass.prototype.crispPolyLine = svgRendererCrispPolyLine;\n                }\n            }\n            StockChart.compose = compose;\n            /**\n             * Extend crosshairs to also draw the label.\n             * @private\n             */\n            function onAxisAfterDrawCrosshair(event) {\n                var axis = this;\n                // Check if the label has to be drawn\n                if (!axis.crosshair ||\n                    !axis.crosshair.label ||\n                    !axis.crosshair.label.enabled ||\n                    !axis.cross ||\n                    !isNumber(axis.min) ||\n                    !isNumber(axis.max)) {\n                    return;\n                }\n                var chart = axis.chart, log = axis.logarithmic, options = axis.crosshair.label, // the label's options\n                horiz = axis.horiz, // axis orientation\n                opposite = axis.opposite, // axis position\n                left = axis.left, // left position\n                top = axis.top, // top position\n                width = axis.width, tickInside = axis.options.tickPosition === 'inside', snap = axis.crosshair.snap !== false, e = event.e || (axis.cross && axis.cross.e), point = event.point;\n                var crossLabel = axis.crossLabel, // the svgElement\n                posx, posy, formatOption = options.format, formatFormat = '', limit, offset = 0, \n                // Use last available event (#5287)\n                min = axis.min, max = axis.max;\n                if (log) {\n                    min = log.lin2log(axis.min);\n                    max = log.lin2log(axis.max);\n                }\n                var align = (horiz ? 'center' : opposite ?\n                    (axis.labelAlign === 'right' ? 'right' : 'left') :\n                    (axis.labelAlign === 'left' ? 'left' : 'center'));\n                // If the label does not exist yet, create it.\n                if (!crossLabel) {\n                    crossLabel = axis.crossLabel = chart.renderer\n                        .label('', 0, void 0, options.shape || 'callout')\n                        .addClass('highcharts-crosshair-label highcharts-color-' + (point && point.series ?\n                        point.series.colorIndex :\n                        axis.series[0] && this.series[0].colorIndex))\n                        .attr({\n                        align: options.align || align,\n                        padding: pick(options.padding, 8),\n                        r: pick(options.borderRadius, 3),\n                        zIndex: 2\n                    })\n                        .add(axis.labelGroup);\n                    // Presentational\n                    if (!chart.styledMode) {\n                        crossLabel\n                            .attr({\n                            fill: options.backgroundColor ||\n                                ( // #14888\n                                point && point.series &&\n                                    point.series.color) ||\n                                \"#666666\" /* Palette.neutralColor60 */,\n                            stroke: options.borderColor || '',\n                            'stroke-width': options.borderWidth || 0\n                        })\n                            .css(extend({\n                            color: \"#ffffff\" /* Palette.backgroundColor */,\n                            fontWeight: 'normal',\n                            fontSize: '0.7em',\n                            textAlign: 'center'\n                        }, options.style || {}));\n                    }\n                }\n                if (horiz) {\n                    posx = snap ? (point.plotX || 0) + left : e.chartX;\n                    posy = top + (opposite ? 0 : axis.height);\n                }\n                else {\n                    posx = left + axis.offset + (opposite ? width : 0);\n                    posy = snap ? (point.plotY || 0) + top : e.chartY;\n                }\n                if (!formatOption && !options.formatter) {\n                    if (axis.dateTime) {\n                        formatFormat = '%b %d, %Y';\n                    }\n                    formatOption =\n                        '{value' + (formatFormat ? ':' + formatFormat : '') + '}';\n                }\n                // Show the label\n                var value = snap ?\n                    (axis.isXAxis ? point.x : point.y) :\n                    axis.toValue(horiz ? e.chartX : e.chartY);\n                // Crosshair should be rendered within Axis range (#7219) and the point\n                // of currentPriceIndicator should be inside the plot area (#14879).\n                var isInside = point && point.series ?\n                    point.series.isPointInside(point) :\n                    (isNumber(value) && value > min && value < max);\n                var text = '';\n                if (formatOption) {\n                    text = format(formatOption, { value: value }, chart);\n                }\n                else if (options.formatter && isNumber(value)) {\n                    text = options.formatter.call(axis, value);\n                }\n                crossLabel.attr({\n                    text: text,\n                    x: posx,\n                    y: posy,\n                    visibility: isInside ? 'inherit' : 'hidden'\n                });\n                var crossBox = crossLabel.getBBox();\n                // Now it is placed we can correct its position\n                if (isNumber(crossLabel.x) && !horiz && !opposite) {\n                    posx = crossLabel.x - (crossBox.width / 2);\n                }\n                if (isNumber(crossLabel.y)) {\n                    if (horiz) {\n                        if ((tickInside && !opposite) || (!tickInside && opposite)) {\n                            posy = crossLabel.y - crossBox.height;\n                        }\n                    }\n                    else {\n                        posy = crossLabel.y - (crossBox.height / 2);\n                    }\n                }\n                // Check the edges\n                if (horiz) {\n                    limit = {\n                        left: left - crossBox.x,\n                        right: left + axis.width - crossBox.x\n                    };\n                }\n                else {\n                    limit = {\n                        left: axis.labelAlign === 'left' ? left : 0,\n                        right: axis.labelAlign === 'right' ?\n                            left + axis.width :\n                            chart.chartWidth\n                    };\n                }\n                var translateX = crossLabel.translateX || 0;\n                // Left edge\n                if (translateX < limit.left) {\n                    offset = limit.left - translateX;\n                }\n                // Right edge\n                if (translateX + crossBox.width >= limit.right) {\n                    offset = -(translateX + crossBox.width - limit.right);\n                }\n                // Show the crosslabel\n                crossLabel.attr({\n                    x: posx + offset,\n                    y: posy,\n                    // First set x and y, then anchorX and anchorY, when box is actually\n                    // calculated, #5702\n                    anchorX: horiz ?\n                        posx :\n                        (axis.opposite ? 0 : chart.chartWidth),\n                    anchorY: horiz ?\n                        (axis.opposite ? chart.chartHeight : 0) :\n                        posy + crossBox.height / 2\n                });\n            }\n            /**\n             * Wrapper to hide the label.\n             * @private\n             */\n            function onAxisAfterHideCrosshair() {\n                var axis = this;\n                if (axis.crossLabel) {\n                    axis.crossLabel = axis.crossLabel.hide();\n                }\n            }\n            /**\n             * Override the automatic label alignment so that the first Y axis' labels\n             * are drawn on top of the grid line, and subsequent axes are drawn outside.\n             * @private\n             */\n            function onAxisAutoLabelAlign(e) {\n                var axis = this, chart = axis.chart, options = axis.options, panes = chart._labelPanes = chart._labelPanes || {}, labelOptions = options.labels;\n                if (chart.options.isStock && axis.coll === 'yAxis') {\n                    var key = options.top + ',' + options.height;\n                    // Do it only for the first Y axis of each pane\n                    if (!panes[key] && labelOptions.enabled) {\n                        if (labelOptions.distance === 15 && // default\n                            axis.side === 1) {\n                            labelOptions.distance = 0;\n                        }\n                        if (typeof labelOptions.align === 'undefined') {\n                            labelOptions.align = 'right';\n                        }\n                        panes[key] = axis;\n                        e.align = 'right';\n                        e.preventDefault();\n                    }\n                }\n            }\n            /**\n             * Clear axis from label panes. (#6071)\n             * @private\n             */\n            function onAxisDestroy() {\n                var axis = this, chart = axis.chart, key = (axis.options &&\n                    (axis.options.top + ',' + axis.options.height));\n                if (key && chart._labelPanes && chart._labelPanes[key] === axis) {\n                    delete chart._labelPanes[key];\n                }\n            }\n            /**\n             * Override getPlotLinePath to allow for multipane charts.\n             * @private\n             */\n            function onAxisGetPlotLinePath(e) {\n                var axis = this, series = (axis.isLinked && !axis.series && axis.linkedParent ?\n                    axis.linkedParent.series :\n                    axis.series), chart = axis.chart, renderer = chart.renderer, axisLeft = axis.left, axisTop = axis.top, result = [], translatedValue = e.translatedValue, value = e.value, force = e.force, \n                /**\n                 * Return the other axis based on either the axis option or on\n                 * related series.\n                 * @private\n                 */\n                getAxis = function (coll) {\n                    var otherColl = coll === 'xAxis' ? 'yAxis' : 'xAxis', opt = axis.options[otherColl];\n                    // Other axis indexed by number\n                    if (isNumber(opt)) {\n                        return [chart[otherColl][opt]];\n                    }\n                    // Other axis indexed by id (like navigator)\n                    if (isString(opt)) {\n                        return [chart.get(opt)];\n                    }\n                    // Auto detect based on existing series\n                    return series.map(function (s) { return s[otherColl]; });\n                };\n                var x1, y1, x2, y2, axes = [], // #3416 need a default array\n                axes2, uniqueAxes, transVal;\n                if ( // For stock chart, by default render paths across the panes\n                // except the case when `acrossPanes` is disabled by user (#6644)\n                (chart.options.isStock && e.acrossPanes !== false) &&\n                    // Ignore in case of colorAxis or zAxis. #3360, #3524, #6720\n                    axis.coll === 'xAxis' || axis.coll === 'yAxis') {\n                    e.preventDefault();\n                    // Get the related axes based on series\n                    axes = getAxis(axis.coll);\n                    // Get the related axes based options.*Axis setting #2810\n                    axes2 = (axis.isXAxis ? chart.yAxis : chart.xAxis);\n                    for (var _i = 0, axes2_1 = axes2; _i < axes2_1.length; _i++) {\n                        var A = axes2_1[_i];\n                        if (defined(A.options.id) ?\n                            A.options.id.indexOf('navigator') === -1 :\n                            true) {\n                            var a = (A.isXAxis ? 'yAxis' : 'xAxis'), rax = (defined(A.options[a]) ?\n                                chart[a][A.options[a]] :\n                                chart[a][0]);\n                            if (axis === rax) {\n                                axes.push(A);\n                            }\n                        }\n                    }\n                    // Remove duplicates in the axes array. If there are no axes in the\n                    // axes array, we are adding an axis without data, so we need to\n                    // populate this with grid lines (#2796).\n                    uniqueAxes = axes.length ?\n                        [] :\n                        [axis.isXAxis ? chart.yAxis[0] : chart.xAxis[0]]; // #3742\n                    var _loop_1 = function (axis2) {\n                        if (uniqueAxes.indexOf(axis2) === -1 &&\n                            // Do not draw on axis which overlap completely. #5424\n                            !find(uniqueAxes, function (unique) { return (unique.pos === axis2.pos &&\n                                unique.len === axis2.len); })) {\n                            uniqueAxes.push(axis2);\n                        }\n                    };\n                    for (var _a = 0, axes_1 = axes; _a < axes_1.length; _a++) {\n                        var axis2 = axes_1[_a];\n                        _loop_1(axis2);\n                    }\n                    transVal = pick(translatedValue, axis.translate(value || 0, void 0, void 0, e.old));\n                    if (isNumber(transVal)) {\n                        if (axis.horiz) {\n                            for (var _b = 0, uniqueAxes_1 = uniqueAxes; _b < uniqueAxes_1.length; _b++) {\n                                var axis2 = uniqueAxes_1[_b];\n                                var skip = void 0;\n                                y1 = axis2.pos;\n                                y2 = y1 + axis2.len;\n                                x1 = x2 = Math.round(transVal + axis.transB);\n                                // outside plot area\n                                if (force !== 'pass' &&\n                                    (x1 < axisLeft || x1 > axisLeft + axis.width)) {\n                                    if (force) {\n                                        x1 = x2 = clamp(x1, axisLeft, axisLeft + axis.width);\n                                    }\n                                    else {\n                                        skip = true;\n                                    }\n                                }\n                                if (!skip) {\n                                    result.push(['M', x1, y1], ['L', x2, y2]);\n                                }\n                            }\n                        }\n                        else {\n                            for (var _c = 0, uniqueAxes_2 = uniqueAxes; _c < uniqueAxes_2.length; _c++) {\n                                var axis2 = uniqueAxes_2[_c];\n                                var skip = void 0;\n                                x1 = axis2.pos;\n                                x2 = x1 + axis2.len;\n                                y1 = y2 = Math.round(axisTop + axis.height - transVal);\n                                // outside plot area\n                                if (force !== 'pass' &&\n                                    (y1 < axisTop || y1 > axisTop + axis.height)) {\n                                    if (force) {\n                                        y1 = y2 = clamp(y1, axisTop, axisTop + axis.height);\n                                    }\n                                    else {\n                                        skip = true;\n                                    }\n                                }\n                                if (!skip) {\n                                    result.push(['M', x1, y1], ['L', x2, y2]);\n                                }\n                            }\n                        }\n                    }\n                    e.path = result.length > 0 ?\n                        renderer.crispPolyLine(result, e.lineWidth || 1) :\n                        // #3557 getPlotLinePath in regular Highcharts also returns null\n                        void 0;\n                }\n            }\n            /**\n             * Handle som Stock-specific series defaults, override the plotOptions\n             * before series options are handled.\n             * @private\n             */\n            function onSeriesSetOptions(e) {\n                var series = this;\n                if (series.chart.options.isStock) {\n                    var overrides = void 0;\n                    if (series.is('column') || series.is('columnrange')) {\n                        overrides = {\n                            borderWidth: 0,\n                            shadow: false\n                        };\n                    }\n                    else if (!series.is('scatter') && !series.is('sma')) {\n                        overrides = {\n                            marker: {\n                                enabled: false,\n                                radius: 2\n                            }\n                        };\n                    }\n                    if (overrides) {\n                        e.plotOptions[series.type] = merge(e.plotOptions[series.type], overrides);\n                    }\n                }\n            }\n            /**\n             * Based on the data grouping options decides whether\n             * the data should be cropped while processing.\n             *\n             * @ignore\n             * @function Highcharts.Series#forceCropping\n             */\n            function seriesForceCropping() {\n                var series = this, chart = series.chart, options = series.options, dataGroupingOptions = options.dataGrouping, groupingEnabled = (series.allowDG !== false &&\n                    dataGroupingOptions &&\n                    pick(dataGroupingOptions.enabled, chart.options.isStock));\n                return groupingEnabled;\n            }\n            /* eslint-disable jsdoc/check-param-names */\n            /**\n             * Factory function for creating new stock charts. Creates a new\n             * {@link Highcharts.StockChart|StockChart} object with different default\n             * options than the basic Chart.\n             *\n             * @example\n             * let chart = Highcharts.stockChart('container', {\n             *     series: [{\n             *         data: [1, 2, 3, 4, 5, 6, 7, 8, 9],\n             *         pointInterval: 24 * 60 * 60 * 1000\n             *     }]\n             * });\n             *\n             * @function Highcharts.stockChart\n             *\n             * @param {string|Highcharts.HTMLDOMElement} [renderTo]\n             *        The DOM element to render to, or its id.\n             *\n             * @param {Highcharts.Options} options\n             *        The chart options structure as described in the\n             *        [options reference](https://api.highcharts.com/highstock).\n             *\n             * @param {Highcharts.ChartCallbackFunction} [callback]\n             *        A function to execute when the chart object is finished\n             *        rendering and all external image files (`chart.backgroundImage`,\n             *        `chart.plotBackgroundImage` etc) are loaded. Defining a\n             *        [chart.events.load](https://api.highcharts.com/highstock/chart.events.load)\n             *        handler is equivalent.\n             *\n             * @return {Highcharts.StockChart}\n             *         The chart object.\n             */\n            function stockChart(a, b, c) {\n                return new StockChart(a, b, c);\n            }\n            StockChart.stockChart = stockChart;\n            /* eslint-enable jsdoc/check-param-names */\n            /**\n             * Function to crisp a line with multiple segments\n             *\n             * @private\n             * @function Highcharts.SVGRenderer#crispPolyLine\n             */\n            function svgRendererCrispPolyLine(points, width) {\n                // points format: [['M', 0, 0], ['L', 100, 0]]\n                // normalize to a crisp line\n                for (var i = 0; i < points.length; i = i + 2) {\n                    var start = points[i], end = points[i + 1];\n                    if (start[1] === end[1]) {\n                        // Subtract due to #1129. Now bottom and left axis gridlines\n                        // behave the same.\n                        start[1] = end[1] =\n                            Math.round(start[1]) - (width % 2 / 2);\n                    }\n                    if (start[2] === end[2]) {\n                        start[2] = end[2] =\n                            Math.round(start[2]) + (width % 2 / 2);\n                    }\n                }\n                return points;\n            }\n        })(StockChart || (StockChart = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return StockChart;\n    });\n    _registerModule(_modules, 'Series/HLC/HLCPoint.js', [_modules['Core/Series/SeriesRegistry.js']], function (SeriesRegistry) {\n        /* *\n         *\n         *  (c) 2010-2024 Pawel Lysy\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n            var extendStatics = function (d, b) {\n                extendStatics = Object.setPrototypeOf ||\n                    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                    function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                if (typeof b !== \"function\" && b !== null)\n                    throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var ColumnPoint = SeriesRegistry.seriesTypes.column.prototype.pointClass;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        var HLCPoint = /** @class */ (function (_super) {\n            __extends(HLCPoint, _super);\n            function HLCPoint() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            return HLCPoint;\n        }(ColumnPoint));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return HLCPoint;\n    });\n    _registerModule(_modules, 'Series/HLC/HLCSeriesDefaults.js', [], function () {\n        /* *\n         *\n         *  (c) 2010-2024 Pawel Lysy\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * An HLC chart is a style of financial chart used to describe price\n         * movements over time. It displays high, low and close values per\n         * data point.\n         *\n         * @sample stock/demo/hlc/\n         *         HLC chart\n         *\n         * @extends      plotOptions.column\n         * @excluding    borderColor, borderRadius, borderWidth, crisp, stacking,\n         *               stack\n         * @product      highstock\n         * @optionparent plotOptions.hlc\n         */\n        var HLCSeriesDefaults = {\n            /**\n             * The approximate pixel width of each group. If for example a series\n             * with 30 points is displayed over a 600 pixel wide plot area, no\n             * grouping is performed. If however the series contains so many points\n             * that the spacing is less than the groupPixelWidth, Highcharts will\n             * try to group it into appropriate groups so that each is more or less\n             * two pixels wide. Defaults to `5`.\n             *\n             * @type      {number}\n             * @default   5\n             * @product   highstock\n             * @apioption plotOptions.hlc.dataGrouping.groupPixelWidth\n             */\n            /**\n             * @type      {Highcharts.DataGroupingApproximationValue|Function}\n             * @default   hlc\n             * @product   highstock\n             * @apioption plotOptions.hlc.dataGrouping.approximation\n             */\n            /**\n             * @default   close\n             * @apioption plotOptions.hlc.colorKey\n             */\n            /**\n             * The pixel width of the line/border. Defaults to `1`.\n             *\n             * @sample {highstock} stock/plotoptions/hlc-linewidth/\n             *         A greater line width\n             *\n             * @type    {number}\n             * @default 1\n             * @product highstock\n             *\n             * @public\n             */\n            lineWidth: 1,\n            tooltip: {\n                pointFormat: '<span style=\"color:{point.color}\">\\u25CF</span> ' +\n                    '<b> {series.name}</b><br/>' +\n                    'High: {point.high}<br/>' +\n                    'Low: {point.low}<br/>' +\n                    'Close: {point.close}<br/>'\n            },\n            /**\n             * @type {number|null}\n             */\n            threshold: null,\n            states: {\n                /**\n                 * @extends plotOptions.column.states.hover\n                 * @product highstock\n                 */\n                hover: {\n                    /**\n                     * The pixel width of the line representing the HLC point.\n                     *\n                     * @type    {number}\n                     * @default 3\n                     * @product highstock\n                     */\n                    lineWidth: 3\n                }\n            },\n            /**\n             * Determines which one of  `high`, `low`, `close` values should\n             * be represented as `point.y`, which is later used to set dataLabel\n             * position and [compare](#plotOptions.series.compare).\n             *\n             * @sample {highstock} stock/plotoptions/hlc-pointvalkey/\n             *         Possible values\n             *\n             * @declare    Highcharts.OptionsHLCPointValKeyValue\n             * @type       {string}\n             * @default    close\n             * @validvalue [\"high\", \"low\", \"close\"]\n             * @product    highstock\n             * @apioption  plotOptions.hlc.pointValKey\n             */\n            /**\n             * @default   close\n             * @apioption plotOptions.hlc.colorKey\n             */\n            stickyTracking: true\n        };\n        /**\n         * A `hlc` series. If the [type](#series.hlc.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.hlc\n         * @excluding dataParser, dataURL\n         * @product   highstock\n         * @apioption series.hlc\n         */\n        /**\n         * An array of data points for the series. For the `hlc` series type,\n         * points can be given in the following ways:\n         *\n         * 1. An array of arrays with 4 or 3 values. In this case, the values correspond\n         *    to `x,high,low,close`. If the first value is a string, it is applied\n         *    as the name of the point, and the `x` value is inferred. The `x` value can\n         *    also be omitted, in which case the inner arrays should be of length of 3\\.\n         *    Then the `x` value is automatically calculated, either starting at 0 and\n         *    incremented by 1, or from `pointStart` and `pointInterval` given in the\n         *    series options.\n         *    ```js\n         *    data: [\n         *        [0, 5, 6, 7],\n         *        [1, 4, 8, 2],\n         *        [2, 3, 4, 10]\n         *    ]\n         *    ```\n         *\n         * 2. An array of objects with named values. The following snippet shows only a\n         *    few settings, see the complete options set below. If the total number of\n         *    data points exceeds the series'\n         *    [turboThreshold](#series.hlc.turboThreshold), this option is not\n         *    available.\n         *    ```js\n         *    data: [{\n         *        x: 1,\n         *        high: 4,\n         *        low: 5,\n         *        close: 2,\n         *        name: \"Point2\",\n         *        color: \"#00FF00\"\n         *    }, {\n         *        x: 1,\n         *        high: 3,\n         *        low: 6,\n         *        close: 7,\n         *        name: \"Point1\",\n         *        color: \"#FF00FF\"\n         *    }]\n         *    ```\n         *\n         * @type      {Array<Array<(number|string),number,number>|Array<(number|string),number,number,number>|*>}\n         * @extends   series.arearange.data\n         * @excluding y, marker\n         * @product   highstock\n         * @apioption series.hlc.data\n         */\n        /**\n         * The closing value of each data point.\n         *\n         * @type      {number}\n         * @product   highstock\n         * @apioption series.hlc.data.close\n         */\n        (''); // keeps doclets above in JS file\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return HLCSeriesDefaults;\n    });\n    _registerModule(_modules, 'Series/HLC/HLCSeries.js', [_modules['Series/HLC/HLCPoint.js'], _modules['Series/HLC/HLCSeriesDefaults.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (HLCPoint, HLCSeriesDefaults, SeriesRegistry, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Pawel Lysy\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n            var extendStatics = function (d, b) {\n                extendStatics = Object.setPrototypeOf ||\n                    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                    function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                if (typeof b !== \"function\" && b !== null)\n                    throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var ColumnSeries = SeriesRegistry.seriesTypes.column;\n        var extend = U.extend, merge = U.merge;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The hlc series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.hlc\n         *\n         * @augments Highcharts.Series\n         */\n        var HLCSeries = /** @class */ (function (_super) {\n            __extends(HLCSeries, _super);\n            function HLCSeries() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Extend the path if close is not between high and low.\n             *\n             * @param {SVGPath} path the path array of the point\n             * @param {number} halfStrokeWidth\n             * @param {number} value value of the point to which the stem should be extended\n             */\n            HLCSeries.prototype.extendStem = function (path, halfStrokeWidth, value) {\n                var start = path[0];\n                var end = path[1];\n                // We don't need to worry about crisp - close value\n                // is already crisped and halfStrokeWidth should remove it.\n                if (typeof start[2] === 'number') {\n                    start[2] = Math.max(value + halfStrokeWidth, start[2]);\n                }\n                if (typeof end[2] === 'number') {\n                    end[2] = Math.min(value - halfStrokeWidth, end[2]);\n                }\n            };\n            /**\n             * Function to create SVGPath of the point based on the\n             * plot positions of this point.\n             * @private\n             */\n            HLCSeries.prototype.getPointPath = function (point, graphic) {\n                // crisp vector coordinates\n                var strokeWidth = graphic.strokeWidth(), series = point.series, crispCorr = (strokeWidth % 2) / 2, \n                // #2596:\n                crispX = Math.round(point.plotX) - crispCorr, halfWidth = Math.round(point.shapeArgs.width / 2);\n                var plotClose = point.plotClose;\n                // the vertical stem\n                var path = [\n                    ['M', crispX, Math.round(point.yBottom)],\n                    ['L', crispX, Math.round(point.plotHigh)]\n                ];\n                // close\n                if (point.close !== null) {\n                    plotClose = Math.round(point.plotClose) + crispCorr;\n                    path.push(['M', crispX, plotClose], ['L', crispX + halfWidth, plotClose]);\n                    series.extendStem(path, strokeWidth / 2, plotClose);\n                }\n                return path;\n            };\n            /**\n             * Draw single point\n             * @private\n             */\n            HLCSeries.prototype.drawSinglePoint = function (point) {\n                var series = point.series, chart = series.chart;\n                var path, graphic = point.graphic;\n                if (typeof point.plotY !== 'undefined') {\n                    // Create and/or update the graphic\n                    if (!graphic) {\n                        point.graphic = graphic = chart.renderer.path()\n                            .add(series.group);\n                    }\n                    if (!chart.styledMode) {\n                        graphic.attr(series.pointAttribs(point, (point.selected && 'select'))); // #3897\n                    }\n                    // crisp vector coordinates\n                    path = series.getPointPath(point, graphic);\n                    graphic[!graphic ? 'attr' : 'animate']({ d: path })\n                        .addClass(point.getClassName(), true);\n                }\n            };\n            /**\n             * Draw the data points\n             * @private\n             */\n            HLCSeries.prototype.drawPoints = function () {\n                this.points.forEach(this.drawSinglePoint);\n            };\n            /**\n             * @private\n             * @function Highcharts.seriesTypes.hlc#init\n             */\n            HLCSeries.prototype.init = function () {\n                _super.prototype.init.apply(this, arguments);\n                this.options.stacking = void 0; // #8817\n            };\n            /**\n             * Postprocess mapping between options and SVG attributes\n             * @private\n             */\n            HLCSeries.prototype.pointAttribs = function (point, state) {\n                var attribs = _super.prototype.pointAttribs.call(this, point, state);\n                delete attribs.fill;\n                return attribs;\n            };\n            HLCSeries.prototype.toYData = function (point) {\n                // return a plain array for speedy calculation\n                return [point.high, point.low, point.close];\n            };\n            /**\n             * Translate data points from raw values x and y to plotX and plotY\n             *\n             * @private\n             * @function Highcharts.seriesTypes.hlc#translate\n             */\n            HLCSeries.prototype.translate = function () {\n                var series = this, yAxis = series.yAxis, names = (this.pointArrayMap && this.pointArrayMap.slice()) || [], translated = names.map(function (name) {\n                    return \"plot\".concat(name.charAt(0).toUpperCase() + name.slice(1));\n                });\n                translated.push('yBottom');\n                names.push('low');\n                _super.prototype.translate.apply(series);\n                // Do the translation\n                series.points.forEach(function (point) {\n                    names.forEach(function (name, i) {\n                        var value = point[name];\n                        if (value !== null) {\n                            if (series.dataModify) {\n                                value = series.dataModify.modifyValue(value);\n                            }\n                            point[translated[i]] =\n                                yAxis.toPixels(value, true);\n                        }\n                    });\n                    // Align the tooltip to the high value to avoid covering the\n                    // point\n                    point.tooltipPos[1] =\n                        point.plotHigh + yAxis.pos - series.chart.plotTop;\n                });\n            };\n            /* *\n             *\n             *  Static Properties\n             *\n             * */\n            HLCSeries.defaultOptions = merge(ColumnSeries.defaultOptions, HLCSeriesDefaults);\n            return HLCSeries;\n        }(ColumnSeries));\n        extend(HLCSeries.prototype, {\n            pointClass: HLCPoint,\n            animate: null,\n            directTouch: false,\n            pointArrayMap: ['high', 'low', 'close'],\n            pointAttrToOptions: {\n                stroke: 'color',\n                'stroke-width': 'lineWidth'\n            },\n            pointValKey: 'close'\n        });\n        SeriesRegistry.registerSeriesType('hlc', HLCSeries);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return HLCSeries;\n    });\n    _registerModule(_modules, 'Series/OHLC/OHLCPoint.js', [_modules['Core/Series/SeriesRegistry.js']], function (SeriesRegistry) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n            var extendStatics = function (d, b) {\n                extendStatics = Object.setPrototypeOf ||\n                    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                    function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                if (typeof b !== \"function\" && b !== null)\n                    throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var HLCSeries = SeriesRegistry.seriesTypes.hlc;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        var OHLCPoint = /** @class */ (function (_super) {\n            __extends(OHLCPoint, _super);\n            function OHLCPoint() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Extend the parent method by adding up or down to the class name.\n             * @private\n             * @function Highcharts.seriesTypes.ohlc#getClassName\n             */\n            OHLCPoint.prototype.getClassName = function () {\n                return _super.prototype.getClassName.call(this) +\n                    (this.open < this.close ?\n                        ' highcharts-point-up' :\n                        ' highcharts-point-down');\n            };\n            /**\n             * Save upColor as point color (#14826).\n             * @private\n             * @function Highcharts.seriesTypes.ohlc#resolveUpColor\n             */\n            OHLCPoint.prototype.resolveUpColor = function () {\n                if (this.open < this.close &&\n                    !this.options.color &&\n                    this.series.options.upColor) {\n                    this.color = this.series.options.upColor;\n                }\n            };\n            /**\n             * Extend the parent method by saving upColor.\n             * @private\n             * @function Highcharts.seriesTypes.ohlc#resolveColor\n             */\n            OHLCPoint.prototype.resolveColor = function () {\n                _super.prototype.resolveColor.call(this);\n                if (!this.series.is('heikinashi')) {\n                    this.resolveUpColor();\n                }\n            };\n            /**\n             * Extend the parent method by saving upColor.\n             * @private\n             * @function Highcharts.seriesTypes.ohlc#getZone\n             *\n             * @return {Highcharts.SeriesZonesOptionsObject}\n             *         The zone item.\n             */\n            OHLCPoint.prototype.getZone = function () {\n                var zone = _super.prototype.getZone.call(this);\n                this.resolveUpColor();\n                return zone;\n            };\n            /**\n             * Extend the parent method by resolving up/down colors (#15849)\n             * @private\n             **/\n            OHLCPoint.prototype.applyOptions = function () {\n                _super.prototype.applyOptions.apply(this, arguments);\n                if (this.resolveColor) {\n                    this.resolveColor();\n                }\n                return this;\n            };\n            return OHLCPoint;\n        }(HLCSeries.prototype.pointClass));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return OHLCPoint;\n    });\n    _registerModule(_modules, 'Series/OHLC/OHLCSeriesDefaults.js', [], function () {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * An OHLC chart is a style of financial chart used to describe price\n         * movements over time. It displays open, high, low and close values per\n         * data point.\n         *\n         * @sample stock/demo/ohlc\n         *         OHLC chart\n         *\n         * @extends      plotOptions.hlc\n         * @product      highstock\n         * @optionparent plotOptions.ohlc\n         */\n        var OHLCSeriesDefaults = {\n            /**\n             * @type      {Highcharts.DataGroupingApproximationValue|Function}\n             * @default   ohlc\n             * @product   highstock\n             * @apioption plotOptions.ohlc.dataGrouping.approximation\n             */\n            /**\n             * Determines which one of  `open`, `high`, `low`, `close` values should\n             * be represented as `point.y`, which is later used to set dataLabel\n             * position and [compare](#plotOptions.series.compare).\n             *\n             * @declare    Highcharts.OptionsPointValKeyValue\n             * @default    close\n             * @validvalue [\"open\", \"high\", \"low\", \"close\"]\n             * @product    highstock\n             * @apioption  plotOptions.ohlc.pointValKey\n             */\n            /**\n             * Line color for up points.\n             *\n             * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             * @product   highstock\n             * @apioption plotOptions.ohlc.upColor\n             */\n            tooltip: {\n                pointFormat: '<span style=\"color:{point.color}\">\\u25CF</span> ' +\n                    '<b> {series.name}</b><br/>' +\n                    'Open: {point.open}<br/>' +\n                    'High: {point.high}<br/>' +\n                    'Low: {point.low}<br/>' +\n                    'Close: {point.close}<br/>'\n            }\n        };\n        /**\n         * The parameter allows setting line series type and use OHLC indicators.\n         * Data in OHLC format is required.\n         *\n         * @sample {highstock} stock/indicators/use-ohlc-data\n         *         Use OHLC data format to plot line chart\n         *\n         * @type      {boolean}\n         * @product   highstock\n         * @apioption plotOptions.line.useOhlcData\n         */\n        /**\n         * A `ohlc` series. If the [type](#series.ohlc.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.ohlc\n         * @excluding dataParser, dataURL\n         * @product   highstock\n         * @apioption series.ohlc\n         */\n        /**\n         * An array of data points for the series. For the `ohlc` series type,\n         * points can be given in the following ways:\n         *\n         * 1. An array of arrays with 5 or 4 values. In this case, the values correspond\n         *    to `x,open,high,low,close`. If the first value is a string, it is applied\n         *    as the name of the point, and the `x` value is inferred. The `x` value can\n         *    also be omitted, in which case the inner arrays should be of length 4\\.\n         *    Then the `x` value is automatically calculated, either starting at 0 and\n         *    incremented by 1, or from `pointStart` and `pointInterval` given in the\n         *    series options.\n         *    ```js\n         *    data: [\n         *        [0, 6, 5, 6, 7],\n         *        [1, 9, 4, 8, 2],\n         *        [2, 6, 3, 4, 10]\n         *    ]\n         *    ```\n         *\n         * 2. An array of objects with named values. The following snippet shows only a\n         *    few settings, see the complete options set below. If the total number of\n         *    data points exceeds the series'\n         *    [turboThreshold](#series.ohlc.turboThreshold), this option is not\n         *    available.\n         *    ```js\n         *    data: [{\n         *        x: 1,\n         *        open: 3,\n         *        high: 4,\n         *        low: 5,\n         *        close: 2,\n         *        name: \"Point2\",\n         *        color: \"#00FF00\"\n         *    }, {\n         *        x: 1,\n         *        open: 4,\n         *        high: 3,\n         *        low: 6,\n         *        close: 7,\n         *        name: \"Point1\",\n         *        color: \"#FF00FF\"\n         *    }]\n         *    ```\n         *\n         * @type      {Array<Array<(number|string),number,number,number>|Array<(number|string),number,number,number,number>|*>}\n         * @extends   series.arearange.data\n         * @excluding y, marker\n         * @product   highstock\n         * @apioption series.ohlc.data\n         */\n        /**\n         * The closing value of each data point.\n         *\n         * @type      {number}\n         * @product   highstock\n         * @apioption series.ohlc.data.close\n         */\n        /**\n         * The opening value of each data point.\n         *\n         * @type      {number}\n         * @product   highstock\n         * @apioption series.ohlc.data.open\n         */\n        ''; // adds doclets above to transpiled\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return OHLCSeriesDefaults;\n    });\n    _registerModule(_modules, 'Series/OHLC/OHLCSeries.js', [_modules['Core/Globals.js'], _modules['Series/OHLC/OHLCPoint.js'], _modules['Series/OHLC/OHLCSeriesDefaults.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (H, OHLCPoint, OHLCSeriesDefaults, SeriesRegistry, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n            var extendStatics = function (d, b) {\n                extendStatics = Object.setPrototypeOf ||\n                    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                    function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                if (typeof b !== \"function\" && b !== null)\n                    throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var composed = H.composed;\n        var HLCSeries = SeriesRegistry.seriesTypes.hlc;\n        var addEvent = U.addEvent, extend = U.extend, merge = U.merge, pushUnique = U.pushUnique;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function onSeriesAfterSetOptions(e) {\n            var options = e.options, dataGrouping = options.dataGrouping;\n            if (dataGrouping &&\n                options.useOhlcData &&\n                options.id !== 'highcharts-navigator-series') {\n                dataGrouping.approximation = 'ohlc';\n            }\n        }\n        /**\n         * Add useOhlcData option\n         * @private\n         */\n        function onSeriesInit(eventOptions) {\n            // eslint-disable-next-line no-invalid-this\n            var series = this, options = eventOptions.options;\n            if (options.useOhlcData &&\n                options.id !== 'highcharts-navigator-series') {\n                extend(series, {\n                    pointValKey: OHLCSeries.prototype.pointValKey,\n                    // keys: ohlcProto.keys, // @todo potentially nonsense\n                    pointArrayMap: OHLCSeries.prototype.pointArrayMap,\n                    toYData: OHLCSeries.prototype.toYData\n                });\n            }\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The ohlc series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.ohlc\n         *\n         * @augments Highcharts.Series\n         */\n        var OHLCSeries = /** @class */ (function (_super) {\n            __extends(OHLCSeries, _super);\n            function OHLCSeries() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            /* *\n             *\n             *  Static Functions\n             *\n             * */\n            OHLCSeries.compose = function (SeriesClass) {\n                var _args = [];\n                for (var _i = 1; _i < arguments.length; _i++) {\n                    _args[_i - 1] = arguments[_i];\n                }\n                if (pushUnique(composed, 'OHLCSeries')) {\n                    addEvent(SeriesClass, 'afterSetOptions', onSeriesAfterSetOptions);\n                    addEvent(SeriesClass, 'init', onSeriesInit);\n                }\n            };\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            OHLCSeries.prototype.getPointPath = function (point, graphic) {\n                var path = _super.prototype.getPointPath.call(this, point, graphic), strokeWidth = graphic.strokeWidth(), crispCorr = (strokeWidth % 2) / 2, crispX = Math.round(point.plotX) - crispCorr, halfWidth = Math.round(point.shapeArgs.width / 2);\n                var plotOpen = point.plotOpen;\n                // crisp vector coordinates\n                if (point.open !== null) {\n                    plotOpen = Math.round(point.plotOpen) + crispCorr;\n                    path.push(['M', crispX, plotOpen], ['L', crispX - halfWidth, plotOpen]);\n                    _super.prototype.extendStem.call(this, path, strokeWidth / 2, plotOpen);\n                }\n                return path;\n            };\n            /**\n             * Postprocess mapping between options and SVG attributes\n             * @private\n             */\n            OHLCSeries.prototype.pointAttribs = function (point, state) {\n                var attribs = _super.prototype.pointAttribs.call(this, point, state), options = this.options;\n                delete attribs.fill;\n                if (!point.options.color &&\n                    options.upColor &&\n                    point.open < point.close) {\n                    attribs.stroke = options.upColor;\n                }\n                return attribs;\n            };\n            OHLCSeries.prototype.toYData = function (point) {\n                // return a plain array for speedy calculation\n                return [point.open, point.high, point.low, point.close];\n            };\n            /* *\n             *\n             *  Static Properties\n             *\n             * */\n            OHLCSeries.defaultOptions = merge(HLCSeries.defaultOptions, OHLCSeriesDefaults);\n            return OHLCSeries;\n        }(HLCSeries));\n        extend(OHLCSeries.prototype, {\n            pointClass: OHLCPoint,\n            pointArrayMap: ['open', 'high', 'low', 'close']\n        });\n        SeriesRegistry.registerSeriesType('ohlc', OHLCSeries);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return OHLCSeries;\n    });\n    _registerModule(_modules, 'Series/Candlestick/CandlestickSeriesDefaults.js', [], function () {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A candlestick chart is a style of financial chart used to describe\n         * price movements over time.\n         *\n         * @sample stock/demo/candlestick/\n         *         Candlestick chart\n         *\n         * @extends      plotOptions.ohlc\n         * @excluding    borderColor,borderRadius,borderWidth\n         * @product      highstock\n         * @optionparent plotOptions.candlestick\n         */\n        var CandlestickSeriesDefaults = {\n            /**\n             * The specific line color for up candle sticks. The default is to\n             * inherit the general `lineColor` setting.\n             *\n             * @sample {highstock} stock/plotoptions/candlestick-linecolor/\n             *         Candlestick line colors\n             *\n             * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             * @since     1.3.6\n             * @product   highstock\n             * @apioption plotOptions.candlestick.upLineColor\n             */\n            states: {\n                /**\n                 * @extends plotOptions.column.states.hover\n                 * @product highstock\n                 */\n                hover: {\n                    /**\n                     * The pixel width of the line/border around the\n                     * candlestick.\n                     *\n                     * @product highstock\n                     */\n                    lineWidth: 2\n                }\n            },\n            /**\n             * @type    {number|null}\n             * @product highstock\n             */\n            threshold: null,\n            /**\n             * The color of the line/border of the candlestick.\n             *\n             * In styled mode, the line stroke can be set with the\n             * `.highcharts-candlestick-series .highcahrts-point` rule.\n             *\n             * @see [upLineColor](#plotOptions.candlestick.upLineColor)\n             *\n             * @sample {highstock} stock/plotoptions/candlestick-linecolor/\n             *         Candlestick line colors\n             *\n             * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             * @default #000000\n             * @product highstock\n             */\n            lineColor: \"#000000\" /* Palette.neutralColor100 */,\n            /**\n             * The pixel width of the candlestick line/border. Defaults to `1`.\n             *\n             *\n             * In styled mode, the line stroke width can be set with the\n             * `.highcharts-candlestick-series .highcahrts-point` rule.\n             *\n             * @product highstock\n             */\n            lineWidth: 1,\n            /**\n             * The fill color of the candlestick when values are rising.\n             *\n             * In styled mode, the up color can be set with the\n             * `.highcharts-candlestick-series .highcharts-point-up` rule.\n             *\n             * @sample {highstock} stock/plotoptions/candlestick-color/\n             *         Custom colors\n             * @sample {highstock} highcharts/css/candlestick/\n             *         Colors in styled mode\n             *\n             * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             * @default #ffffff\n             * @product highstock\n            */\n            upColor: \"#ffffff\" /* Palette.backgroundColor */,\n            /**\n             * @product highstock\n             */\n            stickyTracking: true\n        };\n        /**\n         * A `candlestick` series. If the [type](#series.candlestick.type)\n         * option is not specified, it is inherited from [chart.type](\n         * #chart.type).\n         *\n         * @type      {*}\n         * @extends   series,plotOptions.candlestick\n         * @excluding dataParser, dataURL, marker\n         * @product   highstock\n         * @apioption series.candlestick\n         */\n        /**\n         * An array of data points for the series. For the `candlestick` series\n         * type, points can be given in the following ways:\n         *\n         * 1. An array of arrays with 5 or 4 values. In this case, the values correspond\n         *    to `x,open,high,low,close`. If the first value is a string, it is applied\n         *    as the name of the point, and the `x` value is inferred. The `x` value can\n         *    also be omitted, in which case the inner arrays should be of length 4.\n         *    Then the `x` value is automatically calculated, either starting at 0 and\n         *    incremented by 1, or from `pointStart` and `pointInterval` given in the\n         *    series options.\n         *    ```js\n         *    data: [\n         *        [0, 7, 2, 0, 4],\n         *        [1, 1, 4, 2, 8],\n         *        [2, 3, 3, 9, 3]\n         *    ]\n         *    ```\n         *\n         * 2. An array of objects with named values. The following snippet shows only a\n         *    few settings, see the complete options set below. If the total number of\n         *    data points exceeds the series'\n         *    [turboThreshold](#series.candlestick.turboThreshold), this option is not\n         *    available.\n         *    ```js\n         *    data: [{\n         *        x: 1,\n         *        open: 9,\n         *        high: 2,\n         *        low: 4,\n         *        close: 6,\n         *        name: \"Point2\",\n         *        color: \"#00FF00\"\n         *    }, {\n         *        x: 1,\n         *        open: 1,\n         *        high: 4,\n         *        low: 7,\n         *        close: 7,\n         *        name: \"Point1\",\n         *        color: \"#FF00FF\"\n         *    }]\n         *    ```\n         *\n         * @type      {Array<Array<(number|string),number,number,number>|Array<(number|string),number,number,number,number>|*>}\n         * @extends   series.ohlc.data\n         * @excluding y\n         * @product   highstock\n         * @apioption series.candlestick.data\n         */\n        ''; // adds doclets above to transpiled\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return CandlestickSeriesDefaults;\n    });\n    _registerModule(_modules, 'Series/Candlestick/CandlestickSeries.js', [_modules['Series/Candlestick/CandlestickSeriesDefaults.js'], _modules['Core/Defaults.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (CandlestickSeriesDefaults, D, SeriesRegistry, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n            var extendStatics = function (d, b) {\n                extendStatics = Object.setPrototypeOf ||\n                    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                    function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                if (typeof b !== \"function\" && b !== null)\n                    throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var defaultOptions = D.defaultOptions;\n        var _a = SeriesRegistry.seriesTypes, ColumnSeries = _a.column, OHLCSeries = _a.ohlc;\n        var merge = U.merge;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The candlestick series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.candlestick\n         *\n         * @augments Highcharts.seriesTypes.ohlc\n         */\n        var CandlestickSeries = /** @class */ (function (_super) {\n            __extends(CandlestickSeries, _super);\n            function CandlestickSeries() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Postprocess mapping between options and SVG attributes\n             *\n             * @private\n             * @function Highcharts.seriesTypes.candlestick#pointAttribs\n             */\n            CandlestickSeries.prototype.pointAttribs = function (point, state) {\n                var attribs = ColumnSeries.prototype.pointAttribs.call(this, point, state), options = this.options, isUp = point.open < point.close, stroke = options.lineColor || this.color, color = point.color || this.color; // (#14826)\n                attribs['stroke-width'] = options.lineWidth;\n                attribs.fill = point.options.color ||\n                    (isUp ? (options.upColor || color) : color);\n                attribs.stroke = point.options.lineColor ||\n                    (isUp ? (options.upLineColor || stroke) : stroke);\n                // Select or hover states\n                if (state) {\n                    var stateOptions = options.states[state];\n                    attribs.fill = stateOptions.color || attribs.fill;\n                    attribs.stroke = stateOptions.lineColor || attribs.stroke;\n                    attribs['stroke-width'] =\n                        stateOptions.lineWidth || attribs['stroke-width'];\n                }\n                return attribs;\n            };\n            /**\n             * Draw the data points.\n             *\n             * @private\n             * @function Highcharts.seriesTypes.candlestick#drawPoints\n             */\n            CandlestickSeries.prototype.drawPoints = function () {\n                var series = this, points = series.points, chart = series.chart, reversedYAxis = series.yAxis.reversed;\n                for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n                    var point = points_1[_i];\n                    var graphic = point.graphic, plotOpen = void 0, plotClose = void 0, topBox = void 0, bottomBox = void 0, hasTopWhisker = void 0, hasBottomWhisker = void 0, crispCorr = void 0, crispX = void 0, path = void 0, halfWidth = void 0;\n                    var isNew = !graphic;\n                    if (typeof point.plotY !== 'undefined') {\n                        if (!graphic) {\n                            point.graphic = graphic = chart.renderer.path()\n                                .add(series.group);\n                        }\n                        if (!series.chart.styledMode) {\n                            graphic\n                                .attr(series.pointAttribs(point, (point.selected && 'select'))) // #3897\n                                .shadow(series.options.shadow);\n                        }\n                        // Crisp vector coordinates\n                        crispCorr = (graphic.strokeWidth() % 2) / 2;\n                        // #2596:\n                        crispX = Math.round(point.plotX) - crispCorr;\n                        plotOpen = point.plotOpen;\n                        plotClose = point.plotClose;\n                        topBox = Math.min(plotOpen, plotClose);\n                        bottomBox = Math.max(plotOpen, plotClose);\n                        halfWidth = Math.round(point.shapeArgs.width / 2);\n                        hasTopWhisker = reversedYAxis ?\n                            bottomBox !== point.yBottom :\n                            Math.round(topBox) !==\n                                Math.round(point.plotHigh);\n                        hasBottomWhisker = reversedYAxis ?\n                            Math.round(topBox) !==\n                                Math.round(point.plotHigh) :\n                            bottomBox !== point.yBottom;\n                        topBox = Math.round(topBox) + crispCorr;\n                        bottomBox = Math.round(bottomBox) + crispCorr;\n                        // Create the path. Due to a bug in Chrome 49, the path is\n                        // first instantiated with no values, then the values\n                        // pushed. For unknown reasons, instantiating the path array\n                        // with all the values would lead to a crash when updating\n                        // frequently (#5193).\n                        path = [];\n                        path.push(['M', crispX - halfWidth, bottomBox], ['L', crispX - halfWidth, topBox], ['L', crispX + halfWidth, topBox], ['L', crispX + halfWidth, bottomBox], ['Z'], // Ensure a nice rectangle #2602\n                        ['M', crispX, topBox], [\n                            'L',\n                            // #460, #2094\n                            crispX,\n                            hasTopWhisker ?\n                                Math.round(reversedYAxis ?\n                                    point.yBottom :\n                                    point.plotHigh) :\n                                topBox\n                        ], ['M', crispX, bottomBox], [\n                            'L',\n                            // #460, #2094\n                            crispX,\n                            hasBottomWhisker ?\n                                Math.round(reversedYAxis ?\n                                    point.plotHigh :\n                                    point.yBottom) :\n                                bottomBox\n                        ]);\n                        graphic[isNew ? 'attr' : 'animate']({ d: path })\n                            .addClass(point.getClassName(), true);\n                    }\n                }\n            };\n            /* *\n             *\n             *  Static Properties\n             *\n             * */\n            CandlestickSeries.defaultOptions = merge(OHLCSeries.defaultOptions, defaultOptions.plotOptions, { tooltip: OHLCSeries.defaultOptions.tooltip }, CandlestickSeriesDefaults);\n            return CandlestickSeries;\n        }(OHLCSeries));\n        SeriesRegistry.registerSeriesType('candlestick', CandlestickSeries);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return CandlestickSeries;\n    });\n    _registerModule(_modules, 'Series/Flags/FlagsPoint.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n            var extendStatics = function (d, b) {\n                extendStatics = Object.setPrototypeOf ||\n                    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                    function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                if (typeof b !== \"function\" && b !== null)\n                    throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var ColumnPoint = SeriesRegistry.seriesTypes.column.prototype.pointClass;\n        var isNumber = U.isNumber;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        var FlagsPoint = /** @class */ (function (_super) {\n            __extends(FlagsPoint, _super);\n            function FlagsPoint() {\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                var _this = _super !== null && _super.apply(this, arguments) || this;\n                _this.ttBelow = false;\n                return _this;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * @private\n             */\n            FlagsPoint.prototype.isValid = function () {\n                // #9233 - Prevent from treating flags as null points (even if\n                // they have no y values defined).\n                return isNumber(this.y) || typeof this.y === 'undefined';\n            };\n            /**\n             * @private\n             */\n            FlagsPoint.prototype.hasNewShapeType = function () {\n                var shape = this.options.shape || this.series.options.shape;\n                return this.graphic && shape && shape !== this.graphic.symbolKey;\n            };\n            return FlagsPoint;\n        }(ColumnPoint));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return FlagsPoint;\n    });\n    _registerModule(_modules, 'Series/Flags/FlagsSeriesDefaults.js', [], function () {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * Flags are used to mark events in stock charts. They can be added on the\n         * timeline, or attached to a specific series.\n         *\n         * @sample stock/demo/flags-general/\n         *         Flags on a line series\n         *\n         * @extends      plotOptions.column\n         * @excluding    animation, borderColor, borderRadius, borderWidth,\n         *               colorByPoint, cropThreshold, dataGrouping, pointPadding,\n         *               pointWidth, turboThreshold\n         * @product      highstock\n         * @optionparent plotOptions.flags\n         */\n        var FlagsSeriesDefaults = {\n            /**\n             * In case the flag is placed on a series, on what point key to place\n             * it. Line and columns have one key, `y`. In range or OHLC-type series,\n             * however, the flag can optionally be placed on the `open`, `high`,\n             * `low` or `close` key.\n             *\n             * @sample {highstock} stock/plotoptions/flags-onkey/\n             *         Range series, flag on high\n             *\n             * @type       {string}\n             * @default    y\n             * @since      4.2.2\n             * @product    highstock\n             * @validvalue [\"y\", \"open\", \"high\", \"low\", \"close\"]\n             * @apioption  plotOptions.flags.onKey\n             */\n            /**\n             * The id of the series that the flags should be drawn on. If no id\n             * is given, the flags are drawn on the x axis.\n             *\n             * @sample {highstock} stock/plotoptions/flags/\n             *         Flags on series and on x axis\n             *\n             * @type      {string}\n             * @product   highstock\n             * @apioption plotOptions.flags.onSeries\n             */\n            pointRange: 0,\n            /**\n             * Whether the flags are allowed to overlap sideways. If `false`, the\n             * flags are moved sideways using an algorithm that seeks to place every\n             * flag as close as possible to its original position.\n             *\n             * @sample {highstock} stock/plotoptions/flags-allowoverlapx\n             *         Allow sideways overlap\n             *\n             * @since 6.0.4\n             */\n            allowOverlapX: false,\n            /**\n             * The shape of the marker. Can be one of \"flag\", \"circlepin\",\n             * \"squarepin\", or an image of the format `url(/path-to-image.jpg)`.\n             * Individual shapes can also be set for each point.\n             *\n             * @sample {highstock} stock/plotoptions/flags/\n             *         Different shapes\n             *\n             * @type    {Highcharts.FlagsShapeValue}\n             * @product highstock\n             */\n            shape: 'flag',\n            /**\n             * When multiple flags in the same series fall on the same value, this\n             * number determines the vertical offset between them.\n             *\n             * @sample {highstock} stock/plotoptions/flags-stackdistance/\n             *         A greater stack distance\n             *\n             * @product highstock\n             */\n            stackDistance: 12,\n            /**\n             * Text alignment for the text inside the flag.\n             *\n             * @since      5.0.0\n             * @product    highstock\n             * @validvalue [\"left\", \"center\", \"right\"]\n             */\n            textAlign: 'center',\n            /**\n             * Specific tooltip options for flag series. Flag series tooltips are\n             * different from most other types in that a flag doesn't have a data\n             * value, so the tooltip rather displays the `text` option for each\n             * point.\n             *\n             * @extends   plotOptions.series.tooltip\n             * @excluding changeDecimals, valueDecimals, valuePrefix, valueSuffix\n             * @product   highstock\n             */\n            tooltip: {\n                pointFormat: '{point.text}'\n            },\n            /**\n             * @type {number|null}\n             */\n            threshold: null,\n            /**\n             * The text to display on each flag. This can be defined on series\n             * level, or individually for each point. Defaults to `\"A\"`.\n             *\n             * @type      {string}\n             * @default   A\n             * @product   highstock\n             * @apioption plotOptions.flags.title\n             */\n            /**\n             * The y position of the top left corner of the flag relative to either\n             * the series (if onSeries is defined), or the x axis. Defaults to\n             * `-30`.\n             *\n             * @product highstock\n             */\n            y: -30,\n            /**\n             * Whether to use HTML to render the flag texts. Using HTML allows for\n             * advanced formatting, images and reliable bi-directional text\n             * rendering. Note that exported images won't respect the HTML, and that\n             * HTML won't respect Z-index settings.\n             *\n             * @type      {boolean}\n             * @default   false\n             * @since     1.3\n             * @product   highstock\n             * @apioption plotOptions.flags.useHTML\n             */\n            /**\n             * Fixed width of the flag's shape. By default, width is autocalculated\n             * according to the flag's title.\n             *\n             * @sample {highstock} stock/demo/flags-shapes/\n             *         Flags with fixed width\n             *\n             * @type      {number}\n             * @product   highstock\n             * @apioption plotOptions.flags.width\n             */\n            /**\n             * Fixed height of the flag's shape. By default, height is\n             * autocalculated according to the flag's title.\n             *\n             * @type      {number}\n             * @product   highstock\n             * @apioption plotOptions.flags.height\n             */\n            /**\n             * The fill color for the flags.\n             *\n             * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             * @product highstock\n             */\n            fillColor: \"#ffffff\" /* Palette.backgroundColor */,\n            /**\n             * The color of the line/border of the flag.\n             *\n             * In styled mode, the stroke is set in the\n             * `.highcharts-flag-series.highcharts-point` rule.\n             *\n             * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             * @default   #000000\n             * @product   highstock\n             * @apioption plotOptions.flags.lineColor\n             */\n            /**\n             * The pixel width of the flag's line/border.\n             *\n             * @product highstock\n             */\n            lineWidth: 1,\n            states: {\n                /**\n                 * @extends plotOptions.column.states.hover\n                 * @product highstock\n                 */\n                hover: {\n                    /**\n                     * The color of the line/border of the flag.\n                     *\n                     * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n                     * @product highstock\n                     */\n                    lineColor: \"#000000\" /* Palette.neutralColor100 */,\n                    /**\n                     * The fill or background color of the flag.\n                     *\n                     * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n                     * @product highstock\n                     */\n                    fillColor: \"#ccd3ff\" /* Palette.highlightColor20 */\n                }\n            },\n            /**\n             * The text styles of the flag.\n             *\n             * In styled mode, the styles are set in the\n             * `.highcharts-flag-series .highcharts-point` rule.\n             *\n             * @type    {Highcharts.CSSObject}\n             * @default {\"fontSize\": \"11px\", \"fontWeight\": \"bold\"}\n             * @product highstock\n             */\n            style: {\n                /** @ignore-option */\n                fontSize: '0.7em',\n                /** @ignore-option */\n                fontWeight: 'bold'\n            }\n        };\n        /**\n         * A `flags` series. If the [type](#series.flags.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.flags\n         * @excluding animation, borderColor, borderRadius, borderWidth, colorByPoint,\n         *            connectNulls, cropThreshold, dashStyle, dataGrouping, dataParser,\n         *            dataURL, gapSize, gapUnit, linecap, lineWidth, marker,\n         *            pointPadding, pointWidth, step, turboThreshold, useOhlcData\n         * @product   highstock\n         * @apioption series.flags\n         */\n        /**\n         * An array of data points for the series. For the `flags` series type,\n         * points can be given in the following ways:\n         *\n         * 1. An array of objects with named values. The following snippet shows only a\n         *    few settings, see the complete options set below. If the total number of\n         *    data points exceeds the series'\n         *    [turboThreshold](#series.flags.turboThreshold), this option is not\n         *    available.\n         *    ```js\n         *    data: [{\n         *        x: 1,\n         *        title: \"A\",\n         *        text: \"First event\"\n         *    }, {\n         *        x: 1,\n         *        title: \"B\",\n         *        text: \"Second event\"\n         *    }]\n         *    ```\n         *\n         * @type      {Array<*>}\n         * @extends   series.line.data\n         * @excluding dataLabels, marker, name, y\n         * @product   highstock\n         * @apioption series.flags.data\n         */\n        /**\n         * The fill color of an individual flag. By default it inherits from\n         * the series color.\n         *\n         * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n         * @product   highstock\n         * @apioption series.flags.data.fillColor\n         */\n        /**\n         * The longer text to be shown in the flag's tooltip.\n         *\n         * @type      {string}\n         * @product   highstock\n         * @apioption series.flags.data.text\n         */\n        /**\n         * The short text to be shown on the flag.\n         *\n         * @type      {string}\n         * @product   highstock\n         * @apioption series.flags.data.title\n         */\n        ''; // keeps doclets above in transpiled file\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return FlagsSeriesDefaults;\n    });\n    _registerModule(_modules, 'Series/Flags/FlagsSymbols.js', [_modules['Core/Renderer/RendererRegistry.js']], function (RendererRegistry) {\n        /* *\n         *\n         *  Imports\n         *\n         * */\n        /* *\n         *\n         *  Composition\n         *\n         * */\n        var FlagsSymbols;\n        (function (FlagsSymbols) {\n            /* *\n             *\n             *  Constants\n             *\n             * */\n            var modifiedMembers = [];\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /* eslint-disable valid-jsdoc */\n            /**\n             * @private\n             */\n            function compose(SVGRendererClass) {\n                if (modifiedMembers.indexOf(SVGRendererClass) === -1) {\n                    modifiedMembers.push(SVGRendererClass);\n                    var symbols = SVGRendererClass.prototype.symbols;\n                    symbols.flag = flag;\n                    createPinSymbol(symbols, 'circle');\n                    createPinSymbol(symbols, 'square');\n                }\n                var RendererClass = RendererRegistry.getRendererType();\n                // The symbol callbacks are generated on the SVGRenderer object in all\n                // browsers.\n                if (modifiedMembers.indexOf(RendererClass)) {\n                    modifiedMembers.push(RendererClass);\n                }\n            }\n            FlagsSymbols.compose = compose;\n            /**\n             * Create the flag icon with anchor.\n             * @private\n             */\n            function flag(x, y, w, h, options) {\n                var anchorX = (options && options.anchorX) || x, anchorY = (options && options.anchorY) || y;\n                // To do: unwanted any cast because symbols.circle has wrong type, it\n                // actually returns an SVGPathArray\n                var path = this.circle(anchorX - 1, anchorY - 1, 2, 2);\n                path.push(['M', anchorX, anchorY], ['L', x, y + h], ['L', x, y], ['L', x + w, y], ['L', x + w, y + h], ['L', x, y + h], ['Z']);\n                return path;\n            }\n            /**\n             * Create the circlepin and squarepin icons with anchor.\n             * @private\n             */\n            function createPinSymbol(symbols, shape) {\n                symbols[(shape + 'pin')] = function (x, y, w, h, options) {\n                    var anchorX = options && options.anchorX, anchorY = options && options.anchorY;\n                    var path;\n                    // For single-letter flags, make sure circular flags are not taller\n                    // than their width\n                    if (shape === 'circle' && h > w) {\n                        x -= Math.round((h - w) / 2);\n                        w = h;\n                    }\n                    path = (symbols[shape])(x, y, w, h);\n                    if (anchorX && anchorY) {\n                        /**\n                         * If the label is below the anchor, draw the connecting line\n                         * from the top edge of the label, otherwise start drawing from\n                         * the bottom edge\n                         */\n                        var labelX = anchorX;\n                        if (shape === 'circle') {\n                            labelX = x + w / 2;\n                        }\n                        else {\n                            var startSeg = path[0];\n                            var endSeg = path[1];\n                            if (startSeg[0] === 'M' && endSeg[0] === 'L') {\n                                labelX = (startSeg[1] + endSeg[1]) / 2;\n                            }\n                        }\n                        var labelY = (y > anchorY) ? y : y + h;\n                        path.push([\n                            'M',\n                            labelX,\n                            labelY\n                        ], [\n                            'L',\n                            anchorX,\n                            anchorY\n                        ]);\n                        path = path.concat(symbols.circle(anchorX - 1, anchorY - 1, 2, 2));\n                    }\n                    return path;\n                };\n            }\n        })(FlagsSymbols || (FlagsSymbols = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return FlagsSymbols;\n    });\n    _registerModule(_modules, 'Series/OnSeriesComposition.js', [_modules['Series/Column/ColumnSeries.js'], _modules['Core/Globals.js'], _modules['Core/Series/Series.js'], _modules['Core/Utilities.js']], function (ColumnSeries, H, Series, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var composed = H.composed;\n        var columnProto = ColumnSeries.prototype;\n        var seriesProto = Series.prototype;\n        var defined = U.defined, pushUnique = U.pushUnique, stableSort = U.stableSort;\n        /* *\n         *\n         *  Composition\n         *\n         * */\n        var OnSeriesComposition;\n        (function (OnSeriesComposition) {\n            /* *\n             *\n             *  Declarations\n             *\n             * */\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * @private\n             */\n            function compose(SeriesClass) {\n                if (pushUnique(composed, 'OnSeries')) {\n                    var seriesProto_1 = SeriesClass.prototype;\n                    seriesProto_1.getPlotBox = getPlotBox;\n                    seriesProto_1.translate = translate;\n                }\n                return SeriesClass;\n            }\n            OnSeriesComposition.compose = compose;\n            /**\n             * Override getPlotBox. If the onSeries option is valid, return the plot box\n             * of the onSeries, otherwise proceed as usual.\n             *\n             * @private\n             */\n            function getPlotBox(name) {\n                return seriesProto.getPlotBox.call((this.options.onSeries &&\n                    this.chart.get(this.options.onSeries)) || this, name);\n            }\n            OnSeriesComposition.getPlotBox = getPlotBox;\n            /**\n             * Extend the translate method by placing the point on the related series\n             *\n             * @private\n             */\n            function translate() {\n                var _a, _b;\n                columnProto.translate.apply(this);\n                var series = this, options = series.options, chart = series.chart, points = series.points, optionsOnSeries = options.onSeries, onSeries = (optionsOnSeries &&\n                    chart.get(optionsOnSeries)), step = onSeries && onSeries.options.step, onData = (onSeries && onSeries.points), inverted = chart.inverted, xAxis = series.xAxis, yAxis = series.yAxis;\n                var cursor = points.length - 1, point, lastPoint, onKey = options.onKey || 'y', i = onData && onData.length, xOffset = 0, leftPoint, lastX, rightPoint, currentDataGrouping, distanceRatio;\n                // relate to a master series\n                if (onSeries && onSeries.visible && i) {\n                    xOffset = (onSeries.pointXOffset || 0) + (onSeries.barW || 0) / 2;\n                    currentDataGrouping = onSeries.currentDataGrouping;\n                    lastX = (onData[i - 1].x +\n                        (currentDataGrouping ? currentDataGrouping.totalRange : 0)); // #2374\n                    // sort the data points\n                    stableSort(points, function (a, b) { return (a.x - b.x); });\n                    onKey = 'plot' + onKey[0].toUpperCase() + onKey.substr(1);\n                    var _loop_1 = function () {\n                        leftPoint = onData[i];\n                        point = points[cursor];\n                        point.y = leftPoint.y;\n                        if (leftPoint.x <= point.x &&\n                            typeof leftPoint[onKey] !== 'undefined') {\n                            if (point.x <= lastX) { // #803\n                                point.plotY = leftPoint[onKey];\n                                // interpolate between points, #666\n                                if (leftPoint.x < point.x &&\n                                    !step) {\n                                    rightPoint = onData[i + 1];\n                                    if (rightPoint &&\n                                        typeof rightPoint[onKey] !== 'undefined') {\n                                        // If the series is spline, calculate Y of the\n                                        // point on the bezier line. #19264\n                                        if (defined(point.plotX) &&\n                                            onSeries.is('spline')) {\n                                            leftPoint = leftPoint;\n                                            rightPoint = rightPoint;\n                                            var p0_1 = [\n                                                leftPoint.plotX || 0,\n                                                leftPoint.plotY || 0\n                                            ], p3_1 = [\n                                                rightPoint.plotX || 0,\n                                                rightPoint.plotY || 0\n                                            ], p1_1 = (((_a = leftPoint.controlPoints) === null || _a === void 0 ? void 0 : _a.high) ||\n                                                p0_1), p2_1 = (((_b = rightPoint.controlPoints) === null || _b === void 0 ? void 0 : _b.low) ||\n                                                p3_1), pixelThreshold = 0.25, maxIterations = 100, calculateCoord = function (t, key) { return (\n                                            // The parametric formula for the\n                                            // cubic Bezier curve.\n                                            Math.pow(1 - t, 3) * p0_1[key] +\n                                                3 * (1 - t) * (1 - t) * t *\n                                                    p1_1[key] + 3 * (1 - t) * t * t *\n                                                p2_1[key] + t * t * t * p3_1[key]); };\n                                            var tMin = 0, tMax = 1, t = void 0;\n                                            // Find `t` of the parametric function of\n                                            // the bezier curve for the given `plotX`.\n                                            for (var i_1 = 0; i_1 < maxIterations; i_1++) {\n                                                var tMid = (tMin + tMax) / 2;\n                                                var xMid = calculateCoord(tMid, 0);\n                                                if (xMid === null) {\n                                                    break;\n                                                }\n                                                if (Math.abs(xMid - point.plotX) < pixelThreshold) {\n                                                    t = tMid;\n                                                    break;\n                                                }\n                                                if (xMid < point.plotX) {\n                                                    tMin = tMid;\n                                                }\n                                                else {\n                                                    tMax = tMid;\n                                                }\n                                            }\n                                            if (defined(t)) {\n                                                point.plotY =\n                                                    calculateCoord(t, 1);\n                                                point.y =\n                                                    yAxis.toValue(point.plotY, true);\n                                            }\n                                        }\n                                        else {\n                                            // the distance ratio, between 0 and 1\n                                            distanceRatio =\n                                                (point.x - leftPoint.x) /\n                                                    (rightPoint.x - leftPoint.x);\n                                            point.plotY +=\n                                                distanceRatio *\n                                                    // the plotY distance\n                                                    (rightPoint[onKey] - leftPoint[onKey]);\n                                            point.y +=\n                                                distanceRatio *\n                                                    (rightPoint.y - leftPoint.y);\n                                        }\n                                    }\n                                }\n                            }\n                            cursor--;\n                            i++; // check again for points in the same x position\n                            if (cursor < 0) {\n                                return \"break\";\n                            }\n                        }\n                    };\n                    while (i-- && points[cursor]) {\n                        var state_1 = _loop_1();\n                        if (state_1 === \"break\")\n                            break;\n                    }\n                }\n                // Add plotY position and handle stacking\n                points.forEach(function (point, i) {\n                    var stackIndex;\n                    point.plotX += xOffset; // #2049\n                    // Undefined plotY means the point is either on axis, outside series\n                    // range or hidden series. If the series is outside the range of the\n                    // x axis it should fall through with an undefined plotY, but then\n                    // we must remove the shapeArgs (#847). For inverted charts, we need\n                    // to calculate position anyway, because series.invertGroups is not\n                    // defined\n                    if (typeof point.plotY === 'undefined' || inverted) {\n                        if (point.plotX >= 0 &&\n                            point.plotX <= xAxis.len) {\n                            // We're inside xAxis range\n                            if (inverted) {\n                                point.plotY = xAxis.translate(point.x, 0, 1, 0, 1);\n                                point.plotX = defined(point.y) ?\n                                    yAxis.translate(point.y, 0, 0, 0, 1) :\n                                    0;\n                            }\n                            else {\n                                point.plotY = (xAxis.opposite ? 0 : series.yAxis.len) +\n                                    xAxis.offset; // For the windbarb demo\n                            }\n                        }\n                        else {\n                            point.shapeArgs = {}; // 847\n                        }\n                    }\n                    // if multiple flags appear at the same x, order them into a stack\n                    lastPoint = points[i - 1];\n                    if (lastPoint && lastPoint.plotX === point.plotX) {\n                        if (typeof lastPoint.stackIndex === 'undefined') {\n                            lastPoint.stackIndex = 0;\n                        }\n                        stackIndex = lastPoint.stackIndex + 1;\n                    }\n                    point.stackIndex = stackIndex; // #3639\n                });\n                this.onSeries = onSeries;\n            }\n            OnSeriesComposition.translate = translate;\n        })(OnSeriesComposition || (OnSeriesComposition = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return OnSeriesComposition;\n    });\n    _registerModule(_modules, 'Series/Flags/FlagsSeries.js', [_modules['Series/Flags/FlagsPoint.js'], _modules['Series/Flags/FlagsSeriesDefaults.js'], _modules['Series/Flags/FlagsSymbols.js'], _modules['Core/Globals.js'], _modules['Series/OnSeriesComposition.js'], _modules['Core/Renderer/RendererUtilities.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Renderer/SVG/SVGElement.js'], _modules['Core/Utilities.js']], function (FlagsPoint, FlagsSeriesDefaults, FlagsSymbols, H, OnSeriesComposition, R, SeriesRegistry, SVGElement, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n            var extendStatics = function (d, b) {\n                extendStatics = Object.setPrototypeOf ||\n                    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                    function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                if (typeof b !== \"function\" && b !== null)\n                    throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var noop = H.noop;\n        var distribute = R.distribute;\n        var Series = SeriesRegistry.series, ColumnSeries = SeriesRegistry.seriesTypes.column;\n        var addEvent = U.addEvent, defined = U.defined, extend = U.extend, merge = U.merge, objectEach = U.objectEach, wrap = U.wrap;\n        /* *\n         *\n         *  Classes\n         *\n         * */\n        /**\n         * The Flags series.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.flags\n         *\n         * @augments Highcharts.Series\n         */\n        var FlagsSeries = /** @class */ (function (_super) {\n            __extends(FlagsSeries, _super);\n            function FlagsSeries() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Disable animation, but keep clipping (#8546).\n             * @private\n             */\n            FlagsSeries.prototype.animate = function (init) {\n                if (init) {\n                    this.setClip();\n                }\n            };\n            /**\n             * Draw the markers.\n             * @private\n             */\n            FlagsSeries.prototype.drawPoints = function () {\n                var series = this, points = series.points, chart = series.chart, renderer = chart.renderer, inverted = chart.inverted, options = series.options, optionsY = options.y, yAxis = series.yAxis, boxesMap = {}, boxes = [];\n                var plotX, plotY, shape, i, point, graphic, stackIndex, anchorY, attribs, outsideRight, centered;\n                i = points.length;\n                while (i--) {\n                    point = points[i];\n                    outsideRight =\n                        (inverted ? point.plotY : point.plotX) >\n                            series.xAxis.len;\n                    plotX = point.plotX;\n                    stackIndex = point.stackIndex;\n                    shape = point.options.shape || options.shape;\n                    plotY = point.plotY;\n                    if (typeof plotY !== 'undefined') {\n                        plotY = point.plotY + optionsY -\n                            (typeof stackIndex !== 'undefined' &&\n                                (stackIndex * options.stackDistance));\n                    }\n                    // skip connectors for higher level stacked points\n                    point.anchorX = stackIndex ? void 0 : point.plotX;\n                    anchorY = stackIndex ? void 0 : point.plotY;\n                    centered = shape !== 'flag';\n                    graphic = point.graphic;\n                    // Only draw the point if y is defined and the flag is within\n                    // the visible area\n                    if (typeof plotY !== 'undefined' &&\n                        plotX >= 0 &&\n                        !outsideRight) {\n                        // #15384\n                        if (graphic && point.hasNewShapeType()) {\n                            graphic = graphic.destroy();\n                        }\n                        // Create the flag\n                        if (!graphic) {\n                            graphic = point.graphic = renderer.label('', null, null, shape, null, null, options.useHTML)\n                                .addClass('highcharts-point')\n                                .add(series.markerGroup);\n                            // Add reference to the point for tracker (#6303)\n                            if (point.graphic.div) {\n                                point.graphic.div.point = point;\n                            }\n                            graphic.isNew = true;\n                        }\n                        graphic.attr({\n                            align: centered ? 'center' : 'left',\n                            width: options.width,\n                            height: options.height,\n                            'text-align': options.textAlign\n                        });\n                        if (!chart.styledMode) {\n                            graphic\n                                .attr(series.pointAttribs(point))\n                                .css(merge(options.style, point.style))\n                                .shadow(options.shadow);\n                        }\n                        if (plotX > 0) { // #3119\n                            plotX -= graphic.strokeWidth() % 2; // #4285\n                        }\n                        // Plant the flag\n                        attribs = {\n                            y: plotY,\n                            anchorY: anchorY\n                        };\n                        if (options.allowOverlapX) {\n                            attribs.x = plotX;\n                            attribs.anchorX = point.anchorX;\n                        }\n                        graphic.attr({\n                            text: point.options.title || options.title || 'A'\n                        })[graphic.isNew ? 'attr' : 'animate'](attribs);\n                        // Rig for the distribute function\n                        if (!options.allowOverlapX) {\n                            if (!boxesMap[point.plotX]) {\n                                boxesMap[point.plotX] = {\n                                    align: centered ? 0.5 : 0,\n                                    size: graphic.width || 0,\n                                    target: plotX,\n                                    anchorX: plotX\n                                };\n                            }\n                            else {\n                                boxesMap[point.plotX].size = Math.max(boxesMap[point.plotX].size, graphic.width || 0);\n                            }\n                        }\n                        // Set the tooltip anchor position\n                        point.tooltipPos = [\n                            plotX,\n                            plotY + yAxis.pos - chart.plotTop\n                        ]; // #6327\n                    }\n                    else if (graphic) {\n                        point.graphic = graphic.destroy();\n                    }\n                }\n                // Handle X-dimension overlapping\n                if (!options.allowOverlapX) {\n                    var maxDistance_1 = 100;\n                    objectEach(boxesMap, function (box) {\n                        box.plotX = box.anchorX;\n                        boxes.push(box);\n                        maxDistance_1 = Math.max(box.size, maxDistance_1);\n                    });\n                    // If necessary (for overlapping or long labels)  distribute it\n                    // depending on the label width or a hardcoded value, #16041.\n                    distribute(boxes, inverted ? yAxis.len : this.xAxis.len, maxDistance_1);\n                    for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n                        var point_1 = points_1[_i];\n                        var plotX_1 = point_1.plotX, graphic_1 = point_1.graphic, box = graphic_1 && boxesMap[plotX_1];\n                        if (box && graphic_1) {\n                            // Hide flag when its box position is not specified\n                            // (#8573, #9299)\n                            if (!defined(box.pos)) {\n                                graphic_1.hide().isNew = true;\n                            }\n                            else {\n                                graphic_1[graphic_1.isNew ? 'attr' : 'animate']({\n                                    x: box.pos + (box.align || 0) * box.size,\n                                    anchorX: point_1.anchorX\n                                }).show().isNew = false;\n                            }\n                        }\n                    }\n                }\n                // Can be a mix of SVG and HTML and we need events for both (#6303)\n                if (options.useHTML && series.markerGroup) {\n                    wrap(series.markerGroup, 'on', function (proceed) {\n                        return SVGElement.prototype.on.apply(\n                        // for HTML\n                        // eslint-disable-next-line no-invalid-this\n                        proceed.apply(this, [].slice.call(arguments, 1)), \n                        // and for SVG\n                        [].slice.call(arguments, 1));\n                    });\n                }\n            };\n            /**\n             * Extend the column trackers with listeners to expand and contract\n             * stacks.\n             * @private\n             */\n            FlagsSeries.prototype.drawTracker = function () {\n                var series = this, points = series.points;\n                _super.prototype.drawTracker.call(this);\n                var _loop_1 = function (point) {\n                    var graphic = point.graphic;\n                    if (graphic) {\n                        if (point.unbindMouseOver) {\n                            point.unbindMouseOver();\n                        }\n                        point.unbindMouseOver = addEvent(graphic.element, 'mouseover', function () {\n                            // Raise this point\n                            if (point.stackIndex > 0 &&\n                                !point.raised) {\n                                point._y = graphic.y;\n                                graphic.attr({\n                                    y: point._y - 8\n                                });\n                                point.raised = true;\n                            }\n                            // Revert other raised points\n                            for (var _i = 0, points_3 = points; _i < points_3.length; _i++) {\n                                var otherPoint = points_3[_i];\n                                if (otherPoint !== point &&\n                                    otherPoint.raised &&\n                                    otherPoint.graphic) {\n                                    otherPoint.graphic.attr({\n                                        y: otherPoint._y\n                                    });\n                                    otherPoint.raised = false;\n                                }\n                            }\n                        });\n                    }\n                };\n                /* *\n                * Bring each stacked flag up on mouse over, this allows readability\n                * of vertically stacked elements as well as tight points on the x\n                * axis. #1924.\n                */\n                for (var _i = 0, points_2 = points; _i < points_2.length; _i++) {\n                    var point = points_2[_i];\n                    _loop_1(point);\n                }\n            };\n            /**\n             * Get presentational attributes\n             * @private\n             */\n            FlagsSeries.prototype.pointAttribs = function (point, state) {\n                var options = this.options, color = (point && point.color) || this.color;\n                var lineColor = options.lineColor, lineWidth = (point && point.lineWidth), fill = (point && point.fillColor) || options.fillColor;\n                if (state) {\n                    fill = options.states[state].fillColor;\n                    lineColor = options.states[state].lineColor;\n                    lineWidth = options.states[state].lineWidth;\n                }\n                return {\n                    fill: fill || color,\n                    stroke: lineColor || color,\n                    'stroke-width': lineWidth || options.lineWidth || 0\n                };\n            };\n            /**\n             * @private\n             */\n            FlagsSeries.prototype.setClip = function () {\n                Series.prototype.setClip.apply(this, arguments);\n                if (this.options.clip !== false &&\n                    this.sharedClipKey &&\n                    this.markerGroup) {\n                    this.markerGroup.clip(this.chart.sharedClips[this.sharedClipKey]);\n                }\n            };\n            /* *\n             *\n             *  Static Properties\n             *\n             * */\n            FlagsSeries.compose = FlagsSymbols.compose;\n            FlagsSeries.defaultOptions = merge(ColumnSeries.defaultOptions, FlagsSeriesDefaults);\n            return FlagsSeries;\n        }(ColumnSeries));\n        OnSeriesComposition.compose(FlagsSeries);\n        extend(FlagsSeries.prototype, {\n            allowDG: false,\n            forceCrop: true,\n            invertible: false,\n            noSharedTooltip: true,\n            pointClass: FlagsPoint,\n            sorted: false,\n            takeOrdinalPosition: false,\n            trackerGroups: ['markerGroup'],\n            buildKDTree: noop,\n            /**\n             * Inherit the initialization from base Series.\n             * @private\n             */\n            init: Series.prototype.init\n        });\n        SeriesRegistry.registerSeriesType('flags', FlagsSeries);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Declarations\n         *\n         * */\n        /**\n         * @typedef {\"circlepin\"|\"flag\"|\"squarepin\"} Highcharts.FlagsShapeValue\n         */\n        ''; // detach doclets above\n\n        return FlagsSeries;\n    });\n    _registerModule(_modules, 'Core/Axis/BrokenAxis.js', [_modules['Core/Axis/Stacking/StackItem.js'], _modules['Core/Utilities.js']], function (StackItem, U) {\n        /* *\n         *\n         *  (c) 2009-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var addEvent = U.addEvent, find = U.find, fireEvent = U.fireEvent, isArray = U.isArray, isNumber = U.isNumber, pick = U.pick;\n        /* *\n         *\n         *  Composition\n         *\n         * */\n        /**\n         * Axis with support of broken data rows.\n         * @private\n         */\n        var BrokenAxis;\n        (function (BrokenAxis) {\n            /* *\n             *\n             *  Declarations\n             *\n             * */\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Adds support for broken axes.\n             * @private\n             */\n            function compose(AxisClass, SeriesClass) {\n                if (!AxisClass.keepProps.includes('brokenAxis')) {\n                    AxisClass.keepProps.push('brokenAxis');\n                    addEvent(AxisClass, 'init', onAxisInit);\n                    addEvent(AxisClass, 'afterInit', onAxisAfterInit);\n                    addEvent(AxisClass, 'afterSetTickPositions', onAxisAfterSetTickPositions);\n                    addEvent(AxisClass, 'afterSetOptions', onAxisAfterSetOptions);\n                    var seriesProto = SeriesClass.prototype;\n                    seriesProto.drawBreaks = seriesDrawBreaks;\n                    seriesProto.gappedPath = seriesGappedPath;\n                    addEvent(SeriesClass, 'afterGeneratePoints', onSeriesAfterGeneratePoints);\n                    addEvent(SeriesClass, 'afterRender', onSeriesAfterRender);\n                }\n                return AxisClass;\n            }\n            BrokenAxis.compose = compose;\n            /**\n             * @private\n             */\n            function onAxisAfterInit() {\n                if (typeof this.brokenAxis !== 'undefined') {\n                    this.brokenAxis.setBreaks(this.options.breaks, false);\n                }\n            }\n            /**\n             * Force Axis to be not-ordinal when breaks are defined.\n             * @private\n             */\n            function onAxisAfterSetOptions() {\n                var _a;\n                var axis = this;\n                if ((_a = axis.brokenAxis) === null || _a === void 0 ? void 0 : _a.hasBreaks) {\n                    axis.options.ordinal = false;\n                }\n            }\n            /**\n             * @private\n             */\n            function onAxisAfterSetTickPositions() {\n                var axis = this, brokenAxis = axis.brokenAxis;\n                if (brokenAxis === null || brokenAxis === void 0 ? void 0 : brokenAxis.hasBreaks) {\n                    var tickPositions = axis.tickPositions, info = axis.tickPositions.info, newPositions = [];\n                    for (var i = 0; i < tickPositions.length; i++) {\n                        if (!brokenAxis.isInAnyBreak(tickPositions[i])) {\n                            newPositions.push(tickPositions[i]);\n                        }\n                    }\n                    axis.tickPositions = newPositions;\n                    axis.tickPositions.info = info;\n                }\n            }\n            /**\n             * @private\n             */\n            function onAxisInit() {\n                var axis = this;\n                if (!axis.brokenAxis) {\n                    axis.brokenAxis = new Additions(axis);\n                }\n            }\n            /**\n             * @private\n             */\n            function onSeriesAfterGeneratePoints() {\n                var _a, _b;\n                var _c = this, isDirty = _c.isDirty, connectNulls = _c.options.connectNulls, points = _c.points, xAxis = _c.xAxis, yAxis = _c.yAxis;\n                // Set, or reset visibility of the points. Axis.setBreaks marks\n                // the series as isDirty\n                if (isDirty) {\n                    var i = points.length;\n                    while (i--) {\n                        var point = points[i];\n                        // Respect nulls inside the break (#4275)\n                        var nullGap = point.y === null && connectNulls === false;\n                        var isPointInBreak = (!nullGap && (((_a = xAxis === null || xAxis === void 0 ? void 0 : xAxis.brokenAxis) === null || _a === void 0 ? void 0 : _a.isInAnyBreak(point.x, true)) ||\n                            ((_b = yAxis === null || yAxis === void 0 ? void 0 : yAxis.brokenAxis) === null || _b === void 0 ? void 0 : _b.isInAnyBreak(point.y, true))));\n                        // Set point.visible if in any break.\n                        // If not in break, reset visible to original value.\n                        point.visible = isPointInBreak ?\n                            false :\n                            point.options.visible !== false;\n                    }\n                }\n            }\n            /**\n             * @private\n             */\n            function onSeriesAfterRender() {\n                this.drawBreaks(this.xAxis, ['x']);\n                this.drawBreaks(this.yAxis, pick(this.pointArrayMap, ['y']));\n            }\n            /**\n             * @private\n             */\n            function seriesDrawBreaks(axis, keys) {\n                var _a;\n                var series = this, points = series.points;\n                var breaks, threshold, y;\n                if ((_a = axis === null || axis === void 0 ? void 0 : axis.brokenAxis) === null || _a === void 0 ? void 0 : _a.hasBreaks) {\n                    var brokenAxis_1 = axis.brokenAxis;\n                    keys.forEach(function (key) {\n                        var _a, _b;\n                        breaks = (brokenAxis_1 === null || brokenAxis_1 === void 0 ? void 0 : brokenAxis_1.breakArray) || [];\n                        threshold = axis.isXAxis ?\n                            axis.min :\n                            pick(series.options.threshold, axis.min);\n                        // Array of breaks that have been \"zoomed-out\" which means that\n                        // they were shown previously, but now after zoom, they are not\n                        // (#19885).\n                        var breaksOutOfRange = (_b = (_a = axis === null || axis === void 0 ? void 0 : axis.options) === null || _a === void 0 ? void 0 : _a.breaks) === null || _b === void 0 ? void 0 : _b.filter(function (brk) {\n                            var isOut = true;\n                            // Iterate to see if \"brk\" is in axis range\n                            for (var i = 0; i < breaks.length; i++) {\n                                var otherBreak = breaks[i];\n                                if (otherBreak.from === brk.from &&\n                                    otherBreak.to === brk.to) {\n                                    isOut = false;\n                                    break;\n                                }\n                            }\n                            return isOut;\n                        });\n                        points.forEach(function (point) {\n                            y = pick(point['stack' + key.toUpperCase()], point[key]);\n                            breaks.forEach(function (brk) {\n                                if (isNumber(threshold) && isNumber(y)) {\n                                    var eventName = '';\n                                    if ((threshold < brk.from && y > brk.to) ||\n                                        (threshold > brk.from && y < brk.from)) {\n                                        eventName = 'pointBreak';\n                                    }\n                                    else if ((threshold < brk.from &&\n                                        y > brk.from &&\n                                        y < brk.to) || (threshold > brk.from &&\n                                        y > brk.to &&\n                                        y < brk.from)) {\n                                        eventName = 'pointInBreak';\n                                    }\n                                    if (eventName) {\n                                        fireEvent(axis, eventName, { point: point, brk: brk });\n                                    }\n                                }\n                            });\n                            breaksOutOfRange === null || breaksOutOfRange === void 0 ? void 0 : breaksOutOfRange.forEach(function (brk) {\n                                fireEvent(axis, 'pointOutsideOfBreak', { point: point, brk: brk });\n                            });\n                        });\n                    });\n                }\n            }\n            /**\n             * Extend getGraphPath by identifying gaps in the data so that we\n             * can draw a gap in the line or area. This was moved from ordinal\n             * axis module to broken axis module as of #5045.\n             *\n             * @private\n             * @function Highcharts.Series#gappedPath\n             *\n             * @return {Highcharts.SVGPathArray}\n             * Gapped path\n             */\n            function seriesGappedPath() {\n                var currentDataGrouping = this.currentDataGrouping, groupingSize = currentDataGrouping === null || currentDataGrouping === void 0 ? void 0 : currentDataGrouping.gapSize, points = this.points.slice(), yAxis = this.yAxis;\n                var gapSize = this.options.gapSize, i = points.length - 1, stack;\n                /**\n                 * Defines when to display a gap in the graph, together with the\n                 * [gapUnit](plotOptions.series.gapUnit) option.\n                 *\n                 * In case when `dataGrouping` is enabled, points can be grouped\n                 * into a larger time span. This can make the grouped points to\n                 * have a greater distance than the absolute value of `gapSize`\n                 * property, which will result in disappearing graph completely.\n                 * To prevent this situation the mentioned distance between\n                 * grouped points is used instead of previously defined\n                 * `gapSize`.\n                 *\n                 * In practice, this option is most often used to visualize gaps\n                 * in time series. In a stock chart, intraday data is available\n                 * for daytime hours, while gaps will appear in nights and\n                 * weekends.\n                 *\n                 * @see [gapUnit](plotOptions.series.gapUnit)\n                 * @see [xAxis.breaks](#xAxis.breaks)\n                 *\n                 * @sample {highstock} stock/plotoptions/series-gapsize/\n                 * Setting the gap size to 2 introduces gaps for weekends in\n                 * daily datasets.\n                 *\n                 * @type      {number}\n                 * @default   0\n                 * @product   highstock\n                 * @requires  modules/broken-axis\n                 * @apioption plotOptions.series.gapSize\n                 */\n                /**\n                 * Together with [gapSize](plotOptions.series.gapSize), this\n                 * option defines where to draw gaps in the graph.\n                 *\n                 * When the `gapUnit` is `\"relative\"` (default), a gap size of 5\n                 * means that if the distance between two points is greater than\n                 * 5 times that of the two closest points, the graph will be\n                 * broken.\n                 *\n                 * When the `gapUnit` is `\"value\"`, the gap is based on absolute\n                 * axis values, which on a datetime axis is milliseconds. This\n                 * also applies to the navigator series that inherits gap\n                 * options from the base series.\n                 *\n                 * @see [gapSize](plotOptions.series.gapSize)\n                 *\n                 * @type       {string}\n                 * @default    relative\n                 * @since      5.0.13\n                 * @product    highstock\n                 * @validvalue [\"relative\", \"value\"]\n                 * @requires   modules/broken-axis\n                 * @apioption  plotOptions.series.gapUnit\n                 */\n                if (gapSize && i > 0) { // #5008\n                    // Gap unit is relative\n                    if (this.options.gapUnit !== 'value') {\n                        gapSize *= this.basePointRange;\n                    }\n                    // Setting a new gapSize in case dataGrouping is enabled\n                    // (#7686)\n                    if (groupingSize &&\n                        groupingSize > gapSize &&\n                        // Except when DG is forced (e.g. from other series)\n                        // and has lower granularity than actual points (#11351)\n                        groupingSize >= this.basePointRange) {\n                        gapSize = groupingSize;\n                    }\n                    // extension for ordinal breaks\n                    var current = void 0, next = void 0;\n                    while (i--) {\n                        // Reassign next if it is not visible\n                        if (!(next && next.visible !== false)) {\n                            next = points[i + 1];\n                        }\n                        current = points[i];\n                        // Skip iteration if one of the points is not visible\n                        if (next.visible === false || current.visible === false) {\n                            continue;\n                        }\n                        if (next.x - current.x > gapSize) {\n                            var xRange = (current.x + next.x) / 2;\n                            points.splice(// insert after this one\n                            i + 1, 0, {\n                                isNull: true,\n                                x: xRange\n                            });\n                            // For stacked chart generate empty stack items, #6546\n                            if (yAxis.stacking && this.options.stacking) {\n                                stack = yAxis.stacking.stacks[this.stackKey][xRange] = new StackItem(yAxis, yAxis.options.stackLabels, false, xRange, this.stack);\n                                stack.total = 0;\n                            }\n                        }\n                        // Assign current to next for the upcoming iteration\n                        next = current;\n                    }\n                }\n                // Call base method\n                return this.getGraphPath(points);\n            }\n            /* *\n             *\n             *  Class\n             *\n             * */\n            /**\n             * Provides support for broken axes.\n             * @private\n             * @class\n             */\n            var Additions = /** @class */ (function () {\n                /* *\n                 *\n                 *  Constructors\n                 *\n                 * */\n                function Additions(axis) {\n                    this.hasBreaks = false;\n                    this.axis = axis;\n                }\n                /* *\n                 *\n                 *  Static Functions\n                 *\n                 * */\n                /**\n                 * @private\n                 */\n                Additions.isInBreak = function (brk, val) {\n                    var repeat = brk.repeat || Infinity, from = brk.from, length = brk.to - brk.from, test = (val >= from ?\n                        (val - from) % repeat :\n                        repeat - ((from - val) % repeat));\n                    var ret;\n                    if (!brk.inclusive) {\n                        ret = test < length && test !== 0;\n                    }\n                    else {\n                        ret = test <= length;\n                    }\n                    return ret;\n                };\n                /**\n                 * @private\n                 */\n                Additions.lin2Val = function (val) {\n                    var axis = this;\n                    var brokenAxis = axis.brokenAxis;\n                    var breakArray = brokenAxis && brokenAxis.breakArray;\n                    if (!breakArray || !isNumber(val)) {\n                        return val;\n                    }\n                    var nval = val, brk, i;\n                    for (i = 0; i < breakArray.length; i++) {\n                        brk = breakArray[i];\n                        if (brk.from >= nval) {\n                            break;\n                        }\n                        else if (brk.to < nval) {\n                            nval += brk.len;\n                        }\n                        else if (Additions.isInBreak(brk, nval)) {\n                            nval += brk.len;\n                        }\n                    }\n                    return nval;\n                };\n                /**\n                 * @private\n                 */\n                Additions.val2Lin = function (val) {\n                    var axis = this;\n                    var brokenAxis = axis.brokenAxis;\n                    var breakArray = brokenAxis && brokenAxis.breakArray;\n                    if (!breakArray || !isNumber(val)) {\n                        return val;\n                    }\n                    var nval = val, brk, i;\n                    for (i = 0; i < breakArray.length; i++) {\n                        brk = breakArray[i];\n                        if (brk.to <= val) {\n                            nval -= brk.len;\n                        }\n                        else if (brk.from >= val) {\n                            break;\n                        }\n                        else if (Additions.isInBreak(brk, val)) {\n                            nval -= (val - brk.from);\n                            break;\n                        }\n                    }\n                    return nval;\n                };\n                /* *\n                 *\n                 *  Functions\n                 *\n                 * */\n                /**\n                 * Returns the first break found where the x is larger then break.from\n                 * and smaller then break.to.\n                 *\n                 * @param {number} x\n                 * The number which should be within a break.\n                 *\n                 * @param {Array<Highcharts.XAxisBreaksOptions>} breaks\n                 * The array of breaks to search within.\n                 *\n                 * @return {Highcharts.XAxisBreaksOptions|undefined}\n                 * Returns the first break found that matches, returns false if no break\n                 * is found.\n                 */\n                Additions.prototype.findBreakAt = function (x, breaks) {\n                    return find(breaks, function (b) {\n                        return b.from < x && x < b.to;\n                    });\n                };\n                /**\n                 * @private\n                 */\n                Additions.prototype.isInAnyBreak = function (val, testKeep) {\n                    var brokenAxis = this, axis = brokenAxis.axis, breaks = axis.options.breaks || [];\n                    var i = breaks.length, inbrk, keep, ret;\n                    if (i && isNumber(val)) {\n                        while (i--) {\n                            if (Additions.isInBreak(breaks[i], val)) {\n                                inbrk = true;\n                                if (!keep) {\n                                    keep = pick(breaks[i].showPoints, !axis.isXAxis);\n                                }\n                            }\n                        }\n                        if (inbrk && testKeep) {\n                            ret = inbrk && !keep;\n                        }\n                        else {\n                            ret = inbrk;\n                        }\n                    }\n                    return ret;\n                };\n                /**\n                 * Dynamically set or unset breaks in an axis. This function in lighter\n                 * than using Axis.update, and it also preserves animation.\n                 *\n                 * @private\n                 * @function Highcharts.Axis#setBreaks\n                 *\n                 * @param {Array<Highcharts.XAxisBreaksOptions>} [breaks]\n                 * The breaks to add. When `undefined` it removes existing breaks.\n                 *\n                 * @param {boolean} [redraw=true]\n                 * Whether to redraw the chart immediately.\n                 */\n                Additions.prototype.setBreaks = function (breaks, redraw) {\n                    var brokenAxis = this;\n                    var axis = brokenAxis.axis;\n                    var hasBreaks = isArray(breaks) &&\n                        !!breaks.length &&\n                        !!Object.keys(breaks[0]).length; // Check for [{}], #16368.\n                    axis.isDirty = brokenAxis.hasBreaks !== hasBreaks;\n                    brokenAxis.hasBreaks = hasBreaks;\n                    if (breaks !== axis.options.breaks) {\n                        axis.options.breaks = axis.userOptions.breaks = breaks;\n                    }\n                    axis.forceRedraw = true; // Force recalculation in setScale\n                    // Recalculate series related to the axis.\n                    axis.series.forEach(function (series) {\n                        series.isDirty = true;\n                    });\n                    if (!hasBreaks && axis.val2lin === Additions.val2Lin) {\n                        // Revert to prototype functions\n                        delete axis.val2lin;\n                        delete axis.lin2val;\n                    }\n                    if (hasBreaks) {\n                        axis.userOptions.ordinal = false;\n                        axis.lin2val = Additions.lin2Val;\n                        axis.val2lin = Additions.val2Lin;\n                        axis.setExtremes = function (newMin, newMax, redraw, animation, eventArguments) {\n                            // If trying to set extremes inside a break, extend min to\n                            // after, and max to before the break ( #3857 )\n                            if (brokenAxis.hasBreaks) {\n                                var breaks_1 = (this.options.breaks || []);\n                                var axisBreak = void 0;\n                                while ((axisBreak = brokenAxis.findBreakAt(newMin, breaks_1))) {\n                                    newMin = axisBreak.to;\n                                }\n                                while ((axisBreak = brokenAxis.findBreakAt(newMax, breaks_1))) {\n                                    newMax = axisBreak.from;\n                                }\n                                // If both min and max is within the same break.\n                                if (newMax < newMin) {\n                                    newMax = newMin;\n                                }\n                            }\n                            axis.constructor.prototype.setExtremes.call(this, newMin, newMax, redraw, animation, eventArguments);\n                        };\n                        axis.setAxisTranslation = function () {\n                            axis.constructor.prototype.setAxisTranslation.call(this);\n                            brokenAxis.unitLength = void 0;\n                            if (brokenAxis.hasBreaks) {\n                                var breaks_2 = axis.options.breaks || [], \n                                // Temporary one:\n                                breakArrayT_1 = [], breakArray_1 = [], pointRangePadding = pick(axis.pointRangePadding, 0);\n                                var length_1 = 0, inBrk_1, repeat_1, min_1 = axis.userMin || axis.min, max_1 = axis.userMax || axis.max, start_1, i_1;\n                                // Min & max check (#4247)\n                                breaks_2.forEach(function (brk) {\n                                    repeat_1 = brk.repeat || Infinity;\n                                    if (isNumber(min_1) && isNumber(max_1)) {\n                                        if (Additions.isInBreak(brk, min_1)) {\n                                            min_1 += ((brk.to % repeat_1) -\n                                                (min_1 % repeat_1));\n                                        }\n                                        if (Additions.isInBreak(brk, max_1)) {\n                                            max_1 -= ((max_1 % repeat_1) -\n                                                (brk.from % repeat_1));\n                                        }\n                                    }\n                                });\n                                // Construct an array holding all breaks in the axis\n                                breaks_2.forEach(function (brk) {\n                                    start_1 = brk.from;\n                                    repeat_1 = brk.repeat || Infinity;\n                                    if (isNumber(min_1) && isNumber(max_1)) {\n                                        while (start_1 - repeat_1 > min_1) {\n                                            start_1 -= repeat_1;\n                                        }\n                                        while (start_1 < min_1) {\n                                            start_1 += repeat_1;\n                                        }\n                                        for (i_1 = start_1; i_1 < max_1; i_1 += repeat_1) {\n                                            breakArrayT_1.push({\n                                                value: i_1,\n                                                move: 'in'\n                                            });\n                                            breakArrayT_1.push({\n                                                value: i_1 + brk.to - brk.from,\n                                                move: 'out',\n                                                size: brk.breakSize\n                                            });\n                                        }\n                                    }\n                                });\n                                breakArrayT_1.sort(function (a, b) {\n                                    return ((a.value === b.value) ?\n                                        ((a.move === 'in' ? 0 : 1) -\n                                            (b.move === 'in' ? 0 : 1)) :\n                                        a.value - b.value);\n                                });\n                                // Simplify the breaks\n                                inBrk_1 = 0;\n                                start_1 = min_1;\n                                breakArrayT_1.forEach(function (brk) {\n                                    inBrk_1 += (brk.move === 'in' ? 1 : -1);\n                                    if (inBrk_1 === 1 && brk.move === 'in') {\n                                        start_1 = brk.value;\n                                    }\n                                    if (inBrk_1 === 0 && isNumber(start_1)) {\n                                        breakArray_1.push({\n                                            from: start_1,\n                                            to: brk.value,\n                                            len: brk.value - start_1 - (brk.size || 0)\n                                        });\n                                        length_1 += (brk.value -\n                                            start_1 -\n                                            (brk.size || 0));\n                                    }\n                                });\n                                brokenAxis.breakArray = breakArray_1;\n                                // Used with staticScale, and below the actual axis\n                                // length, when breaks are subtracted.\n                                if (isNumber(min_1) &&\n                                    isNumber(max_1) &&\n                                    isNumber(axis.min)) {\n                                    brokenAxis.unitLength = max_1 - min_1 - length_1 +\n                                        pointRangePadding;\n                                    fireEvent(axis, 'afterBreaks');\n                                    if (axis.staticScale) {\n                                        axis.transA = axis.staticScale;\n                                    }\n                                    else if (brokenAxis.unitLength) {\n                                        axis.transA *=\n                                            (max_1 - axis.min + pointRangePadding) /\n                                                brokenAxis.unitLength;\n                                    }\n                                    if (pointRangePadding) {\n                                        axis.minPixelPadding =\n                                            axis.transA * (axis.minPointOffset || 0);\n                                    }\n                                    axis.min = min_1;\n                                    axis.max = max_1;\n                                }\n                            }\n                        };\n                    }\n                    if (pick(redraw, true)) {\n                        axis.chart.redraw();\n                    }\n                };\n                return Additions;\n            }());\n            BrokenAxis.Additions = Additions;\n        })(BrokenAxis || (BrokenAxis = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return BrokenAxis;\n    });\n    _registerModule(_modules, 'masters/modules/broken-axis.src.js', [_modules['Core/Globals.js'], _modules['Core/Axis/BrokenAxis.js']], function (Highcharts, BrokenAxis) {\n\n        var G = Highcharts;\n        G.BrokenAxis = G.BrokenAxis || BrokenAxis;\n        G.BrokenAxis.compose(G.Axis, G.Series);\n\n        return Highcharts;\n    });\n    _registerModule(_modules, 'Extensions/DataGrouping/ApproximationRegistry.js', [], function () {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        /**\n         * Define the available approximation types. The data grouping\n         * approximations takes an array or numbers as the first parameter. In case\n         * of ohlc, four arrays are sent in as four parameters. Each array consists\n         * only of numbers. In case null values belong to the group, the property\n         * .hasNulls will be set to true on the array.\n         *\n         * @product highstock\n         *\n         * @private\n         */\n        var ApproximationRegistry = {\n        // approximations added programmatically\n        };\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return ApproximationRegistry;\n    });\n    _registerModule(_modules, 'Extensions/DataGrouping/ApproximationDefaults.js', [_modules['Extensions/DataGrouping/ApproximationRegistry.js'], _modules['Core/Utilities.js']], function (ApproximationRegistry, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var arrayMax = U.arrayMax, arrayMin = U.arrayMin, correctFloat = U.correctFloat, extend = U.extend, isNumber = U.isNumber;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function average(arr) {\n            var len = arr.length;\n            var ret = sum(arr);\n            // If we have a number, return it divided by the length. If not,\n            // return null or undefined based on what the sum method finds.\n            if (isNumber(ret) && len) {\n                ret = correctFloat(ret / len);\n            }\n            return ret;\n        }\n        /**\n         * The same as average, but for series with multiple values, like area ranges.\n         * @private\n         */\n        function averages() {\n            var ret = [];\n            [].forEach.call(arguments, function (arr) {\n                ret.push(average(arr));\n            });\n            // Return undefined when first elem. is undefined and let\n            // sum method handle null (#7377)\n            return typeof ret[0] === 'undefined' ? void 0 : ret;\n        }\n        /**\n         * @private\n         */\n        function close(arr) {\n            return arr.length ?\n                arr[arr.length - 1] :\n                (arr.hasNulls ? null : void 0);\n        }\n        /**\n         * @private\n         */\n        function high(arr) {\n            return arr.length ?\n                arrayMax(arr) :\n                (arr.hasNulls ? null : void 0);\n        }\n        /**\n         * HLC, OHLC and range are special cases where a multidimensional array is input\n         * and an array is output.\n         * @private\n         */\n        function hlc(high, low, close) {\n            high = ApproximationRegistry.high(high);\n            low = ApproximationRegistry.low(low);\n            close = ApproximationRegistry.close(close);\n            if (isNumber(high) ||\n                isNumber(low) ||\n                isNumber(close)) {\n                return [high, low, close];\n            }\n        }\n        /**\n         * @private\n         */\n        function low(arr) {\n            return arr.length ?\n                arrayMin(arr) :\n                (arr.hasNulls ? null : void 0);\n        }\n        /**\n         * @private\n         */\n        function ohlc(open, high, low, close) {\n            open = ApproximationRegistry.open(open);\n            high = ApproximationRegistry.high(high);\n            low = ApproximationRegistry.low(low);\n            close = ApproximationRegistry.close(close);\n            if (isNumber(open) ||\n                isNumber(high) ||\n                isNumber(low) ||\n                isNumber(close)) {\n                return [open, high, low, close];\n            }\n        }\n        /**\n         * @private\n         */\n        function open(arr) {\n            return arr.length ? arr[0] : (arr.hasNulls ? null : void 0);\n        }\n        /**\n         * @private\n         */\n        function range(low, high) {\n            low = ApproximationRegistry.low(low);\n            high = ApproximationRegistry.high(high);\n            if (isNumber(low) || isNumber(high)) {\n                return [low, high];\n            }\n            if (low === null && high === null) {\n                return null;\n            }\n            // else, return is undefined\n        }\n        /**\n         * @private\n         */\n        function sum(arr) {\n            var len = arr.length, ret;\n            // 1. it consists of nulls exclusive\n            if (!len && arr.hasNulls) {\n                ret = null;\n                // 2. it has a length and real values\n            }\n            else if (len) {\n                ret = 0;\n                while (len--) {\n                    ret += arr[len];\n                }\n            }\n            // 3. it has zero length, so just return undefined\n            // => doNothing()\n            return ret;\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var ApproximationDefaults = {\n            average: average,\n            averages: averages,\n            close: close,\n            high: high,\n            hlc: hlc,\n            low: low,\n            ohlc: ohlc,\n            open: open,\n            range: range,\n            sum: sum\n        };\n        extend(ApproximationRegistry, ApproximationDefaults);\n\n        return ApproximationDefaults;\n    });\n    _registerModule(_modules, 'Extensions/DataGrouping/DataGroupingDefaults.js', [], function () {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        /**\n         * Common options\n         * @private\n         */\n        var common = {\n            // enabled: null, // (true for stock charts, false for basic),\n            // forced: undefined,\n            groupPixelWidth: 2,\n            // the first one is the point or start value, the second is the start\n            // value if we're dealing with range, the third one is the end value if\n            // dealing with a range\n            dateTimeLabelFormats: {\n                millisecond: [\n                    '%A, %e %b, %H:%M:%S.%L',\n                    '%A, %e %b, %H:%M:%S.%L',\n                    '-%H:%M:%S.%L'\n                ],\n                second: [\n                    '%A, %e %b, %H:%M:%S',\n                    '%A, %e %b, %H:%M:%S',\n                    '-%H:%M:%S'\n                ],\n                minute: [\n                    '%A, %e %b, %H:%M',\n                    '%A, %e %b, %H:%M',\n                    '-%H:%M'\n                ],\n                hour: [\n                    '%A, %e %b, %H:%M',\n                    '%A, %e %b, %H:%M',\n                    '-%H:%M'\n                ],\n                day: [\n                    '%A, %e %b %Y',\n                    '%A, %e %b',\n                    '-%A, %e %b %Y'\n                ],\n                week: [\n                    'Week from %A, %e %b %Y',\n                    '%A, %e %b',\n                    '-%A, %e %b %Y'\n                ],\n                month: [\n                    '%B %Y',\n                    '%B',\n                    '-%B %Y'\n                ],\n                year: [\n                    '%Y',\n                    '%Y',\n                    '-%Y'\n                ]\n            }\n            // smoothed = false, // enable this for navigator series only\n        };\n        /**\n         * Extends common options\n         * @private\n         */\n        var seriesSpecific = {\n            line: {},\n            spline: {},\n            area: {},\n            areaspline: {},\n            arearange: {},\n            column: {\n                groupPixelWidth: 10\n            },\n            columnrange: {\n                groupPixelWidth: 10\n            },\n            candlestick: {\n                groupPixelWidth: 10\n            },\n            ohlc: {\n                groupPixelWidth: 5\n            },\n            hlc: {\n                groupPixelWidth: 5\n                // Move to HeikinAshiSeries.ts after refactoring data grouping.\n            },\n            heikinashi: {\n                groupPixelWidth: 10\n            }\n        };\n        /**\n         * Units are defined in a separate array to allow complete overriding in\n         * case of a user option.\n         * @private\n         */\n        var units = [\n            [\n                'millisecond',\n                [1, 2, 5, 10, 20, 25, 50, 100, 200, 500] // allowed multiples\n            ], [\n                'second',\n                [1, 2, 5, 10, 15, 30]\n            ], [\n                'minute',\n                [1, 2, 5, 10, 15, 30]\n            ], [\n                'hour',\n                [1, 2, 3, 4, 6, 8, 12]\n            ], [\n                'day',\n                [1]\n            ], [\n                'week',\n                [1]\n            ], [\n                'month',\n                [1, 3, 6]\n            ], [\n                'year',\n                null\n            ]\n        ];\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var DataGroupingDefaults = {\n            common: common,\n            seriesSpecific: seriesSpecific,\n            units: units\n        };\n\n        return DataGroupingDefaults;\n    });\n    _registerModule(_modules, 'Extensions/DataGrouping/DataGroupingAxisComposition.js', [_modules['Extensions/DataGrouping/DataGroupingDefaults.js'], _modules['Core/Utilities.js']], function (DataGroupingDefaults, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var addEvent = U.addEvent, extend = U.extend, merge = U.merge, pick = U.pick;\n        /* *\n         *\n         *  Variables\n         *\n         * */\n        var AxisConstructor;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Check the groupPixelWidth and apply the grouping if needed.\n         * Fired only after processing the data.\n         *\n         * @product highstock\n         *\n         * @function Highcharts.Axis#applyGrouping\n         */\n        function applyGrouping(e) {\n            var axis = this, series = axis.series;\n            // Reset the groupPixelWidth for all series, #17141.\n            series.forEach(function (series) {\n                series.groupPixelWidth = void 0; // #2110\n            });\n            series.forEach(function (series) {\n                series.groupPixelWidth = (axis.getGroupPixelWidth &&\n                    axis.getGroupPixelWidth());\n                if (series.groupPixelWidth) {\n                    series.hasProcessed = true; // #2692\n                }\n                // Fire independing on series.groupPixelWidth to always set a proper\n                // dataGrouping state, (#16238)\n                series.applyGrouping(!!e.hasExtremesChanged);\n            });\n        }\n        /**\n         * @private\n         */\n        function compose(AxisClass) {\n            AxisConstructor = AxisClass;\n            var axisProto = AxisClass.prototype;\n            if (!axisProto.applyGrouping) {\n                addEvent(AxisClass, 'afterSetScale', onAfterSetScale);\n                // When all series are processed, calculate the group pixel width and\n                // then if this value is different than zero apply groupings.\n                addEvent(AxisClass, 'postProcessData', applyGrouping);\n                extend(axisProto, {\n                    applyGrouping: applyGrouping,\n                    getGroupPixelWidth: getGroupPixelWidth,\n                    setDataGrouping: setDataGrouping\n                });\n            }\n        }\n        /**\n         * Get the data grouping pixel width based on the greatest defined individual\n         * width of the axis' series, and if whether one of the axes need grouping.\n         * @private\n         */\n        function getGroupPixelWidth() {\n            var series = this.series;\n            var i = series.length, groupPixelWidth = 0, doGrouping = false, dataLength, dgOptions;\n            // If one of the series needs grouping, apply it to all (#1634)\n            while (i--) {\n                dgOptions = series[i].options.dataGrouping;\n                if (dgOptions) { // #2692\n                    // If multiple series are compared on the same x axis, give them the\n                    // same group pixel width (#334)\n                    groupPixelWidth = Math.max(groupPixelWidth, \n                    // Fallback to commonOptions (#9693)\n                    pick(dgOptions.groupPixelWidth, DataGroupingDefaults.common.groupPixelWidth));\n                    dataLength = (series[i].processedXData || series[i].data).length;\n                    // Execute grouping if the amount of points is greater than the\n                    // limit defined in groupPixelWidth\n                    if (series[i].groupPixelWidth ||\n                        (dataLength >\n                            (this.chart.plotSizeX / groupPixelWidth)) ||\n                        (dataLength && dgOptions.forced)) {\n                        doGrouping = true;\n                    }\n                }\n            }\n            return doGrouping ? groupPixelWidth : 0;\n        }\n        /**\n         * When resetting the scale reset the hasProcessed flag to avoid taking\n         * previous data grouping of neighbour series into account when determining\n         * group pixel width (#2692).\n         * @private\n         */\n        function onAfterSetScale() {\n            this.series.forEach(function (series) {\n                series.hasProcessed = false;\n            });\n        }\n        /**\n         * Highcharts Stock only. Force data grouping on all the axis' series.\n         *\n         * @product highstock\n         *\n         * @function Highcharts.Axis#setDataGrouping\n         *\n         * @param {boolean|Highcharts.DataGroupingOptionsObject} [dataGrouping]\n         *        A `dataGrouping` configuration. Use `false` to disable data grouping\n         *        dynamically.\n         *\n         * @param {boolean} [redraw=true]\n         *        Whether to redraw the chart or wait for a later call to\n         *        {@link Chart#redraw}.\n         */\n        function setDataGrouping(dataGrouping, redraw) {\n            var axis = this;\n            var i;\n            redraw = pick(redraw, true);\n            if (!dataGrouping) {\n                dataGrouping = {\n                    forced: false,\n                    units: null\n                };\n            }\n            // Axis is instantiated, update all series\n            if (this instanceof AxisConstructor) {\n                i = this.series.length;\n                while (i--) {\n                    this.series[i].update({\n                        dataGrouping: dataGrouping\n                    }, false);\n                }\n                // Axis not yet instantiated, alter series options\n            }\n            else {\n                this.chart.options.series.forEach(function (seriesOptions) {\n                    // Merging dataGrouping options with already defined options #16759\n                    seriesOptions.dataGrouping = typeof dataGrouping === 'boolean' ?\n                        dataGrouping :\n                        merge(dataGrouping, seriesOptions.dataGrouping);\n                });\n            }\n            // Clear ordinal slope, so we won't accidentally use the old one (#7827)\n            if (axis.ordinal) {\n                axis.ordinal.slope = void 0;\n            }\n            if (redraw) {\n                this.chart.redraw();\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var DataGroupingAxisComposition = {\n            compose: compose\n        };\n\n        return DataGroupingAxisComposition;\n    });\n    _registerModule(_modules, 'Extensions/DataGrouping/DataGroupingSeriesComposition.js', [_modules['Extensions/DataGrouping/ApproximationRegistry.js'], _modules['Extensions/DataGrouping/DataGroupingDefaults.js'], _modules['Core/Axis/DateTimeAxis.js'], _modules['Core/Defaults.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (ApproximationRegistry, DataGroupingDefaults, DateTimeAxis, D, SeriesRegistry, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var seriesProto = SeriesRegistry.series.prototype;\n        var addEvent = U.addEvent, defined = U.defined, error = U.error, extend = U.extend, isNumber = U.isNumber, merge = U.merge, pick = U.pick;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        var baseGeneratePoints = seriesProto.generatePoints;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function adjustExtremes(xAxis, groupedXData) {\n            // Make sure the X axis extends to show the first group (#2533)\n            // But only for visible series (#5493, #6393)\n            if (defined(groupedXData[0]) &&\n                isNumber(xAxis.min) &&\n                isNumber(xAxis.dataMin) &&\n                groupedXData[0] < xAxis.min) {\n                if ((!defined(xAxis.options.min) &&\n                    xAxis.min <= xAxis.dataMin) ||\n                    xAxis.min === xAxis.dataMin) {\n                    xAxis.min = Math.min(groupedXData[0], xAxis.min);\n                }\n                xAxis.dataMin = Math.min(groupedXData[0], xAxis.dataMin);\n            }\n            // When the last anchor set, change the extremes that\n            // the last point is visible (#12455).\n            if (defined(groupedXData[groupedXData.length - 1]) &&\n                isNumber(xAxis.max) &&\n                isNumber(xAxis.dataMax) &&\n                groupedXData[groupedXData.length - 1] > xAxis.max) {\n                if ((!defined(xAxis.options.max) &&\n                    isNumber(xAxis.dataMax) &&\n                    xAxis.max >= xAxis.dataMax) || xAxis.max === xAxis.dataMax) {\n                    xAxis.max = Math.max(groupedXData[groupedXData.length - 1], xAxis.max);\n                }\n                xAxis.dataMax = Math.max(groupedXData[groupedXData.length - 1], xAxis.dataMax);\n            }\n        }\n        /**\n         * @private\n         */\n        function anchorPoints(series, groupedXData, xMax) {\n            var options = series.options, dataGroupingOptions = options.dataGrouping, totalRange = (series.currentDataGrouping && series.currentDataGrouping.gapSize);\n            if (!(dataGroupingOptions &&\n                series.xData &&\n                totalRange &&\n                series.groupMap)) {\n                return;\n            }\n            var groupedDataLastIndex = groupedXData.length - 1, anchor = dataGroupingOptions.anchor, firstAnchor = dataGroupingOptions.firstAnchor, lastAnchor = dataGroupingOptions.lastAnchor;\n            var anchorIndexIterator = groupedXData.length - 1, anchorFirstIndex = 0;\n            // Change the first point position, but only when it is\n            // the first point in the data set not in the current zoom.\n            if (firstAnchor && series.xData[0] >= groupedXData[0]) {\n                anchorFirstIndex++;\n                var groupStart = series.groupMap[0].start, groupLength = series.groupMap[0].length;\n                var firstGroupEnd = void 0;\n                if (isNumber(groupStart) && isNumber(groupLength)) {\n                    firstGroupEnd = groupStart + (groupLength - 1);\n                }\n                groupedXData[0] = {\n                    start: groupedXData[0],\n                    middle: groupedXData[0] + 0.5 * totalRange,\n                    end: groupedXData[0] + totalRange,\n                    firstPoint: series.xData[0],\n                    lastPoint: firstGroupEnd && series.xData[firstGroupEnd]\n                }[firstAnchor];\n            }\n            // Change the last point position but only when it is\n            // the last point in the data set not in the current zoom,\n            // or if it is not the 1st point simultaneously.\n            if (groupedDataLastIndex > 0 &&\n                lastAnchor &&\n                totalRange &&\n                groupedXData[groupedDataLastIndex] >= xMax - totalRange) {\n                anchorIndexIterator--;\n                var lastGroupStart = series.groupMap[series.groupMap.length - 1].start;\n                groupedXData[groupedDataLastIndex] = {\n                    start: groupedXData[groupedDataLastIndex],\n                    middle: groupedXData[groupedDataLastIndex] + 0.5 * totalRange,\n                    end: groupedXData[groupedDataLastIndex] + totalRange,\n                    firstPoint: lastGroupStart && series.xData[lastGroupStart],\n                    lastPoint: series.xData[series.xData.length - 1]\n                }[lastAnchor];\n            }\n            if (anchor && anchor !== 'start') {\n                var shiftInterval = (totalRange *\n                    { middle: 0.5, end: 1 }[anchor]);\n                // Anchor the rest of the points apart from the ones, that were\n                // previously moved.\n                while (anchorIndexIterator >= anchorFirstIndex) {\n                    groupedXData[anchorIndexIterator] += shiftInterval;\n                    anchorIndexIterator--;\n                }\n            }\n        }\n        /**\n         * For the processed data, calculate the grouped data if needed.\n         *\n         * @private\n         * @function Highcharts.Series#applyGrouping\n         */\n        function applyGrouping(hasExtremesChanged) {\n            var series = this, chart = series.chart, options = series.options, dataGroupingOptions = options.dataGrouping, groupingEnabled = series.allowDG !== false && dataGroupingOptions &&\n                pick(dataGroupingOptions.enabled, chart.options.isStock), reserveSpace = series.reserveSpace(), lastDataGrouping = this.currentDataGrouping;\n            var currentDataGrouping, croppedData, revertRequireSorting = false;\n            // Data needs to be sorted for dataGrouping\n            if (groupingEnabled && !series.requireSorting) {\n                series.requireSorting = revertRequireSorting = true;\n            }\n            // Skip if skipDataGrouping method returns false or if grouping is disabled\n            // (in that order).\n            var skip = skipDataGrouping(series, hasExtremesChanged) === false || !groupingEnabled;\n            // Revert original requireSorting value if changed\n            if (revertRequireSorting) {\n                series.requireSorting = false;\n            }\n            if (skip) {\n                return;\n            }\n            series.destroyGroupedData();\n            var processedXData = dataGroupingOptions.groupAll ?\n                series.xData :\n                series.processedXData, processedYData = dataGroupingOptions.groupAll ?\n                series.yData :\n                series.processedYData, plotSizeX = chart.plotSizeX, xAxis = series.xAxis, ordinal = xAxis.options.ordinal, groupPixelWidth = series.groupPixelWidth;\n            var i, hasGroupedData;\n            // Execute grouping if the amount of points is greater than the limit\n            // defined in groupPixelWidth\n            if (groupPixelWidth &&\n                processedXData &&\n                processedXData.length &&\n                plotSizeX) {\n                hasGroupedData = true;\n                // Force recreation of point instances in series.translate, #5699\n                series.isDirty = true;\n                series.points = null; // #6709\n                var extremes = xAxis.getExtremes(), xMin = extremes.min, xMax = extremes.max, groupIntervalFactor = (ordinal &&\n                    xAxis.ordinal &&\n                    xAxis.ordinal.getGroupIntervalFactor(xMin, xMax, series)) || 1, interval = (groupPixelWidth * (xMax - xMin) / plotSizeX) *\n                    groupIntervalFactor, groupPositions = xAxis.getTimeTicks(DateTimeAxis.Additions.prototype.normalizeTimeTickInterval(interval, dataGroupingOptions.units ||\n                    DataGroupingDefaults.units), \n                // Processed data may extend beyond axis (#4907)\n                Math.min(xMin, processedXData[0]), Math.max(xMax, processedXData[processedXData.length - 1]), xAxis.options.startOfWeek, processedXData, series.closestPointRange), groupedData = seriesProto.groupData.apply(series, [\n                    processedXData,\n                    processedYData,\n                    groupPositions,\n                    dataGroupingOptions.approximation\n                ]);\n                var groupedXData = groupedData.groupedXData, groupedYData = groupedData.groupedYData, gapSize = 0;\n                // The smoothed option is deprecated, instead, there is a fallback\n                // to the new anchoring mechanism. #12455.\n                if (dataGroupingOptions &&\n                    dataGroupingOptions.smoothed &&\n                    groupedXData.length) {\n                    dataGroupingOptions.firstAnchor = 'firstPoint';\n                    dataGroupingOptions.anchor = 'middle';\n                    dataGroupingOptions.lastAnchor = 'lastPoint';\n                    error(32, false, chart, {\n                        'dataGrouping.smoothed': 'use dataGrouping.anchor'\n                    });\n                }\n                // Record what data grouping values were used\n                for (i = 1; i < groupPositions.length; i++) {\n                    // The grouped gapSize needs to be the largest distance between\n                    // the group to capture varying group sizes like months or DST\n                    // crossing (#10000). Also check that the gap is not at the\n                    // start of a segment.\n                    if (!groupPositions.info.segmentStarts ||\n                        groupPositions.info.segmentStarts.indexOf(i) === -1) {\n                        gapSize = Math.max(groupPositions[i] - groupPositions[i - 1], gapSize);\n                    }\n                }\n                currentDataGrouping = groupPositions.info;\n                currentDataGrouping.gapSize = gapSize;\n                series.closestPointRange = groupPositions.info.totalRange;\n                series.groupMap = groupedData.groupMap;\n                series.currentDataGrouping = currentDataGrouping;\n                anchorPoints(series, groupedXData, xMax);\n                if (reserveSpace) {\n                    adjustExtremes(xAxis, groupedXData);\n                }\n                // We calculated all group positions but we should render\n                // only the ones within the visible range\n                if (dataGroupingOptions.groupAll) {\n                    // Keep the reference to all grouped points\n                    // for further calculation (eg. heikinashi).\n                    series.allGroupedData = groupedYData;\n                    croppedData = series.cropData(groupedXData, groupedYData, xAxis.min, xAxis.max);\n                    groupedXData = croppedData.xData;\n                    groupedYData = croppedData.yData;\n                    series.cropStart = croppedData.start; // #15005\n                }\n                // Set series props\n                series.processedXData = groupedXData;\n                series.processedYData = groupedYData;\n            }\n            else {\n                series.groupMap = null;\n            }\n            series.hasGroupedData = hasGroupedData;\n            series.preventGraphAnimation =\n                (lastDataGrouping && lastDataGrouping.totalRange) !==\n                    (currentDataGrouping && currentDataGrouping.totalRange);\n        }\n        /**\n         * @private\n         */\n        function compose(SeriesClass) {\n            var seriesProto = SeriesClass.prototype;\n            if (!seriesProto.applyGrouping) {\n                var PointClass = SeriesClass.prototype.pointClass;\n                // Override point prototype to throw a warning when trying to update\n                // grouped points.\n                addEvent(PointClass, 'update', function () {\n                    if (this.dataGroup) {\n                        error(24, false, this.series.chart);\n                        return false;\n                    }\n                });\n                addEvent(SeriesClass, 'afterSetOptions', onAfterSetOptions);\n                addEvent(SeriesClass, 'destroy', destroyGroupedData);\n                extend(seriesProto, {\n                    applyGrouping: applyGrouping,\n                    destroyGroupedData: destroyGroupedData,\n                    generatePoints: generatePoints,\n                    getDGApproximation: getDGApproximation,\n                    groupData: groupData\n                });\n            }\n        }\n        /**\n         * Destroy the grouped data points. #622, #740\n         * @private\n         */\n        function destroyGroupedData() {\n            // Clear previous groups\n            if (this.groupedData) {\n                this.groupedData.forEach(function (point, i) {\n                    if (point) {\n                        this.groupedData[i] = point.destroy ?\n                            point.destroy() : null;\n                    }\n                }, this);\n                // Clears all:\n                // - `this.groupedData`\n                // - `this.points`\n                // - `preserve` object in series.update()\n                this.groupedData.length = 0;\n                delete this.allGroupedData; // #19892\n            }\n        }\n        /**\n         * Override the generatePoints method by adding a reference to grouped data\n         * @private\n         */\n        function generatePoints() {\n            baseGeneratePoints.apply(this);\n            // Record grouped data in order to let it be destroyed the next time\n            // processData runs\n            this.destroyGroupedData(); // #622\n            this.groupedData = this.hasGroupedData ? this.points : null;\n        }\n        /**\n         * Set default approximations to the prototypes if present. Properties are\n         * inherited down. Can be overridden for individual series types.\n         * @private\n         */\n        function getDGApproximation() {\n            if (this.is('arearange')) {\n                return 'range';\n            }\n            if (this.is('ohlc')) {\n                return 'ohlc';\n            }\n            if (this.is('hlc')) {\n                return 'hlc';\n            }\n            if (\n            // #18974, default approximation for cumulative\n            // should be `sum` when `dataGrouping` is enabled\n            this.is('column') ||\n                this.options.cumulative) {\n                return 'sum';\n            }\n            return 'average';\n        }\n        /**\n         * Highcharts Stock only. Takes parallel arrays of x and y data and groups the\n         * data into intervals defined by groupPositions, a collection of starting x\n         * values for each group.\n         *\n         * @product highstock\n         *\n         * @function Highcharts.Series#groupData\n         * @param {Array<number>} xData\n         *        Parallel array of x data.\n         * @param {Array<(number|null|undefined)>|Array<Array<(number|null|undefined)>>} yData\n         *        Parallel array of y data.\n         * @param {Array<number>} groupPositions\n         *        Group positions.\n         * @param {string|Function} [approximation]\n         *        Approximation to use.\n         * @return {Highcharts.DataGroupingResultObject}\n         *         Mapped groups.\n         */\n        function groupData(xData, yData, groupPositions, approximation) {\n            var series = this, data = series.data, dataOptions = series.options && series.options.data, groupedXData = [], groupedYData = [], groupMap = [], dataLength = xData.length, \n            // when grouping the fake extended axis for panning,\n            // we don't need to consider y\n            handleYData = !!yData, values = [], pointArrayMap = series.pointArrayMap, pointArrayMapLength = pointArrayMap && pointArrayMap.length, extendedPointArrayMap = ['x'].concat(pointArrayMap || ['y']), groupAll = (this.options.dataGrouping &&\n                this.options.dataGrouping.groupAll);\n            var pointX, pointY, groupedY, pos = 0, start = 0;\n            var approximationFn = (typeof approximation === 'function' ?\n                approximation :\n                approximation && ApproximationRegistry[approximation] ?\n                    ApproximationRegistry[approximation] :\n                    ApproximationRegistry[(series.getDGApproximation && series.getDGApproximation() ||\n                        'average')]);\n            // Calculate values array size from pointArrayMap length\n            if (pointArrayMapLength) {\n                var len = pointArrayMap.length;\n                while (len--) {\n                    values.push([]);\n                }\n            }\n            else {\n                values.push([]);\n            }\n            var valuesLen = pointArrayMapLength || 1;\n            for (var i = 0; i <= dataLength; i++) {\n                // Start with the first point within the X axis range (#2696)\n                if (xData[i] < groupPositions[0]) {\n                    continue; // with next point\n                }\n                // when a new group is entered, summarize and initialize\n                // the previous group\n                while ((typeof groupPositions[pos + 1] !== 'undefined' &&\n                    xData[i] >= groupPositions[pos + 1]) ||\n                    i === dataLength) { // get the last group\n                    // get group x and y\n                    pointX = groupPositions[pos];\n                    series.dataGroupInfo = {\n                        start: groupAll ? start : (series.cropStart + start),\n                        length: values[0].length,\n                        groupStart: pointX\n                    };\n                    groupedY = approximationFn.apply(series, values);\n                    // By default, let options of the first grouped point be passed over\n                    // to the grouped point. This allows preserving properties like\n                    // `name` and `color` or custom properties. Implementers can\n                    // override this from the approximation function, where they can\n                    // write custom options to `this.dataGroupInfo.options`.\n                    if (series.pointClass && !defined(series.dataGroupInfo.options)) {\n                        // Convert numbers and arrays into objects\n                        series.dataGroupInfo.options = merge(series.pointClass.prototype\n                            .optionsToObject.call({ series: series }, series.options.data[series.cropStart + start]));\n                        // Make sure the raw data (x, y, open, high etc) is not copied\n                        // over and overwriting approximated data.\n                        extendedPointArrayMap.forEach(function (key) {\n                            delete series.dataGroupInfo.options[key];\n                        });\n                    }\n                    // push the grouped data\n                    if (typeof groupedY !== 'undefined') {\n                        groupedXData.push(pointX);\n                        groupedYData.push(groupedY);\n                        groupMap.push(series.dataGroupInfo);\n                    }\n                    // reset the aggregate arrays\n                    start = i;\n                    for (var j = 0; j < valuesLen; j++) {\n                        values[j].length = 0; // faster than values[j] = []\n                        values[j].hasNulls = false;\n                    }\n                    // Advance on the group positions\n                    pos += 1;\n                    // don't loop beyond the last group\n                    if (i === dataLength) {\n                        break;\n                    }\n                }\n                // break out\n                if (i === dataLength) {\n                    break;\n                }\n                // for each raw data point, push it to an array that contains all values\n                // for this specific group\n                if (pointArrayMap) {\n                    var index = (series.options.dataGrouping &&\n                        series.options.dataGrouping.groupAll ?\n                        i : series.cropStart + i), point = (data && data[index]) ||\n                        series.pointClass.prototype.applyOptions.apply({\n                            series: series\n                        }, [dataOptions[index]]);\n                    var val = void 0;\n                    for (var j = 0; j < pointArrayMapLength; j++) {\n                        val = point[pointArrayMap[j]];\n                        if (isNumber(val)) {\n                            values[j].push(val);\n                        }\n                        else if (val === null) {\n                            values[j].hasNulls = true;\n                        }\n                    }\n                }\n                else {\n                    pointY = handleYData ? yData[i] : null;\n                    if (isNumber(pointY)) {\n                        values[0].push(pointY);\n                    }\n                    else if (pointY === null) {\n                        values[0].hasNulls = true;\n                    }\n                }\n            }\n            return {\n                groupedXData: groupedXData,\n                groupedYData: groupedYData,\n                groupMap: groupMap\n            };\n        }\n        /**\n         * Handle default options for data grouping. This must be set at runtime because\n         * some series types are defined after this.\n         * @private\n         */\n        function onAfterSetOptions(e) {\n            var options = e.options, type = this.type, plotOptions = this.chart.options.plotOptions, \n            // External series, for example technical indicators should also inherit\n            // commonOptions which are not available outside this module\n            baseOptions = (this.useCommonDataGrouping &&\n                DataGroupingDefaults.common), seriesSpecific = DataGroupingDefaults.seriesSpecific;\n            var defaultOptions = D.defaultOptions.plotOptions[type].dataGrouping;\n            if (plotOptions && (seriesSpecific[type] || baseOptions)) { // #1284\n                var rangeSelector = this.chart.rangeSelector;\n                if (!defaultOptions) {\n                    defaultOptions = merge(DataGroupingDefaults.common, seriesSpecific[type]);\n                }\n                options.dataGrouping = merge(baseOptions, defaultOptions, plotOptions.series && plotOptions.series.dataGrouping, // #1228\n                // Set by the StockChart constructor:\n                plotOptions[type].dataGrouping, this.userOptions.dataGrouping, !options.isInternal &&\n                    rangeSelector &&\n                    isNumber(rangeSelector.selected) &&\n                    rangeSelector.buttonOptions[rangeSelector.selected].dataGrouping);\n            }\n        }\n        /**\n         * @private\n         */\n        function skipDataGrouping(series, force) {\n            return !(series.isCartesian &&\n                !series.isDirty &&\n                !series.xAxis.isDirty &&\n                !series.yAxis.isDirty &&\n                !force);\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var DataGroupingSeriesComposition = {\n            compose: compose,\n            groupData: groupData\n        };\n\n        return DataGroupingSeriesComposition;\n    });\n    _registerModule(_modules, 'Extensions/DataGrouping/DataGrouping.js', [_modules['Extensions/DataGrouping/DataGroupingAxisComposition.js'], _modules['Extensions/DataGrouping/DataGroupingDefaults.js'], _modules['Extensions/DataGrouping/DataGroupingSeriesComposition.js'], _modules['Core/Templating.js'], _modules['Core/Globals.js'], _modules['Core/Utilities.js']], function (DataGroupingAxisComposition, DataGroupingDefaults, DataGroupingSeriesComposition, F, H, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var format = F.format;\n        var composed = H.composed;\n        var addEvent = U.addEvent, extend = U.extend, isNumber = U.isNumber, pick = U.pick, pushUnique = U.pushUnique;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function compose(AxisClass, SeriesClass, TooltipClass) {\n            DataGroupingAxisComposition.compose(AxisClass);\n            DataGroupingSeriesComposition.compose(SeriesClass);\n            if (TooltipClass &&\n                pushUnique(composed, 'DataGrouping')) {\n                addEvent(TooltipClass, 'headerFormatter', onTooltipHeaderFormatter);\n            }\n        }\n        /**\n         * Extend the original method, make the tooltip's header reflect the grouped\n         * range.\n         * @private\n         */\n        function onTooltipHeaderFormatter(e) {\n            var _a;\n            var chart = this.chart, time = chart.time, labelConfig = e.labelConfig, series = labelConfig.series, point = labelConfig.point, options = series.options, tooltipOptions = series.tooltipOptions, dataGroupingOptions = options.dataGrouping, xAxis = series.xAxis;\n            var xDateFormat = tooltipOptions.xDateFormat, xDateFormatEnd, currentDataGrouping, dateTimeLabelFormats, labelFormats, formattedKey, formatString = tooltipOptions[e.isFooter ? 'footerFormat' : 'headerFormat'];\n            // apply only to grouped series\n            if (xAxis &&\n                xAxis.options.type === 'datetime' &&\n                dataGroupingOptions &&\n                isNumber(labelConfig.key)) {\n                // set variables\n                currentDataGrouping = series.currentDataGrouping;\n                dateTimeLabelFormats = dataGroupingOptions.dateTimeLabelFormats ||\n                    // Fallback to commonOptions (#9693)\n                    DataGroupingDefaults.common.dateTimeLabelFormats;\n                // if we have grouped data, use the grouping information to get the\n                // right format\n                if (currentDataGrouping) {\n                    labelFormats = dateTimeLabelFormats[currentDataGrouping.unitName];\n                    if (currentDataGrouping.count === 1) {\n                        xDateFormat = labelFormats[0];\n                    }\n                    else {\n                        xDateFormat = labelFormats[1];\n                        xDateFormatEnd = labelFormats[2];\n                    }\n                    // if not grouped, and we don't have set the xDateFormat option, get the\n                    // best fit, so if the least distance between points is one minute, show\n                    // it, but if the least distance is one day, skip hours and minutes etc.\n                }\n                else if (!xDateFormat && dateTimeLabelFormats && xAxis.dateTime) {\n                    xDateFormat = xAxis.dateTime.getXDateFormat(labelConfig.x, tooltipOptions.dateTimeLabelFormats);\n                }\n                var groupStart = pick((_a = series.groupMap) === null || _a === void 0 ? void 0 : _a[point.index].groupStart, labelConfig.key), groupEnd = groupStart + (currentDataGrouping === null || currentDataGrouping === void 0 ? void 0 : currentDataGrouping.totalRange) - 1;\n                formattedKey = time.dateFormat(xDateFormat, groupStart);\n                if (xDateFormatEnd) {\n                    formattedKey += time.dateFormat(xDateFormatEnd, groupEnd);\n                }\n                // Replace default header style with class name\n                if (series.chart.styledMode) {\n                    formatString = this.styledModeFormat(formatString);\n                }\n                // return the replaced format\n                e.text = format(formatString, {\n                    point: extend(labelConfig.point, { key: formattedKey }),\n                    series: series\n                }, chart);\n                e.preventDefault();\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var DataGroupingComposition = {\n            compose: compose,\n            groupData: DataGroupingSeriesComposition.groupData\n        };\n        /* *\n         *\n         *  API Declarations\n         *\n         * */\n        /**\n         * @typedef {\"average\"|\"averages\"|\"open\"|\"high\"|\"low\"|\"close\"|\"sum\"} Highcharts.DataGroupingApproximationValue\n         */\n        /**\n         * The position of the point inside the group.\n         *\n         * @typedef    {\"start\"|\"middle\"|\"end\"} Highcharts.DataGroupingAnchor\n         */\n        /**\n         * The position of the first or last point in the series inside the group.\n         *\n         * @typedef    {\"start\"|\"middle\"|\"end\"|\"firstPoint\"|\"lastPoint\"} Highcharts.DataGroupingAnchorExtremes\n         */\n        /**\n         * Highcharts Stock only.\n         *\n         * @product highstock\n         * @interface Highcharts.DataGroupingInfoObject\n         */ /**\n        * @name Highcharts.DataGroupingInfoObject#length\n        * @type {number}\n        */ /**\n        * @name Highcharts.DataGroupingInfoObject#options\n        * @type {Highcharts.SeriesOptionsType|undefined}\n        */ /**\n        * @name Highcharts.DataGroupingInfoObject#start\n        * @type {number}\n        */\n        /**\n         * Highcharts Stock only.\n         *\n         * @product highstock\n         * @interface Highcharts.DataGroupingResultObject\n         */ /**\n        * @name Highcharts.DataGroupingResultObject#groupedXData\n        * @type {Array<number>}\n        */ /**\n        * @name Highcharts.DataGroupingResultObject#groupedYData\n        * @type {Array<(number|null|undefined)>|Array<Array<(number|null|undefined)>>}\n        */ /**\n        * @name Highcharts.DataGroupingResultObject#groupMap\n        * @type {Array<DataGroupingInfoObject>}\n        */\n        /**\n         * Highcharts Stock only. If a point object is created by data\n         * grouping, it doesn't reflect actual points in the raw\n         * data. In this case, the `dataGroup` property holds\n         * information that points back to the raw data.\n         *\n         * - `dataGroup.start` is the index of the first raw data\n         *   point in the group.\n         *\n         * - `dataGroup.length` is the amount of points in the\n         *   group.\n         *\n         * @sample stock/members/point-datagroup\n         *         Click to inspect raw data points\n         *\n         * @product highstock\n         *\n         * @name Highcharts.Point#dataGroup\n         * @type {Highcharts.DataGroupingInfoObject|undefined}\n         */\n        (''); // detach doclets above\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * Data grouping is the concept of sampling the data values into larger\n         * blocks in order to ease readability and increase performance of the\n         * JavaScript charts. Highcharts Stock by default applies data grouping when\n         * the points become closer than a certain pixel value, determined by\n         * the `groupPixelWidth` option.\n         *\n         * If data grouping is applied, the grouping information of grouped\n         * points can be read from the [Point.dataGroup](\n         * /class-reference/Highcharts.Point#dataGroup). If point options other than\n         * the data itself are set, for example `name` or `color` or custom properties,\n         * the grouping logic doesn't know how to group it. In this case the options of\n         * the first point instance are copied over to the group point. This can be\n         * altered through a custom `approximation` callback function.\n         *\n         * @declare   Highcharts.DataGroupingOptionsObject\n         * @product   highstock\n         * @requires  product:highstock\n         * @requires  module:modules/datagrouping\n         * @apioption plotOptions.series.dataGrouping\n         */\n        /**\n         * Specifies how the points should be located on the X axis inside the group.\n         * Points that are extremes can be set separately. Available options:\n         *\n         * - `start` places the point at the beginning of the group\n         * (e.g. range 00:00:00 - 23:59:59 -> 00:00:00)\n         *\n         * - `middle` places the point in the middle of the group\n         * (e.g. range 00:00:00 - 23:59:59 -> 12:00:00)\n         *\n         * - `end` places the point at the end of the group\n         * (e.g. range 00:00:00 - 23:59:59 -> 23:59:59)\n         *\n         * @sample {highstock} stock/plotoptions/series-datagrouping-anchor\n         *         Changing the point x-coordinate inside the group.\n         *\n         * @see [dataGrouping.firstAnchor](#plotOptions.series.dataGrouping.firstAnchor)\n         * @see [dataGrouping.lastAnchor](#plotOptions.series.dataGrouping.lastAnchor)\n         *\n         * @type       {Highcharts.DataGroupingAnchor}\n         * @since 9.1.0\n         * @default    start\n         * @apioption  plotOptions.series.dataGrouping.anchor\n         */\n        /**\n         * The method of approximation inside a group. When for example 30 days\n         * are grouped into one month, this determines what value should represent\n         * the group. Possible values are \"average\", \"averages\", \"open\", \"high\",\n         * \"low\", \"close\" and \"sum\". For OHLC and candlestick series the approximation\n         * is \"ohlc\" by default, which finds the open, high, low and close values\n         * within all the grouped data. For ranges, the approximation is \"range\",\n         * which finds the low and high values. For multi-dimensional data,\n         * like ranges and OHLC, \"averages\" will compute the average for each\n         * dimension.\n         *\n         * Custom aggregate methods can be added by assigning a callback function\n         * as the approximation. This function takes a numeric array as the\n         * argument and should return a single numeric value or `null`. Note\n         * that the numeric array will never contain null values, only true\n         * numbers. Instead, if null values are present in the raw data, the\n         * numeric array will have an `.hasNulls` property set to `true`. For\n         * single-value data sets the data is available in the first argument\n         * of the callback function. For OHLC data sets, all the open values\n         * are in the first argument, all high values in the second etc.\n         *\n         * Since v4.2.7, grouping meta data is available in the approximation\n         * callback from `this.dataGroupInfo`. It can be used to extract information\n         * from the raw data.\n         *\n         * Defaults to `average` for line-type series, `sum` for columns, `range`\n         * for range series, `hlc` for HLC, and `ohlc` for OHLC and candlestick.\n         *\n         * @sample {highstock} stock/plotoptions/series-datagrouping-approximation\n         *         Approximation callback with custom data\n         * @sample {highstock} stock/plotoptions/series-datagrouping-simple-approximation\n         *         Simple approximation demo\n         *\n         * @type       {Highcharts.DataGroupingApproximationValue|Function}\n         * @apioption  plotOptions.series.dataGrouping.approximation\n         */\n        /**\n         * Datetime formats for the header of the tooltip in a stock chart.\n         * The format can vary within a chart depending on the currently selected\n         * time range and the current data grouping.\n         *\n         * The default formats are:\n         * ```js\n         * {\n         *     millisecond: [\n         *         '%A, %e %b, %H:%M:%S.%L', '%A, %e %b, %H:%M:%S.%L', '-%H:%M:%S.%L'\n         *     ],\n         *     second: ['%A, %e %b, %H:%M:%S', '%A, %e %b, %H:%M:%S', '-%H:%M:%S'],\n         *     minute: ['%A, %e %b, %H:%M', '%A, %e %b, %H:%M', '-%H:%M'],\n         *     hour: ['%A, %e %b, %H:%M', '%A, %e %b, %H:%M', '-%H:%M'],\n         *     day: ['%A, %e %b %Y', '%A, %e %b', '-%A, %e %b %Y'],\n         *     week: ['Week from %A, %e %b %Y', '%A, %e %b', '-%A, %e %b %Y'],\n         *     month: ['%B %Y', '%B', '-%B %Y'],\n         *     year: ['%Y', '%Y', '-%Y']\n         * }\n         * ```\n         *\n         * For each of these array definitions, the first item is the format\n         * used when the active time span is one unit. For instance, if the\n         * current data applies to one week, the first item of the week array\n         * is used. The second and third items are used when the active time\n         * span is more than two units. For instance, if the current data applies\n         * to two weeks, the second and third item of the week array are used,\n         *  and applied to the start and end date of the time span.\n         *\n         * @type      {Object}\n         * @apioption plotOptions.series.dataGrouping.dateTimeLabelFormats\n         */\n        /**\n         * Enable or disable data grouping.\n         *\n         * @type      {boolean}\n         * @default   true\n         * @apioption plotOptions.series.dataGrouping.enabled\n         */\n        /**\n         * Specifies how the first grouped point is positioned on the xAxis.\n         * If firstAnchor and/or lastAnchor are defined, then those options take\n         * precedence over anchor for the first and/or last grouped points.\n         * Available options:\n         *\n         * -`start` places the point at the beginning of the group\n         * (e.g. range 00:00:00 - 23:59:59 -> 00:00:00)\n         *\n         * -`middle` places the point in the middle of the group\n         * (e.g. range 00:00:00 - 23:59:59 -> 12:00:00)\n         *\n         * -`end` places the point at the end of the group\n         * (e.g. range 00:00:00 - 23:59:59 -> 23:59:59)\n         *\n         * -`firstPoint` the first point in the group\n         * (e.g. points at 00:13, 00:35, 00:59 -> 00:13)\n         *\n         * -`lastPoint` the last point in the group\n         * (e.g. points at 00:13, 00:35, 00:59 -> 00:59)\n         *\n         * @sample {highstock} stock/plotoptions/series-datagrouping-first-anchor\n         *         Applying first and last anchor.\n         *\n         * @see [dataGrouping.anchor](#plotOptions.series.dataGrouping.anchor)\n         *\n         * @type       {Highcharts.DataGroupingAnchorExtremes}\n         * @since 9.1.0\n         * @default    start\n         * @apioption  plotOptions.series.dataGrouping.firstAnchor\n         */\n        /**\n         * When data grouping is forced, it runs no matter how small the intervals\n         * are. This can be handy for example when the sum should be calculated\n         * for values appearing at random times within each hour.\n         *\n         * @type      {boolean}\n         * @default   false\n         * @apioption plotOptions.series.dataGrouping.forced\n         */\n        /**\n         * The approximate pixel width of each group. If for example a series\n         * with 30 points is displayed over a 600 pixel wide plot area, no grouping\n         * is performed. If however the series contains so many points that\n         * the spacing is less than the groupPixelWidth, Highcharts will try\n         * to group it into appropriate groups so that each is more or less\n         * two pixels wide. If multiple series with different group pixel widths\n         * are drawn on the same x axis, all series will take the greatest width.\n         * For example, line series have 2px default group width, while column\n         * series have 10px. If combined, both the line and the column will\n         * have 10px by default.\n         *\n         * @type      {number}\n         * @default   2\n         * @apioption plotOptions.series.dataGrouping.groupPixelWidth\n         */\n        /**\n         * By default only points within the visible range are grouped. Enabling this\n         * option will force data grouping to calculate all grouped points for a given\n         * dataset. That option prevents for example a column series from calculating\n         * a grouped point partially. The effect is similar to\n         * [Series.getExtremesFromAll](#plotOptions.series.getExtremesFromAll) but does\n         * not affect yAxis extremes.\n         *\n         * @sample {highstock} stock/plotoptions/series-datagrouping-groupall/\n         *         Two series with the same data but different groupAll setting\n         *\n         * @type      {boolean}\n         * @default   false\n         * @since     6.1.0\n         * @apioption plotOptions.series.dataGrouping.groupAll\n         */\n        /**\n         * Specifies how the last grouped point is positioned on the xAxis.\n         * If firstAnchor and/or lastAnchor are defined, then those options take\n         * precedence over anchor for the first and/or last grouped points.\n         * Available options:\n         *\n         * -`start` places the point at the beginning of the group\n         * (e.g. range 00:00:00 - 23:59:59 -> 00:00:00)\n         *\n         * -`middle` places the point in the middle of the group\n         * (e.g. range 00:00:00 - 23:59:59 -> 12:00:00)\n         *\n         * -`end` places the point at the end of the group\n         * (e.g. range 00:00:00 - 23:59:59 -> 23:59:59)\n         *\n         * -`firstPoint` the first point in the group\n         * (e.g. points at 00:13, 00:35, 00:59 -> 00:13)\n         *\n         * -`lastPoint` the last point in the group\n         * (e.g. points at 00:13, 00:35, 00:59 -> 00:59)\n         *\n         * @sample {highstock} stock/plotoptions/series-datagrouping-first-anchor\n         *         Applying first and last anchor.\n         *\n         * @sample {highstock} stock/plotoptions/series-datagrouping-last-anchor\n         *         Applying the last anchor in the chart with live data.\n         *\n         * @see [dataGrouping.anchor](#plotOptions.series.dataGrouping.anchor)\n         *\n         * @type       {Highcharts.DataGroupingAnchorExtremes}\n         * @since 9.1.0\n         * @default    start\n         * @apioption  plotOptions.series.dataGrouping.lastAnchor\n         */\n        /**\n         * Normally, a group is indexed by the start of that group, so for example\n         * when 30 daily values are grouped into one month, that month's x value\n         * will be the 1st of the month. This apparently shifts the data to\n         * the left. When the smoothed option is true, this is compensated for.\n         * The data is shifted to the middle of the group, and min and max\n         * values are preserved. Internally, this is used in the Navigator series.\n         *\n         * @type      {boolean}\n         * @default   false\n         * @deprecated\n         * @apioption plotOptions.series.dataGrouping.smoothed\n         */\n        /**\n         * An array determining what time intervals the data is allowed to be\n         * grouped to. Each array item is an array where the first value is\n         * the time unit and the second value another array of allowed multiples.\n         *\n         * Defaults to:\n         * ```js\n         * units: [[\n         *     'millisecond', // unit name\n         *     [1, 2, 5, 10, 20, 25, 50, 100, 200, 500] // allowed multiples\n         * ], [\n         *     'second',\n         *     [1, 2, 5, 10, 15, 30]\n         * ], [\n         *     'minute',\n         *     [1, 2, 5, 10, 15, 30]\n         * ], [\n         *     'hour',\n         *     [1, 2, 3, 4, 6, 8, 12]\n         * ], [\n         *     'day',\n         *     [1]\n         * ], [\n         *     'week',\n         *     [1]\n         * ], [\n         *     'month',\n         *     [1, 3, 6]\n         * ], [\n         *     'year',\n         *     null\n         * ]]\n         * ```\n         *\n         * @type      {Array<Array<string,(Array<number>|null)>>}\n         * @apioption plotOptions.series.dataGrouping.units\n         */\n        /**\n         * The approximate pixel width of each group. If for example a series\n         * with 30 points is displayed over a 600 pixel wide plot area, no grouping\n         * is performed. If however the series contains so many points that\n         * the spacing is less than the groupPixelWidth, Highcharts will try\n         * to group it into appropriate groups so that each is more or less\n         * two pixels wide. Defaults to `10`.\n         *\n         * @sample {highstock} stock/plotoptions/series-datagrouping-grouppixelwidth/\n         *         Two series with the same data density but different groupPixelWidth\n         *\n         * @type      {number}\n         * @default   10\n         * @apioption plotOptions.column.dataGrouping.groupPixelWidth\n         */\n        ''; // required by JSDoc parsing\n\n        return DataGroupingComposition;\n    });\n    _registerModule(_modules, 'masters/modules/datagrouping.src.js', [_modules['Core/Globals.js'], _modules['Extensions/DataGrouping/ApproximationDefaults.js'], _modules['Extensions/DataGrouping/ApproximationRegistry.js'], _modules['Extensions/DataGrouping/DataGrouping.js']], function (Highcharts, ApproximationDefaults, ApproximationRegistry, DataGrouping) {\n\n        var G = Highcharts;\n        G.dataGrouping = G.dataGrouping || {};\n        G.dataGrouping.approximationDefaults = (G.dataGrouping.approximationDefaults ||\n            ApproximationDefaults);\n        G.dataGrouping.approximations = (G.dataGrouping.approximations ||\n            ApproximationRegistry);\n        DataGrouping.compose(G.Axis, G.Series, G.Tooltip);\n\n        return Highcharts;\n    });\n    _registerModule(_modules, 'Extensions/Annotations/NavigationBindingsUtilities.js', [_modules['Core/Utilities.js']], function (U) {\n        /* *\n         *\n         *  (c) 2009-2024 Highsoft, Black Label\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var defined = U.defined, isNumber = U.isNumber, pick = U.pick;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        /**\n         * Define types for editable fields per annotation. There is no need to define\n         * numbers, because they won't change their type to string.\n         * @private\n         */\n        var annotationsFieldsTypes = {\n            backgroundColor: 'string',\n            borderColor: 'string',\n            borderRadius: 'string',\n            color: 'string',\n            fill: 'string',\n            fontSize: 'string',\n            labels: 'string',\n            name: 'string',\n            stroke: 'string',\n            title: 'string'\n        };\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Returns the first xAxis or yAxis that was clicked with its value.\n         *\n         * @private\n         *\n         * @param {Array<Highcharts.PointerAxisCoordinateObject>} coords\n         *        All the chart's x or y axes with a current pointer's axis value.\n         *\n         * @return {Highcharts.PointerAxisCoordinateObject}\n         *         Object with a first found axis and its value that pointer\n         *         is currently pointing.\n         */\n        function getAssignedAxis(coords) {\n            return coords.filter(function (coord) {\n                var extremes = coord.axis.getExtremes(), axisMin = extremes.min, axisMax = extremes.max, \n                // Correct axis edges when axis has series\n                // with pointRange (like column)\n                minPointOffset = pick(coord.axis.minPointOffset, 0);\n                return isNumber(axisMin) && isNumber(axisMax) &&\n                    coord.value >= (axisMin - minPointOffset) &&\n                    coord.value <= (axisMax + minPointOffset) &&\n                    // don't count navigator axis\n                    !coord.axis.options.isInternal;\n            })[0]; // If the axes overlap, return the first axis that was found.\n        }\n        /**\n         * Get field type according to value\n         *\n         * @private\n         *\n         * @param {'boolean'|'number'|'string'} value\n         * Atomic type (one of: string, number, boolean)\n         *\n         * @return {'checkbox'|'number'|'text'}\n         * Field type (one of: text, number, checkbox)\n         */\n        function getFieldType(key, value) {\n            var predefinedType = annotationsFieldsTypes[key];\n            var fieldType = typeof value;\n            if (defined(predefinedType)) {\n                fieldType = predefinedType;\n            }\n            return {\n                'string': 'text',\n                'number': 'number',\n                'boolean': 'checkbox'\n            }[fieldType];\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var NavigationBindingUtilities = {\n            annotationsFieldsTypes: annotationsFieldsTypes,\n            getAssignedAxis: getAssignedAxis,\n            getFieldType: getFieldType\n        };\n\n        return NavigationBindingUtilities;\n    });\n    _registerModule(_modules, 'Extensions/MouseWheelZoom/MouseWheelZoom.js', [_modules['Core/Utilities.js'], _modules['Extensions/Annotations/NavigationBindingsUtilities.js']], function (U, NBU) {\n        /* *\n         *\n         *  (c) 2023 Torstein Honsi, Askel Eirik Johansson\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var addEvent = U.addEvent, isObject = U.isObject, pick = U.pick, defined = U.defined, merge = U.merge;\n        var getAssignedAxis = NBU.getAssignedAxis;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        var composedClasses = [], defaultOptions = {\n            enabled: true,\n            sensitivity: 1.1\n        };\n        var wheelTimer;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        var optionsToObject = function (options) {\n            if (!isObject(options)) {\n                options = {\n                    enabled: options !== null && options !== void 0 ? options : true\n                };\n            }\n            return merge(defaultOptions, options);\n        };\n        /**\n         * @private\n         */\n        var zoomBy = function (chart, howMuch, xAxis, yAxis, mouseX, mouseY, options) {\n            var type = pick(options.type, chart.zooming.type, '');\n            var axes = [];\n            if (type === 'x') {\n                axes = xAxis;\n            }\n            else if (type === 'y') {\n                axes = yAxis;\n            }\n            else if (type === 'xy') {\n                axes = chart.axes;\n            }\n            var hasZoomed = chart.transform({\n                axes: axes,\n                // Create imaginary reference and target rectangles around the mouse\n                // point that scales up or down with `howMuch`;\n                to: {\n                    x: mouseX - 5,\n                    y: mouseY - 5,\n                    // Must use 10 to get passed the limit for too small reference.\n                    // Below this, the transform will default to a pan.\n                    width: 10,\n                    height: 10\n                },\n                from: {\n                    x: mouseX - 5 * howMuch,\n                    y: mouseY - 5 * howMuch,\n                    width: 10 * howMuch,\n                    height: 10 * howMuch\n                },\n                trigger: 'mousewheel'\n            });\n            if (hasZoomed) {\n                if (defined(wheelTimer)) {\n                    clearTimeout(wheelTimer);\n                }\n                // Some time after the last mousewheel event, run drop. In case any of\n                // the affected axes had `startOnTick` or `endOnTick`, they will be\n                // re-adjusted now.\n                wheelTimer = setTimeout(function () {\n                    var _a;\n                    (_a = chart.pointer) === null || _a === void 0 ? void 0 : _a.drop();\n                }, 400);\n            }\n            return hasZoomed;\n        };\n        /**\n         * @private\n         */\n        function onAfterGetContainer() {\n            var _this = this;\n            var wheelZoomOptions = optionsToObject(this.zooming.mouseWheel);\n            if (wheelZoomOptions.enabled) {\n                addEvent(this.container, 'wheel', function (e) {\n                    var _a, _b;\n                    e = ((_a = _this.pointer) === null || _a === void 0 ? void 0 : _a.normalize(e)) || e;\n                    var pointer = _this.pointer, allowZoom = pointer && !pointer.inClass(e.target, 'highcharts-no-mousewheel');\n                    // Firefox uses e.detail, WebKit and IE uses deltaX, deltaY, deltaZ.\n                    if (_this.isInsidePlot(e.chartX - _this.plotLeft, e.chartY - _this.plotTop) && allowZoom) {\n                        var wheelSensitivity = wheelZoomOptions.sensitivity || 1.1, delta = e.detail || ((e.deltaY || 0) / 120), xAxisCoords = getAssignedAxis(pointer.getCoordinates(e).xAxis), yAxisCoords = getAssignedAxis(pointer.getCoordinates(e).yAxis);\n                        var hasZoomed = zoomBy(_this, Math.pow(wheelSensitivity, delta), xAxisCoords ? [xAxisCoords.axis] : _this.xAxis, yAxisCoords ? [yAxisCoords.axis] : _this.yAxis, e.chartX, e.chartY, wheelZoomOptions);\n                        // Prevent page scroll\n                        if (hasZoomed) {\n                            (_b = e.preventDefault) === null || _b === void 0 ? void 0 : _b.call(e);\n                        }\n                    }\n                });\n            }\n        }\n        /**\n         * @private\n         */\n        function compose(ChartClass) {\n            if (composedClasses.indexOf(ChartClass) === -1) {\n                composedClasses.push(ChartClass);\n                addEvent(ChartClass, 'afterGetContainer', onAfterGetContainer);\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var MouseWheelZoomComposition = {\n            compose: compose\n        };\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * The mouse wheel zoom is a feature included in Highcharts Stock, but is also\n         * available for Highcharts Core as a module. Zooming with the mouse wheel is\n         * enabled by default in Highcharts Stock. In Highcharts Core it is enabled if\n         * [chart.zooming.type](chart.zooming.type) is set. It can be disabled by\n         * setting this option to `false`.\n         *\n         * @type      {boolean|object}\n         * @since 11.1.0\n         * @requires  modules/mouse-wheel-zoom\n         * @sample    {highcharts} highcharts/mouse-wheel-zoom/enabled\n         *            Enable or disable\n         * @sample    {highstock} stock/mouse-wheel-zoom/enabled\n         *            Enable or disable\n         * @apioption chart.zooming.mouseWheel\n         */\n        /**\n         * Zooming with the mouse wheel can be disabled by setting this option to\n         * `false`.\n         *\n         * @type      {boolean}\n         * @default   true\n         * @since 11.1.0\n         * @requires  modules/mouse-wheel-zoom\n         * @apioption chart.zooming.mouseWheel.enabled\n         */\n        /**\n         * Adjust the sensitivity of the zoom. Sensitivity of mouse wheel or trackpad\n         * scrolling. `1` is no sensitivity, while with `2`, one mouse wheel delta will\n         * zoom in `50%`.\n         *\n         * @type      {number}\n         * @default   1.1\n         * @since 11.1.0\n         * @requires  modules/mouse-wheel-zoom\n         * @sample    {highcharts} highcharts/mouse-wheel-zoom/sensitivity\n         *            Change mouse wheel zoom sensitivity\n         * @sample    {highstock} stock/mouse-wheel-zoom/sensitivity\n         *            Change mouse wheel zoom sensitivity\n         * @apioption chart.zooming.mouseWheel.sensitivity\n         */\n        /**\n         * Decides in what dimensions the user can zoom scrolling the wheel. Can be one\n         * of `x`, `y` or `xy`. In Highcharts Core, if not specified here, it will\n         * inherit the type from [chart.zooming.type](chart.zooming.type). In Highcharts\n         * Stock, it defaults to `x`.\n         *\n         * Note that particularly with mouse wheel in the y direction, the zoom is\n         * affected by the default [yAxis.startOnTick](#yAxis.startOnTick) and\n         * [endOnTick]((#yAxis.endOnTick)) settings. In order to respect these settings,\n         * the zoom level will adjust after the user has stopped zooming. To prevent\n         * this, consider setting `startOnTick` and `endOnTick` to `false`.\n         *\n         * @type      {string}\n         * @default   {highcharts} undefined\n         * @default   {highstock} x\n         * @validvalue [\"x\", \"y\", \"xy\"]\n         * @since 11.1.0\n         * @requires  modules/mouse-wheel-zoom\n         * @apioption chart.zooming.mouseWheel.type\n         */\n        (''); // Keeps doclets above in JS file\n\n        return MouseWheelZoomComposition;\n    });\n    _registerModule(_modules, 'masters/modules/mouse-wheel-zoom.src.js', [_modules['Core/Globals.js'], _modules['Extensions/MouseWheelZoom/MouseWheelZoom.js']], function (Highcharts, MouseWheelZoom) {\n\n        var G = Highcharts;\n        G.MouseWheelZoom = G.MouseWheelZoom || MouseWheelZoom;\n        G.MouseWheelZoom.compose(G.Chart);\n\n        return Highcharts;\n    });\n    _registerModule(_modules, 'masters/modules/stock.src.js', [_modules['Core/Globals.js'], _modules['Series/DataModifyComposition.js'], _modules['Stock/Navigator/Navigator.js'], _modules['Core/Axis/OrdinalAxis.js'], _modules['Stock/RangeSelector/RangeSelector.js'], _modules['Stock/Scrollbar/Scrollbar.js'], _modules['Core/Chart/StockChart.js'], _modules['Series/OHLC/OHLCSeries.js'], _modules['Series/Flags/FlagsSeries.js']], function (Highcharts, DataModifyComposition, Navigator, OrdinalAxis, RangeSelector, Scrollbar, StockChart, OHLCSeries, FlagsSeries) {\n\n        var G = Highcharts;\n        // Classes\n        G.Navigator = G.Navigator || Navigator;\n        G.OrdinalAxis = G.OrdinalAxis || OrdinalAxis;\n        G.RangeSelector = G.RangeSelector || RangeSelector;\n        G.Scrollbar = G.Scrollbar || Scrollbar;\n        // Functions\n        G.stockChart = G.stockChart || StockChart.stockChart;\n        G.StockChart = G.StockChart || G.stockChart;\n        G.extend(G.StockChart, StockChart);\n        // Compositions\n        DataModifyComposition.compose(G.Series, G.Axis, G.Point);\n        FlagsSeries.compose(G.Renderer);\n        OHLCSeries.compose(G.Series);\n        G.Navigator.compose(G.Chart, G.Axis, G.Series);\n        G.OrdinalAxis.compose(G.Axis, G.Series, G.Chart);\n        G.RangeSelector.compose(G.Axis, G.Chart);\n        G.Scrollbar.compose(G.Axis);\n        G.StockChart.compose(G.Chart, G.Axis, G.Series, G.SVGRenderer);\n\n        return Highcharts;\n    });\n}));"],"names":["factory","module","exports","define","amd","Highcharts","undefined","_modules","_registerModule","obj","path","args","fn","hasOwnProperty","apply","CustomEvent","window","dispatchEvent","detail","Axis","Point","Series","U","DataModifyComposition","pointTooltipFormatter","prototype","tooltipFormatter","addEvent","arrayMax","arrayMin","correctFloat","defined","isArray","isNumber","isString","pick","setModifier","mode","modeState","redraw","isXAxis","series","forEach","setCompare","setCumulative","chart","pointFormat","point","numberFormatter","replace","value","tooltipOptions","changeDecimals","change","cumulativeSum","afterInit","dataModify","compare","options","cumulative","Additions","initCompare","initCumulative","afterGetExtremes","e","dataExtremes","activeYData","extremes","modifyValue","dataMin","dataMax","length","getCumulativeExtremes","seriesSetCompare","userOptions","update","points","afterProcessData","xAxis","processedYData","processedXData","length_1","compareStart","keyIndex","i","pointArrayMap","indexOf","pointValKey","compareValue","min","axisSetCompare","seriesSetCumulative","axisSetCumulative","compose","SeriesClass","AxisClass","PointClass","axisProto","pointProto","seriesProto","cumulativeDataMin","Infinity","cumulativeDataMax","reduce","prev","cur","sum","Math","max","index","compareBase","prevPoint","H","NavigatorConstructor","isTouchDevice","merge","composedMembers","onChartAfterAddSeries","navigator","setBaseSeries","onChartAfterSetChartSize","_a","legendOptions","yAxis","legend","scrollbarHeight","scrollButtonSize","inverted","left","opposite","chartWidth","height","spacing","top","plotTop","plotLeft","navigatorOptions","chartHeight","scrollbar","margin","rangeSelector","extraBottomMargin","getHeight","verticalAlign","layout","enabled","floating","legendHeight","titleOffset","setAxisSize","onChartAfterUpdate","event","scroller","animation","onChartBeforeRender","onChartBeforeShowResetZoom","chartOptions","zooming","type","pinchType","onChartCallback","getExtremes","render","onChartUpdate","scrollbarOptions","ChartClass","NavigatorClass","pushUnique","chartProto","callbacks","push","onAxisInit","axis","navigatorAxis","NavigatorAxisAdditions","onAxisSetExtremes","zoomed","zoomType","trigger","range","previousZoom","preventDefault","keepProps","includes","destroy","toFixedRange","pxMin","pxMax","fixedMin","fixedMax","overscroll","ordinal","convertOverscroll","newMin","translate","horiz","newMax","fixedRange","halfPointRange","pointRange","maxWithOverscroll","Color","SeriesRegistry","color","parse","seriesTypes","maskInside","handles","width","symbols","lineWidth","backgroundColor","borderColor","maskFill","setOpacity","get","outlineColor","outlineWidth","areaspline","fillOpacity","sonification","dataGrouping","approximation","groupPixelWidth","firstAnchor","anchor","lastAnchor","units","dataLabels","zIndex","id","className","lineColor","marker","threshold","tickLength","gridLineColor","gridLineWidth","tickPixelInterval","labels","align","style","fontSize","opacity","textOutline","x","y","crosshair","startOnTick","endOnTick","minPadding","maxPadding","title","text","tickWidth","_x","_y","halfWidth","markerPosition","round","setFixedRange","D","NavigatorDefaults","NavigatorSymbols","RendererRegistry","StockUtilities","setOptions","composed","getRendererType","extend","onSeriesAfterUpdate","isInternal","ScrollbarAxis","Scrollbar","axisMin","axisMax","scrollMin","scrollMax","onAxisAfterGetOffset","scrollbarsOffsets","axisOffset","size","onAxisAfterInit","vertical","renderer","to","from","unitedMin","unitedMax","reversed","shouldUpdateExtremes","DOMType","animate","setExtremes","setRange","onAxisAfterRender","offsetsIndex","offset","axisTitleMargin","axisMargin","position","xPosition","isNaN","ScrollbarClass","barBorderRadius","buttonBorderRadius","buttonsEnabled","liveRedraw","minWidth","step","barBackgroundColor","barBorderWidth","barBorderColor","buttonArrowColor","buttonBackgroundColor","buttonBorderColor","buttonBorderWidth","rifleColor","trackBackgroundColor","trackBorderColor","trackBorderRadius","trackBorderWidth","ScrollbarDefaults","defaultOptions","destroyObjectProperties","fireEvent","removeEvent","_events","chartX","chartY","scrollbarButtons","scrollbarLeft","scrollbarStrokeWidth","scrollbarTop","init","swapXY","seg","temp","len","addEvents","buttonsOrder","buttons","bar","scrollbarGroup","element","track","mouseDownHandler","bind","mouseMoveHandler","mouseUpHandler","buttonToMinClick","buttonToMaxClick","trackClick","ownerDocument","updatePosition","DOMEvent","cursorToScrollbarPosition","normalizedEvent","minWidthDifference","calculatedWidth","xOffset","barWidth","yOffset","removeEvents","prop","drawScrollbarButton","group","g","add","rect","addClass","styledMode","attr","stroke","fill","crisp","r","strokeWidth","arrow","pointer","normalize","mousePosition","initPositions","grabbedCenter","direction","touches","chartPosition","hasDragged","method","rendered","show","translateX","translateY","hide","scrollbarRifles","fromPX","newSize","fullWidth","toPX","ceil","newPos","floor","newRiflesPos","showFull","eventType","svg","boosted","ChartNavigatorComposition","NavigatorComposition","clamp","erase","find","splat","numExt","extreme","_i","arguments","numbers","filter","call","Navigator","drawHandle","verb","parseInt","drawOutline","zoomedMin","zoomedMax","verticalMin","outline","halfOutline","outlineCorrection","navigatorSize","navigatorTop","lineTop","lineBtm","d","drawMasks","navigatorHeight","shades","shade","renderElements","mouseCursor","cursor","navigatorGroup","visibility","hasMask","css","handlesOptions_1","height_1","width_1","symbol","rotation","rotationOriginX","rotationOriginY","baseSeries","navigatorSeries","navigatorWidth","scrollbarXAxis","fake","navigatorEnabled","minRange","maxRange","plotWidth","plotHeight","toPixels","abs","toValue","currentRange","grabbedLeft","grabbedRight","fixedWidth","addMouseEvents","container","eventsToUnbind","onMouseMove","onMouseUp","getPartsEvents","renderTo","concat","modifyNavigatorAxisExtremes","eventName","events","name","navigatorItem","shadesMousedown","ext","navigatorPosition","dragOffset","reversedExtremes","getUnionExtremes","eventArguments","handlesMousedown","baseXAxis","reverse","otherHandlePos","fixedExtreme","pageX","setTimeout","unionExtremes","triggerOp","Object","keys","unbind","removeBaseSeriesEvents","adaptToUpdatedData","updatedDataHandler","modifyBaseAxisExtremes","scrollbarEnabled","Boolean","xAxisIndex","yAxisIndex","baseXaxis","isDirtyBox","breaks","keepOrdinalPadding","zoomEnabled","offsets","alignTicks","data","updateNavigatorSeries","unbindRedraw","scrollTrackWidth","valueRange","addBaseSeriesEvents","addChartEvents","returnFalseOnNoBaseSeries","ret","baseAxis","navAxis","navAxisOptions","baseAxisOptions","baseSeriesOptions","s","showInNavigator","baseOptions","mergedNavSeriesOptions","baseNavigatorOptions","navSeriesMixin","enableMouseTracking","linkedTo","padXAxis","showInLegend","stacking","states","inactive","navSeries","base","chartNavigatorSeriesOptions","linkedNavSeries","userNavOptions","visible","plotOptions","navigatorSeriesData","hasNavigatorData","slice","initSeries","setSortedData","userSeriesOptions","colors","_this","setVisible","remove","getBaseSeriesMin","currentSeriesMin","xData","baseExtremes","baseMin","baseMax","baseDataMin","baseDataMax","stickToMin","stickToMax","hasSetExtremes","eventArgs","Number","MAX_VALUE","userMin","userMax","shouldStickToMax","shouldStickToMin","pointStart","setData","xDataMin","marginName","axes","coll","OrdinalAxis","error","timeUnits","getTimeTicks","normalizedInterval","startOfWeek","positions","closestDistance","findHigherRanks","end","segmentPositions","hasCrossedHigherRank","info","outsideMax","higherRanks","tickPixelIntervalOption","time","segmentStarts","start","groupPositions","lastGroupPosition","posLength","shift","unitRange","hour","dateFormat","translatedArr","distances","itemToRemove","translated","lastTranslated","medianDistance","distance","sort","splice","index2val","ordinalPositions","lin2val","val","localMin","old","localA","transA","getExtendedPositions","pixelVal","minPixelPadding","getIndexOfPoint","mantissa","leftNeighbour","rightNeighbour","getIndexInArray","findIndexOf","percent","onAxisFoundExtremes","originalOrdinalRange","onAxisAfterSetScale","isDirty","isOrdinal","onAxisInitialAxisTranslation","beforeSetTickPositions","tickInterval","postProcessTickInterval","onChartPan","originalEvent","panning","runBase","mouseDownX","hoverPoints","closestPointRange","overscrollPointsRange","movedUnits","translationSlope","slope","extendedOrdinalPositions","extendedAxis","index2val_1","val2lin_1","val2lin","trimmedRange","setState","test","onSeriesUpdatedData","toIndex","ordinalIndex","ordinalLength","length_2","originalPositionsReference","diff","approximateIndexOffset","ordinal2lin","uniqueOrdinalPositions","dist","minIndex","maxIndex","hasBreaks","brokenAxis","useOrdinal","adjustOrdinalExtremesPoints","isBoosted","distanceBetweenPoint_1","reserveSpace","takeOrdinalPosition","a","b","unshift","pop","forceOrdinal","getOverscrollPositions","groupIntervalFactor","sortedArray","key","indirectSearch","middle","withOverscroll","fakeAxis","constructor","grouping","currentDataGrouping","count","unitName","fakeSeries","applyGrouping","getGroupPixelWidth","getGroupIntervalFactor","destroyGroupedData","noop","getProcessedData","forced","processData","hasExtremesChanged","basePointRange","xMin","xMax","median","ordinalArray","firstPointX","firstPointVal","hasPointsInside","some","firstPoint","plotX","ordinalPointPixelInterval","shiftIndex","extraRange","ordinalSlope","calculateOverscroll","overscrollPercentage","overscrollValue","pixelToPercent","limitedOverscrollValue","lang","rangeSelectorZoom","rangeSelectorFrom","rangeSelectorTo","allButtonsEnabled","buttonSpacing","dropdown","buttonTheme","padding","inputBoxBorderColor","inputBoxHeight","inputBoxWidth","inputDateFormat","inputDateParser","inputEditDateFormat","inputEnabled","inputPosition","inputSpacing","selected","buttonPosition","inputStyle","labelStyle","RangeSelectorDefaults","RangeSelectorConstructor","chartDestroyEvents","axisMinFromRange","rangeOptions","getTrueRange","timeName","date","Date","basePeriod","set","getTime","MIN_VALUE","_offsetMin","onChartAfterGetContainer","deferredYTDClick","clickButton","updateNames","setScale","getAxisMargins","extraTopMargin","alignTo","display","spacingBox","placed","onChartDestroy","iEnd","onChartGetMargins","rangeSelectorHeight","marginBottom","onChartRender","optionsRangeSelector","extraBottomMarginWas","extraTopMarginWas","RangeSelectorClass","minFromRange","RangeSelectorComposition","SVGElement","createElement","discardElement","objectEach","pad","pInt","RangeSelector","buttonOptions","defaultButtons","initialButtonGroupWidth","baseXAxisOptions","rangeMin","minSetting","rangeSetting","ctx","ytdExtremes","_range","addOffsetMin","setSelected","forcedDataGrouping","setDataGrouping","frozenStates","preserveDataGrouping","getYTDExtremes","useUTC","_offsetMax","selectedIndex","rangeSelectorButton","selectedOption","blurInputs","minInput","maxInput","blur","computeButtonRange","updateButtonStates","actualRange","hasNoData","hasVisibleSeries","day","ytdMin","ytdMax","selectedExists","isSelectedTooGreat","button","offsetRange","isSelected","isTooGreatRange","isTooSmallRange","state","isYTDButNotSelected","isAllButAlreadyShowingAll","isSameRange","month","year","disable","select","disabled","fixedTimes","millisecond","second","minute","week","offsetMin","offsetMax","getInputValue","input","defaultInputDateParser","setInputValue","inputTime","dateBox","minDateBox","maxDateBox","hcTimeAttr","getAttribute","updatedTime","previousTime","setAttribute","inputTypeFormats","setInputExtremes","format","showInput","inputGroup","isTextInput","_b","_c","_d","_e","_f","border","offsetWidth","offsetHeight","hideInput","inputDate","str","split","join","isSafari","lastIndexOf","getTimezoneOffset","parts","UTC","drawInput","div","chartStyle","isMin","updateExtremes","chartAxis","label","on","focus","preferredInputType","char","boxShadow","textAlign","fontFamily","onfocus","onblur","doc","activeElement","keyDown","onchange","onkeypress","keyCode","onkeydown","onkeyup","getPosition","buttonTop","inputTop","now","startOfYear","ts","inputsZIndex","renderButtons","parentNode","insertBefore","minElems","minLabel","maxElems","maxLabel","x_1","getBBox","alignElements","buttonGroup","isMS","currentButtonIndex","zoomText","paddingLeft","paddingRight","textContent","textStr","callDefaultEvent","buttonEvents","click","isActive","hover","navButtonOptions","exporting","navigation","getXOffsetForExportButton","titleCollision","positionButtons","xOffsetForExportButton_1","alignButtonGroup","hasLoaded","xOffsetForExportButton","handleCollision","alignTranslateY","alignAttr","groupHeight","marginTop","buttonLeft","maxButtonWidth","buttonWidth","bBox","groupsOverlap","buttonGroupWidth","inputGroupX","alignOptions","inputGroupWidth","buttonGroupX","moveInputsDown","collapseButtons","expandButtons","isCollapsed","userButtonTheme","getAttribs","hasActiveButton","showDropdown","hideDropdown","hasVisibleDropdown","rangeSelectorGroup","yPosition","buttonPositionY","inputPositionY","subtitle","rSelector","HTMLElement","Chart","F","extendStatics","__extends","setPrototypeOf","__proto__","Array","p","TypeError","String","__","create","getOptions","getDefaultAxisOptions","showLastLabel","categories","getForcedAxisOptions","axisOptions","StockChart","_super","callback","xAxisOptions","yAxisOptions","mouseWheel","tooltip","crosshairs","isStock","map","createAxis","onAxisAfterDrawCrosshair","cross","posx","posy","limit","log","logarithmic","tickInside","tickPosition","snap","crossLabel","formatOption","formatFormat","lin2log","labelAlign","shape","colorIndex","borderRadius","labelGroup","borderWidth","fontWeight","plotY","formatter","dateTime","isInside","isPointInside","crossBox","right","anchorX","anchorY","onAxisAfterHideCrosshair","onAxisAutoLabelAlign","panes","_labelPanes","labelOptions","side","onAxisDestroy","onAxisGetPlotLinePath","x1","y1","x2","y2","axes2","uniqueAxes","transVal","isLinked","linkedParent","axisLeft","axisTop","result","translatedValue","force","acrossPanes","otherColl","opt","axes2_1","A","_loop_1","axis2","unique","pos","axes_1","uniqueAxes_1","skip","transB","uniqueAxes_2","crispPolyLine","onSeriesSetOptions","overrides","is","shadow","radius","seriesForceCropping","dataGroupingOptions","allowDG","svgRendererCrispPolyLine","SVGRendererClass","forceCropping","stockChart","c","HLCPoint","column","pointClass","stickyTracking","HLCSeriesDefaults","ColumnSeries","HLCSeries","extendStem","halfStrokeWidth","getPointPath","graphic","crispCorr","crispX","shapeArgs","plotClose","yBottom","plotHigh","close","drawSinglePoint","pointAttribs","getClassName","drawPoints","attribs","toYData","high","low","names","charAt","toUpperCase","tooltipPos","directTouch","pointAttrToOptions","registerSeriesType","OHLCPoint","open","resolveUpColor","upColor","resolveColor","getZone","zone","applyOptions","hlc","OHLCSeriesDefaults","onSeriesAfterSetOptions","useOhlcData","onSeriesInit","eventOptions","OHLCSeries","_args","plotOpen","CandlestickSeriesDefaults","ohlc","CandlestickSeries","isUp","upLineColor","stateOptions","reversedYAxis","points_1","topBox","bottomBox","hasTopWhisker","hasBottomWhisker","isNew","ColumnPoint","FlagsPoint","ttBelow","isValid","hasNewShapeType","symbolKey","allowOverlapX","stackDistance","fillColor","FlagsSymbols","modifiedMembers","flag","w","h","circle","createPinSymbol","labelX","startSeg","endSeg","labelY","RendererClass","OnSeriesComposition","columnProto","stableSort","getPlotBox","onSeries","lastPoint","leftPoint","lastX","rightPoint","distanceRatio","optionsOnSeries","onData","onKey","pointXOffset","barW","totalRange","substr","state_1","p0_1","p3_1","p1_1","controlPoints","p2_1","calculateCoord","t","pow","tMin","tMax","i_1","tMid","xMid","stackIndex","seriesProto_1","FlagsSeriesDefaults","R","distribute","wrap","FlagsSeries","setClip","outsideRight","centered","optionsY","boxesMap","boxes","useHTML","markerGroup","target","maxDistance_1","box","point_1","plotX_1","graphic_1","proceed","drawTracker","unbindMouseOver","raised","points_3","otherPoint","points_2","clip","sharedClipKey","sharedClips","forceCrop","invertible","noSharedTooltip","sorted","trackerGroups","buildKDTree","StackItem","BrokenAxis","setBreaks","onAxisAfterSetOptions","onAxisAfterSetTickPositions","tickPositions","newPositions","isInAnyBreak","onSeriesAfterGeneratePoints","connectNulls","isPointInBreak","onSeriesAfterRender","drawBreaks","seriesDrawBreaks","brokenAxis_1","breakArray","breaksOutOfRange","brk","isOut","otherBreak","seriesGappedPath","groupingSize","gapSize","gapUnit","current","next","xRange","isNull","stack","stacks","stackKey","stackLabels","total","getGraphPath","gappedPath","isInBreak","repeat","inclusive","lin2Val","nval","val2Lin","findBreakAt","testKeep","inbrk","keep","showPoints","forceRedraw","breaks_1","axisBreak","setAxisTranslation","unitLength","inBrk_1","repeat_1","start_1","breaks_2","breakArrayT_1","breakArray_1","pointRangePadding","min_1","max_1","move","breakSize","staticScale","minPointOffset","G","ApproximationRegistry","average","arr","hasNulls","ApproximationDefaults","averages","common","dateTimeLabelFormats","seriesSpecific","line","spline","area","arearange","columnrange","candlestick","heikinashi","DataGroupingDefaults","AxisConstructor","hasProcessed","dataLength","dgOptions","doGrouping","plotSizeX","onAfterSetScale","seriesOptions","DateTimeAxis","baseGeneratePoints","generatePoints","hasGroupedData","croppedData","groupingEnabled","lastDataGrouping","revertRequireSorting","requireSorting","skipDataGrouping","isCartesian","groupAll","yData","groupedXData","interval","normalizeTimeTickInterval","groupedData","groupData","groupedYData","smoothed","groupMap","anchorPoints","groupedDataLastIndex","anchorIndexIterator","anchorFirstIndex","groupStart","groupLength","firstGroupEnd","lastGroupStart","shiftInterval","allGroupedData","cropData","cropStart","preventGraphAnimation","getDGApproximation","pointX","pointY","groupedY","dataOptions","handleYData","values","pointArrayMapLength","extendedPointArrayMap","approximationFn","valuesLen","dataGroupInfo","optionsToObject","j","onAfterSetOptions","useCommonDataGrouping","dataGroup","DataGroupingAxisComposition","DataGroupingSeriesComposition","onTooltipHeaderFormatter","xDateFormatEnd","labelFormats","formattedKey","labelConfig","xDateFormat","formatString","isFooter","getXDateFormat","groupEnd","styledModeFormat","TooltipClass","DataGrouping","approximationDefaults","approximations","Tooltip","annotationsFieldsTypes","getAssignedAxis","coords","coord","getFieldType","predefinedType","fieldType","NBU","wheelTimer","isObject","composedClasses","sensitivity","zoomBy","howMuch","mouseX","mouseY","hasZoomed","transform","clearTimeout","drop","onAfterGetContainer","wheelZoomOptions","allowZoom","inClass","isInsidePlot","wheelSensitivity","delta","deltaY","xAxisCoords","getCoordinates","yAxisCoords","MouseWheelZoom","Renderer","SVGRenderer"],"mappings":"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"}